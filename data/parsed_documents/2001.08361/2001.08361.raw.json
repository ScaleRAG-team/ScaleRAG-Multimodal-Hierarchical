{
  "title": null,
  "authors": [],
  "source_path": "../data/pdf/2001.08361.pdf",
  "page_count": 30,
  "processed_pages": [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30
  ],
  "counts": {
    "texts": 1006,
    "pictures": 12,
    "tables": 47
  },
  "stats_per_page": [
    {
      "page": 1,
      "text_blocks": 36,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 2,
      "text_blocks": 22,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 3,
      "text_blocks": 15,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 4,
      "text_blocks": 37,
      "layout_blocks": 2,
      "xobjects_found": 1,
      "xobjects_exported": 1,
      "reused_exported": 0,
      "rasterized": 2,
      "tables_found": 1
    },
    {
      "page": 5,
      "text_blocks": 49,
      "layout_blocks": 1,
      "xobjects_found": 1,
      "xobjects_exported": 1,
      "reused_exported": 0,
      "rasterized": 1,
      "tables_found": 2
    },
    {
      "page": 6,
      "text_blocks": 17,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 7,
      "text_blocks": 22,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 8,
      "text_blocks": 47,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 9,
      "text_blocks": 46,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 10,
      "text_blocks": 43,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 11,
      "text_blocks": 40,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 12,
      "text_blocks": 33,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 13,
      "text_blocks": 27,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 14,
      "text_blocks": 44,
      "layout_blocks": 2,
      "xobjects_found": 2,
      "xobjects_exported": 2,
      "reused_exported": 0,
      "rasterized": 2,
      "tables_found": 1
    },
    {
      "page": 15,
      "text_blocks": 25,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 16,
      "text_blocks": 38,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 17,
      "text_blocks": 18,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 18,
      "text_blocks": 11,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 19,
      "text_blocks": 7,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 20,
      "text_blocks": 37,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 3
    },
    {
      "page": 21,
      "text_blocks": 69,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 22,
      "text_blocks": 38,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 23,
      "text_blocks": 32,
      "layout_blocks": 1,
      "xobjects_found": 1,
      "xobjects_exported": 1,
      "reused_exported": 0,
      "rasterized": 1,
      "tables_found": 3
    },
    {
      "page": 24,
      "text_blocks": 80,
      "layout_blocks": 4,
      "xobjects_found": 4,
      "xobjects_exported": 4,
      "reused_exported": 0,
      "rasterized": 4,
      "tables_found": 3
    },
    {
      "page": 25,
      "text_blocks": 50,
      "layout_blocks": 2,
      "xobjects_found": 2,
      "xobjects_exported": 2,
      "reused_exported": 0,
      "rasterized": 2,
      "tables_found": 2
    },
    {
      "page": 26,
      "text_blocks": 38,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 27,
      "text_blocks": 37,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 3
    },
    {
      "page": 28,
      "text_blocks": 25,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 2
    },
    {
      "page": 29,
      "text_blocks": 21,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    },
    {
      "page": 30,
      "text_blocks": 2,
      "layout_blocks": 0,
      "xobjects_found": 0,
      "xobjects_exported": 0,
      "reused_exported": 0,
      "rasterized": 0,
      "tables_found": 1
    }
  ],
  "texts": [
    {
      "page_no": 1,
      "bbox": [
        149.5989990234375,
        99.8338394165039,
        462.4029541015625,
        117.04924011230469
      ],
      "text": "Scaling Laws for Neural Language Models"
    },
    {
      "page_no": 1,
      "bbox": [
        200.25100708007812,
        159.65139770507812,
        264.8936767578125,
        171.1231231689453
      ],
      "text": "Jared Kaplan ∗"
    },
    {
      "page_no": 1,
      "bbox": [
        159.52398681640625,
        177.61549377441406,
        299.0501403808594,
        187.57809448242188
      ],
      "text": "Johns Hopkins University, OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        192.6829833984375,
        194.2275390625,
        265.9080810546875,
        204.1901397705078
      ],
      "text": "jaredk@jhu.edu"
    },
    {
      "page_no": 1,
      "bbox": [
        374.552001953125,
        159.65139770507812,
        451.9756774902344,
        171.1231231689453
      ],
      "text": "Sam McCandlish∗"
    },
    {
      "page_no": 1,
      "bbox": [
        397.468994140625,
        177.61549377441406,
        429.5585021972656,
        187.57809448242188
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        376.9100036621094,
        194.2275390625,
        450.1352844238281,
        204.1901397705078
      ],
      "text": "sam@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        121.95401000976562,
        223.70355224609375,
        184.97738647460938,
        233.66615295410156
      ],
      "text": "Tom Henighan"
    },
    {
      "page_no": 1,
      "bbox": [
        137.42100524902344,
        240.1585235595703,
        169.51052856445312,
        250.12112426757812
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        103.78900146484375,
        256.76953125,
        203.16587829589844,
        266.73211669921875
      ],
      "text": "henighan@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        228.69900512695312,
        223.70355224609375,
        290.32763671875,
        233.66615295410156
      ],
      "text": "Tom B. Brown"
    },
    {
      "page_no": 1,
      "bbox": [
        243.46800231933594,
        240.1585235595703,
        275.5574951171875,
        250.12112426757812
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        222.90899658203125,
        256.76953125,
        296.1341857910156,
        266.73211669921875
      ],
      "text": "tom@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        325.875,
        223.70355224609375,
        394.7863464355469,
        233.66615295410156
      ],
      "text": "Benjamin Chess"
    },
    {
      "page_no": 1,
      "bbox": [
        344.2860107421875,
        240.1585235595703,
        376.3755187988281,
        250.12112426757812
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        315.88299560546875,
        256.76953125,
        404.7994079589844,
        266.73211669921875
      ],
      "text": "bchess@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        438.61199951171875,
        223.70355224609375,
        494.1435241699219,
        233.66615295410156
      ],
      "text": "Rewon Child"
    },
    {
      "page_no": 1,
      "bbox": [
        450.3330078125,
        240.1585235595703,
        482.4225158691406,
        250.12112426757812
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        424.5450134277344,
        256.76953125,
        508.2310485839844,
        266.73211669921875
      ],
      "text": "rewon@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        122.51901245117188,
        286.2465515136719,
        168.7255401611328,
        296.2091369628906
      ],
      "text": "Scott Gray"
    },
    {
      "page_no": 1,
      "bbox": [
        129.57701110839844,
        302.7015075683594,
        161.66653442382812,
        312.66412353515625
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        103.78900909423828,
        319.31256103515625,
        187.4748077392578,
        329.275146484375
      ],
      "text": "scott@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        217.927001953125,
        286.24658203125,
        274.95294189453125,
        296.20916748046875
      ],
      "text": "Alec Radford"
    },
    {
      "page_no": 1,
      "bbox": [
        230.39500427246094,
        302.7015380859375,
        262.4845275878906,
        312.6641540527344
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        207.2220001220703,
        319.3125915527344,
        285.6775207519531,
        329.2751770019531
      ],
      "text": "alec@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        326.35601806640625,
        286.2466125488281,
        373.3894348144531,
        296.2091979980469
      ],
      "text": "Jeffrey Wu"
    },
    {
      "page_no": 1,
      "bbox": [
        333.8280029296875,
        302.7015686035156,
        365.9175109863281,
        312.6641845703125
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        305.42498779296875,
        319.3126220703125,
        394.3414001464844,
        329.27520751953125
      ],
      "text": "jeffwu@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        431.1269836425781,
        286.24664306640625,
        491.17156982421875,
        296.209228515625
      ],
      "text": "Dario Amodei"
    },
    {
      "page_no": 1,
      "bbox": [
        445.1039733886719,
        302.70159912109375,
        477.1934814453125,
        312.6642150878906
      ],
      "text": "OpenAI"
    },
    {
      "page_no": 1,
      "bbox": [
        414.08697509765625,
        319.3126525878906,
        508.2337646484375,
        329.2752380371094
      ],
      "text": "damodei@openai.com"
    },
    {
      "page_no": 1,
      "bbox": [
        283.75799560546875,
        360.2633056640625,
        328.2432861328125,
        372.218505859375
      ],
      "text": "Abstract"
    },
    {
      "page_no": 1,
      "bbox": [
        125.864990234375,
        385.4945983886719,
        486.1325378417969,
        482.7301940917969
      ],
      "text": "We study empirical scaling laws for language model performance on the cross-entropy loss.\nThe loss scales as a power-law with model size, dataset size, and the amount of compute\nused for training, with some trends spanning more than seven orders of magnitude. Other\narchitectural details such as network width or depth have minimal effects within a wide\nrange. Simple equations govern the dependence of overﬁtting on model/dataset size and the\ndependence of training speed on model size. These relationships allow us to determine the\noptimal allocation of a ﬁxed compute budget. Larger models are signiﬁcantly more sample-\nefﬁcient, such that optimally compute-efﬁcient training involves training very large models\non a relatively modest amount of data and stopping signiﬁcantly before convergence."
    },
    {
      "page_no": 1,
      "bbox": [
        101.8219985961914,
        641.703857421875,
        175.19821166992188,
        652.4284057617188
      ],
      "text": "∗Equal contribution."
    },
    {
      "page_no": 1,
      "bbox": [
        90.0,
        663.386962890625,
        522.0010986328125,
        702.2413940429688
      ],
      "text": "Contributions:\nJared Kaplan and Sam McCandlish led the research.\nTom Henighan contributed the LSTM ex-\nperiments.\nTom Brown, Rewon Child, and Scott Gray, and Alec Radford developed the optimized Transformer\nimplementation. Jeff Wu, Benjamin Chess, and Alec Radford developed the text datasets. Dario Amodei provided\nguidance throughout the project."
    },
    {
      "page_no": 1,
      "bbox": [
        10.940000534057617,
        215.5999755859375,
        37.619998931884766,
        560.0
      ],
      "text": "arXiv:2001.08361v1  [cs.LG]  23 Jan 2020"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        72.78716278076172,
        135.82427978515625,
        84.74236297607422
      ],
      "text": "Contents"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        101.87651824951172,
        522.0003662109375,
        111.83911895751953
      ],
      "text": "1\nIntroduction\n2"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00003051757812,
        129.4365234375,
        521.998291015625,
        139.3991241455078
      ],
      "text": "2\nBackground and Methods\n6"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00003051757812,
        156.99749755859375,
        521.998291015625,
        166.96009826660156
      ],
      "text": "3\nEmpirical Results and Basic Power Laws\n7"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00003051757812,
        184.5574951171875,
        521.998291015625,
        194.5200958251953
      ],
      "text": "4\nCharting the Inﬁnite Data Limit and Overﬁtting\n10"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00003051757812,
        212.11749267578125,
        521.998291015625,
        222.08009338378906
      ],
      "text": "5\nScaling Laws with Model Size and Training Time\n12"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00003051757812,
        239.677490234375,
        521.998291015625,
        249.6400909423828
      ],
      "text": "6\nOptimal Allocation of the Compute Budget\n14"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00003051757812,
        267.23846435546875,
        521.9996337890625,
        277.2010498046875
      ],
      "text": "7\nRelated Work\n18"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        294.7984619140625,
        521.9996337890625,
        304.76104736328125
      ],
      "text": "8\nDiscussion\n18"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        322.35845947265625,
        521.9996337890625,
        332.321044921875
      ],
      "text": "Appendices\n20"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        349.9194641113281,
        521.998291015625,
        359.8820495605469
      ],
      "text": "A Summary of Power Laws\n20"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        377.4794616699219,
        521.9983520507812,
        387.4420471191406
      ],
      "text": "B\nEmpirical Model of Compute-Efﬁcient Frontier\n20"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        405.0394592285156,
        521.9996337890625,
        415.0020446777344
      ],
      "text": "C Caveats\n22"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        432.5994567871094,
        521.998291015625,
        442.5620422363281
      ],
      "text": "D Supplemental Figures\n23"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        462.1841125488281,
        172.8136749267578,
        474.1393127441406
      ],
      "text": "1\nIntroduction"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        488.5504150390625,
        522.001708984375,
        553.0579833984375
      ],
      "text": "Language provides a natural domain for the study of artiﬁcial intelligence, as the vast majority of reason-\ning tasks can be efﬁciently expressed and evaluated in language, and the world’s text provides a wealth of\ndata for unsupervised learning via generative modeling. Deep learning has recently seen rapid progress in lan-\nguage modeling, with state of the art models [RNSS18, DCLT18, YDY+19, LOG+19, RSR+19] approaching\nhuman-level performance on many speciﬁc tasks [WPN+19], including the composition of coherent multi-\nparagraph prompted text samples [RWC+19]."
    },
    {
      "page_no": 2,
      "bbox": [
        90.00004577636719,
        559.484375,
        521.9982299804688,
        613.0829467773438
      ],
      "text": "One might expect language modeling performance to depend on model architecture, the size of neural models,\nthe computing power used to train them, and the data available for this training process. In this work we will\nempirically investigate the dependence of language modeling loss on all of these factors, focusing on the\nTransformer architecture [VSP+17, LSP+18]. The high ceiling and low ﬂoor for performance on language\ntasks allows us to study trends over more than seven orders of magnitude in scale."
    },
    {
      "page_no": 2,
      "bbox": [
        90.00007629394531,
        619.5093994140625,
        521.9981689453125,
        640.3809814453125
      ],
      "text": "Throughout we will observe precise power-law scalings for performance as a function of training time, con-\ntext length, dataset size, model size, and compute budget."
    },
    {
      "page_no": 2,
      "bbox": [
        90.00007629394531,
        657.5064697265625,
        154.47801208496094,
        667.4690551757812
      ],
      "text": "1.1\nSummary"
    },
    {
      "page_no": 2,
      "bbox": [
        90.00007629394531,
        678.660400390625,
        367.4884033203125,
        688.6229858398438
      ],
      "text": "Our key ﬁndings for Transformer language models are are as follows:"
    },
    {
      "page_no": 2,
      "bbox": [
        90.0,
        701.6947021484375,
        522.0004272460938,
        722.1663818359375
      ],
      "text": "2Here we display predicted compute when using a sufﬁciently small batch size. See Figure 13 for comparison to the\npurely empirical data."
    },
    {
      "page_no": 2,
      "bbox": [
        303.5090026855469,
        742.3324584960938,
        308.49029541015625,
        752.2950439453125
      ],
      "text": "2"
    },
    {
      "page_no": 3,
      "bbox": [
        292.803955078125,
        180.36312866210938,
        351.09588623046875,
        191.79893493652344
      ],
      "text": "Dataset Size"
    },
    {
      "page_no": 3,
      "bbox": [
        308.63372802734375,
        191.9049530029297,
        332.1927490234375,
        201.52752685546875
      ],
      "text": "tokens"
    },
    {
      "page_no": 3,
      "bbox": [
        134.0265655517578,
        180.36312866210938,
        492.7867126464844,
        201.52752685546875
      ],
      "text": "Parameters \nnon-embedding\nCompute \nPF-days, non-embedding"
    },
    {
      "page_no": 3,
      "bbox": [
        91.0703353881836,
        101.59132385253906,
        101.36256408691406,
        139.34963989257812
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 3,
      "bbox": [
        90.0,
        210.1915283203125,
        522.0015258789062,
        252.97207641601562
      ],
      "text": "Figure 1\nLanguage modeling performance improves smoothly as we increase the model size, datasetset\nsize, and amount of compute2 used for training. For optimal performance all three factors must be scaled\nup in tandem. Empirical performance has a power-law relationship with each individual factor when not\nbottlenecked by the other two."
    },
    {
      "page_no": 3,
      "bbox": [
        90.0,
        274.63250732421875,
        522.0048217773438,
        328.3220520019531
      ],
      "text": "Performance depends strongly on scale, weakly on model shape:\nModel performance depends most\nstrongly on scale, which consists of three factors: the number of model parameters N (excluding embed-\ndings), the size of the dataset D, and the amount of compute C used for training. Within reasonable limits,\nperformance depends very weakly on other architectural hyperparameters such as depth vs. width. (Section\n3)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99999237060547,
        341.0564880371094,
        522.0015869140625,
        383.8370361328125
      ],
      "text": "Smooth power laws:\nPerformance has a power-law relationship with each of the three scale factors\nN, D, C when not bottlenecked by the other two, with trends spanning more than six orders of magnitude\n(see Figure 1). We observe no signs of deviation from these trends on the upper end, though performance\nmust ﬂatten out eventually before reaching zero loss. (Section 3)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99990844726562,
        396.431884765625,
        522.0033569335938,
        439.3520202636719
      ],
      "text": "Universality of overﬁtting:\nPerformance improves predictably as long as we scale up N and D in tandem,\nbut enters a regime of diminishing returns if either N or D is held ﬁxed while the other increases. The\nperformance penalty depends predictably on the ratio N 0.74/D, meaning that every time we increase the\nmodel size 8x, we only need to increase the data by roughly 5x to avoid a penalty. (Section 4)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99990844726562,
        452.0864562988281,
        522.0015869140625,
        483.9580078125
      ],
      "text": "Universality of training:\nTraining curves follow predictable power-laws whose parameters are roughly\nindependent of the model size. By extrapolating the early part of a training curve, we can roughly predict the\nloss that would be achieved if we trained for much longer. (Section 5)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99990844726562,
        496.69244384765625,
        521.998779296875,
        539.4729614257812
      ],
      "text": "Transfer improves with test performance:\nWhen we evaluate models on text with a different distribution\nthan they were trained on, the results are strongly correlated to those on the training validation set with\na roughly constant offset in the loss – in other words, transfer to a different distribution incurs a constant\npenalty but otherwise improves roughly in line with performance on the training set. (Section 3.2.2)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99990844726562,
        552.2073974609375,
        522.0020751953125,
        573.1699829101562
      ],
      "text": "Sample efﬁciency:\nLarge models are more sample-efﬁcient than small models, reaching the same level of\nperformance with fewer optimization steps (Figure 2) and using fewer data points (Figure 4)."
    },
    {
      "page_no": 3,
      "bbox": [
        89.9998779296875,
        585.7648315429688,
        522.0,
        639.5939331054688
      ],
      "text": "Convergence is inefﬁcient:\nWhen working within a ﬁxed compute budget C but without any other restric-\ntions on the model size N or available data D, we attain optimal performance by training very large models\nand stopping signiﬁcantly short of convergence (see Figure 3). Maximally compute-efﬁcient training would\ntherefore be far more sample efﬁcient than one might expect based on training small models to convergence,\nwith data requirements growing very slowly as D ∼C0.27 with training compute. (Section 6)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99986267089844,
        652.328369140625,
        522.0028076171875,
        684.1998901367188
      ],
      "text": "Optimal batch size:\nThe ideal batch size for training these models is roughly a power of the loss only,\nand continues to be determinable by measuring the gradient noise scale [MKAT18]; it is roughly 1-2 million\ntokens at convergence for the largest models we can train. (Section 5.1)"
    },
    {
      "page_no": 3,
      "bbox": [
        89.99986267089844,
        690.6263427734375,
        521.9981079101562,
        722.4069213867188
      ],
      "text": "Taken together, these results show that language modeling performance improves smoothly and predictably\nas we appropriately scale up model size, data, and compute. We expect that larger language models will\nperform better and be more sample efﬁcient than current models."
    },
    {
      "page_no": 3,
      "bbox": [
        303.50885009765625,
        742.3323364257812,
        308.4901428222656,
        752.294921875
      ],
      "text": "3"
    },
    {
      "page_no": 4,
      "bbox": [
        138.29376220703125,
        69.64261627197266,
        283.9486999511719,
        93.51673889160156
      ],
      "text": "Larger models require fewer samples \nto reach the same performance"
    },
    {
      "page_no": 4,
      "bbox": [
        127.58155822753906,
        112.19542694091797,
        133.8510284423828,
        118.76370239257812
      ],
      "text": "10"
    },
    {
      "page_no": 4,
      "bbox": [
        130.96435546875,
        139.25784301757812,
        134.09909057617188,
        145.82611083984375
      ],
      "text": "8"
    },
    {
      "page_no": 4,
      "bbox": [
        130.96435546875,
        165.75643920898438,
        134.09909057617188,
        172.32470703125
      ],
      "text": "6"
    },
    {
      "page_no": 4,
      "bbox": [
        130.96435546875,
        192.25503540039062,
        134.09909057617188,
        198.82330322265625
      ],
      "text": "4"
    },
    {
      "page_no": 4,
      "bbox": [
        301.7957458496094,
        69.693359375,
        452.727783203125,
        93.51673889160156
      ],
      "text": "The optimal model size grows smoothly \nwith the loss target and compute budget"
    },
    {
      "page_no": 4,
      "bbox": [
        457.404541015625,
        104.32928466796875,
        518.982177734375,
        118.31997680664062
      ],
      "text": "Line color indicates \nnumber of parameters"
    },
    {
      "page_no": 4,
      "bbox": [
        168.73895263671875,
        224.95542907714844,
        271.0874328613281,
        231.52369689941406
      ],
      "text": "107\n109\n1011"
    },
    {
      "page_no": 4,
      "bbox": [
        137.16615295410156,
        233.31094360351562,
        361.199951171875,
        241.37554931640625
      ],
      "text": "Tokens Processed\nCompute (PF-days)"
    },
    {
      "page_no": 4,
      "bbox": [
        322.6563415527344,
        224.95542907714844,
        433.0634460449219,
        231.52369689941406
      ],
      "text": "10-9\n10-6\n10-3\n100"
    },
    {
      "page_no": 4,
      "bbox": [
        94.88115692138672,
        110.96634674072266,
        124.46712493896484,
        119.03093719482422
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 4,
      "bbox": [
        455.14935302734375,
        169.19334411621094,
        519.111328125,
        192.86167907714844
      ],
      "text": "Compute-eﬃcient \ntraining stops far \nshort of convergence"
    },
    {
      "page_no": 4,
      "bbox": [
        454.5855407714844,
        129.10943603515625,
        515.3782348632812,
        135.67770385742188
      ],
      "text": "103\n109\n106"
    },
    {
      "page_no": 4,
      "bbox": [
        238.08636474609375,
        146.07754516601562,
        272.4285583496094,
        153.95947265625
      ],
      "text": "103 Params"
    },
    {
      "page_no": 4,
      "bbox": [
        156.33535766601562,
        174.8313446044922,
        190.6775360107422,
        182.71327209472656
      ],
      "text": "109 Params"
    },
    {
      "page_no": 4,
      "bbox": [
        292.77496337890625,
        112.19542694091797,
        299.04443359375,
        118.76370239257812
      ],
      "text": "10"
    },
    {
      "page_no": 4,
      "bbox": [
        296.1577453613281,
        138.69403076171875,
        299.29248046875,
        145.26229858398438
      ],
      "text": "8"
    },
    {
      "page_no": 4,
      "bbox": [
        296.1577453613281,
        165.75643920898438,
        299.29248046875,
        172.32470703125
      ],
      "text": "6"
    },
    {
      "page_no": 4,
      "bbox": [
        296.1577453613281,
        191.6912384033203,
        299.29248046875,
        198.25950622558594
      ],
      "text": "4"
    },
    {
      "page_no": 4,
      "bbox": [
        90.0,
        247.2714385986328,
        521.5060424804688,
        271.7590637207031
      ],
      "text": "Figure 2\nWe show a series of language model training runs, with models ranging in size from 103 to 109\nparameters (excluding embeddings)."
    },
    {
      "page_no": 4,
      "bbox": [
        284.6874084472656,
        313.4559020996094,
        350.56842041015625,
        351.6099548339844
      ],
      "text": "100x Batch Size"
    },
    {
      "page_no": 4,
      "bbox": [
        278.0782470703125,
        289.9236755371094,
        347.1978759765625,
        335.60498046875
      ],
      "text": "<10x Serial Steps"
    },
    {
      "page_no": 4,
      "bbox": [
        259.85150146484375,
        347.1405029296875,
        358.1284484863281,
        388.29339599609375
      ],
      "text": ">1,000,000x Model Size"
    },
    {
      "page_no": 4,
      "bbox": [
        381.5390930175781,
        291.99102783203125,
        455.2760314941406,
        310.16546630859375
      ],
      "text": "Data requirements \ngrow relatively slowly"
    },
    {
      "page_no": 4,
      "bbox": [
        381.5390930175781,
        346.55322265625,
        458.0509033203125,
        364.7276611328125
      ],
      "text": "Optimal model size \nincreases very quickly"
    },
    {
      "page_no": 4,
      "bbox": [
        199.6650848388672,
        291.99102783203125,
        275.7637634277344,
        310.16546630859375
      ],
      "text": "Minimum serial steps \nincreases negligibly"
    },
    {
      "page_no": 4,
      "bbox": [
        90.0,
        428.9925231933594,
        522.0010986328125,
        482.68206787109375
      ],
      "text": "Figure 3\nAs more compute becomes available, we can choose how much to allocate towards training larger\nmodels, using larger batches, and training for more steps. We illustrate this for a billion-fold increase in\ncompute. For optimally compute-efﬁcient training, most of the increase should go towards increased model\nsize. A relatively small increase in data is needed to avoid reuse. Of the increase in data, most can be used to\nincrease parallelism through larger batch sizes, with only a very small increase in serial training time required."
    },
    {
      "page_no": 4,
      "bbox": [
        90.0,
        515.1104736328125,
        223.94711303710938,
        525.0730590820312
      ],
      "text": "1.2\nSummary of Scaling Laws"
    },
    {
      "page_no": 4,
      "bbox": [
        90.0,
        535.1764526367188,
        521.9996948242188,
        568.4520263671875
      ],
      "text": "The test loss of a Transformer trained to autoregressively model language can be predicted using a power-law\nwhen performance is limited by only either the number of non-embedding parameters N, the dataset size D,\nor the optimally allocated compute budget Cmin (see Figure 1):"
    },
    {
      "page_no": 4,
      "bbox": [
        113.41204833984375,
        576.574462890625,
        521.998046875,
        597.446044921875
      ],
      "text": "1. For models with a limited number of parameters, trained to convergence on sufﬁciently large\ndatasets:"
    },
    {
      "page_no": 4,
      "bbox": [
        142.31204223632812,
        599.1439208984375,
        522.0025024414062,
        614.4783935546875
      ],
      "text": "L(N) = (Nc/N)αN ; αN ∼0.076,\nNc ∼8.8 × 1013 (non-embedding parameters)\n(1.1)"
    },
    {
      "page_no": 4,
      "bbox": [
        113.41201782226562,
        621.0734252929688,
        393.4008483886719,
        631.0360107421875
      ],
      "text": "2. For large models trained with a limited dataset with early stopping:"
    },
    {
      "page_no": 4,
      "bbox": [
        193.57601928710938,
        632.73291015625,
        521.99560546875,
        648.0684204101562
      ],
      "text": "L(D) = (Dc/D)αD ; αD ∼0.095,\nDc ∼5.4 × 1013 (tokens)\n(1.2)"
    },
    {
      "page_no": 4,
      "bbox": [
        113.4119873046875,
        654.6624145507812,
        521.9981079101562,
        675.5350341796875
      ],
      "text": "3. When training with a limited amount of compute, a sufﬁciently large dataset, an optimally-sized\nmodel, and a sufﬁciently small batch size (making optimal3 use of compute):"
    },
    {
      "page_no": 4,
      "bbox": [
        154.40798950195312,
        680.7619018554688,
        522.0006713867188,
        697.989501953125
      ],
      "text": "L(Cmin) =\n\u0000\nCmin\nc\n/Cmin\n\u0001αmin\nC\n; αmin\nC\n∼0.050,\nCmin\nc\n∼3.1 × 108 (PF-days)\n(1.3)"
    },
    {
      "page_no": 4,
      "bbox": [
        90.0,
        701.6947021484375,
        521.999755859375,
        723.162353515625
      ],
      "text": "3We also observe an empirical power-law trend with the training compute C (Figure 1) while training at ﬁxed batch\nsize, but it is the trend with Cmin that should be used to make predictions. They are related by equation (5.5)."
    },
    {
      "page_no": 4,
      "bbox": [
        303.5090026855469,
        742.3324584960938,
        308.49029541015625,
        752.2950439453125
      ],
      "text": "4"
    },
    {
      "page_no": 5,
      "bbox": [
        122.4058837890625,
        167.73049926757812,
        251.08119201660156,
        176.6460723876953
      ],
      "text": "107\n108\n109\n1010"
    },
    {
      "page_no": 5,
      "bbox": [
        168.35366821289062,
        175.7054901123047,
        222.72317504882812,
        184.3848419189453
      ],
      "text": "Tokens in Dataset"
    },
    {
      "page_no": 5,
      "bbox": [
        109.17179107666016,
        155.37158203125,
        118.64342498779297,
        164.05093383789062
      ],
      "text": "2.5"
    },
    {
      "page_no": 5,
      "bbox": [
        109.17179107666016,
        134.7308349609375,
        118.64342498779297,
        143.41018676757812
      ],
      "text": "3.0"
    },
    {
      "page_no": 5,
      "bbox": [
        109.17179107666016,
        117.27934265136719,
        118.64342498779297,
        125.95868682861328
      ],
      "text": "3.5"
    },
    {
      "page_no": 5,
      "bbox": [
        109.17179107666016,
        102.16217041015625,
        118.64342498779297,
        110.84151458740234
      ],
      "text": "4.0"
    },
    {
      "page_no": 5,
      "bbox": [
        109.17179107666016,
        88.82786560058594,
        118.64342498779297,
        97.50721740722656
      ],
      "text": "4.5"
    },
    {
      "page_no": 5,
      "bbox": [
        99.62091064453125,
        118.53364562988281,
        108.30026245117188,
        132.1870880126953
      ],
      "text": "Loss"
    },
    {
      "page_no": 5,
      "bbox": [
        138.362548828125,
        73.07122802734375,
        253.0586395263672,
        83.48644256591797
      ],
      "text": "Loss vs Model and Dataset Size"
    },
    {
      "page_no": 5,
      "bbox": [
        276.2612609863281,
        101.66038513183594,
        298.9216613769531,
        110.33973693847656
      ],
      "text": "Params"
    },
    {
      "page_no": 5,
      "bbox": [
        285.87158203125,
        110.14485931396484,
        301.2278747558594,
        147.55880737304688
      ],
      "text": "708M\n302M\n85M\n3M\n25M\n393.2K"
    },
    {
      "page_no": 5,
      "bbox": [
        376.0389099121094,
        167.25070190429688,
        458.4567565917969,
        176.30038452148438
      ],
      "text": "104\n105"
    },
    {
      "page_no": 5,
      "bbox": [
        381.8867492675781,
        175.3456573486328,
        426.7275390625,
        185.0091094970703
      ],
      "text": "Estimated Smin"
    },
    {
      "page_no": 5,
      "bbox": [
        319.1791687011719,
        158.5919189453125,
        328.79327392578125,
        167.40182495117188
      ],
      "text": "2.4"
    },
    {
      "page_no": 5,
      "bbox": [
        319.1791687011719,
        139.70201110839844,
        328.79327392578125,
        148.5119171142578
      ],
      "text": "2.8"
    },
    {
      "page_no": 5,
      "bbox": [
        319.1791687011719,
        123.33882904052734,
        328.79327392578125,
        132.1487274169922
      ],
      "text": "3.2"
    },
    {
      "page_no": 5,
      "bbox": [
        319.1791687011719,
        108.90547180175781,
        328.79327392578125,
        117.71536254882812
      ],
      "text": "3.6"
    },
    {
      "page_no": 5,
      "bbox": [
        319.1791687011719,
        95.99440002441406,
        328.79327392578125,
        104.80429077148438
      ],
      "text": "4.0"
    },
    {
      "page_no": 5,
      "bbox": [
        319.1791687011719,
        84.31491088867188,
        328.79327392578125,
        93.12480163574219
      ],
      "text": "4.4"
    },
    {
      "page_no": 5,
      "bbox": [
        309.484619140625,
        118.04810333251953,
        318.2945251464844,
        131.90692138671875
      ],
      "text": "Loss"
    },
    {
      "page_no": 5,
      "bbox": [
        333.6691589355469,
        72.63612365722656,
        475.8924865722656,
        83.20800018310547
      ],
      "text": "Loss vs Model Size and Training Steps"
    },
    {
      "page_no": 5,
      "bbox": [
        494.3666687011719,
        149.8870391845703,
        504.8075866699219,
        158.88003540039062
      ],
      "text": "106"
    },
    {
      "page_no": 5,
      "bbox": [
        494.3666687011719,
        124.783447265625,
        504.8075866699219,
        133.7764434814453
      ],
      "text": "107"
    },
    {
      "page_no": 5,
      "bbox": [
        494.3666687011719,
        99.79322052001953,
        504.8075866699219,
        108.78621673583984
      ],
      "text": "108"
    },
    {
      "page_no": 5,
      "bbox": [
        504.7757263183594,
        86.86798858642578,
        513.5856323242188,
        163.09144592285156
      ],
      "text": "Parameters (non-embed)"
    },
    {
      "page_no": 5,
      "bbox": [
        89.99993896484375,
        193.4419403076172,
        522.0027465820312,
        236.36306762695312
      ],
      "text": "Figure 4\nLeft: The early-stopped test loss L(N, D) varies predictably with the dataset size D and model\nsize N according to Equation (1.5). Right: After an initial transient period, learning curves for all model\nsizes N can be ﬁt with Equation (1.6), which is parameterized in terms of Smin, the number of steps when\ntraining at large batch size (details in Section 5.1)."
    },
    {
      "page_no": 5,
      "bbox": [
        89.9998779296875,
        258.73394775390625,
        522.0020141601562,
        334.3811340332031
      ],
      "text": "These relations hold across eight orders of magnitude in Cmin, six orders of magnitude in N, and over two\norders of magnitude in D. They depend very weakly on model shape and other Transformer hyperparameters\n(depth, width, number of self-attention heads), with speciﬁc numerical values associated with the Webtext2\ntraining set [RWC+19]. The power laws αN, αD, αmin\nC\nspecify the degree of performance improvement\nexpected as we scale up N, D, or Cmin; for example, doubling the number of parameters yields a loss that\nis smaller by a factor 2−αN = 0.95. The precise numerical values of Nc, Cmin\nc\n, and Dc depend on the\nvocabulary size and tokenization and hence do not have a fundamental meaning."
    },
    {
      "page_no": 5,
      "bbox": [
        89.9998779296875,
        340.8075256347656,
        521.9981079101562,
        361.67913818359375
      ],
      "text": "The critical batch size, which determines the speed/efﬁciency tradeoff for data parallelism ([MKAT18]), also\nroughly obeys a power law in L:"
    },
    {
      "page_no": 5,
      "bbox": [
        187.6148681640625,
        367.67596435546875,
        522.0003051757812,
        391.3905029296875
      ],
      "text": "Bcrit (L) =\nB∗\nL1/αB ,\nB∗∼2 · 108 tokens, αB ∼0.21\n(1.4)"
    },
    {
      "page_no": 5,
      "bbox": [
        89.99993896484375,
        401.11749267578125,
        521.9981689453125,
        425.4781188964844
      ],
      "text": "Equation (1.1) and (1.2) together suggest that as we increase the model size, we should increase the dataset\nsize sublinearly according to D ∝N"
    },
    {
      "page_no": 5,
      "bbox": [
        89.99998474121094,
        410.0780029296875,
        522.0029296875,
        436.3870544433594
      ],
      "text": "αN\nαD ∼N 0.74. In fact, we ﬁnd that there is a single equation combining\n(1.1) and (1.2) that governs the simultaneous dependence on N and D and governs the degree of overﬁtting:"
    },
    {
      "page_no": 5,
      "bbox": [
        234.68101501464844,
        454.18292236328125,
        281.22198486328125,
        464.1455078125
      ],
      "text": "L(N, D) ="
    },
    {
      "page_no": 5,
      "bbox": [
        283.9840087890625,
        444.3103332519531,
        309.8926086425781,
        458.24755859375
      ],
      "text": "\"\u0012Nc"
    },
    {
      "page_no": 5,
      "bbox": [
        299.8110046386719,
        461.0169372558594,
        307.8209228515625,
        470.9795227050781
      ],
      "text": "N"
    },
    {
      "page_no": 5,
      "bbox": [
        311.5830078125,
        442.1539611816406,
        330.02191162109375,
        457.2619323730469
      ],
      "text": "\u0013 αN"
    },
    {
      "page_no": 5,
      "bbox": [
        320.2130126953125,
        446.2889099121094,
        357.9396057128906,
        464.1455078125
      ],
      "text": "αD + Dc"
    },
    {
      "page_no": 5,
      "bbox": [
        348.01800537109375,
        461.0169372558594,
        356.26702880859375,
        470.9795227050781
      ],
      "text": "D"
    },
    {
      "page_no": 5,
      "bbox": [
        359.6300048828125,
        440.9147644042969,
        522.0003662109375,
        464.3760986328125
      ],
      "text": "#αD\n(1.5)"
    },
    {
      "page_no": 5,
      "bbox": [
        90.0,
        480.84649658203125,
        521.9981689453125,
        501.7181091308594
      ],
      "text": "with ﬁts pictured on the left in ﬁgure 4. We conjecture that this functional form may also parameterize the\ntrained log-likelihood for other generative modeling tasks."
    },
    {
      "page_no": 5,
      "bbox": [
        90.0,
        507.91400146484375,
        522.0021362304688,
        529.0160522460938
      ],
      "text": "When training a given model for a ﬁnite number of parameter update steps S in the inﬁnite data limit, after\nan initial transient period, the learning curves can be accurately ﬁt by (see the right of ﬁgure 4)"
    },
    {
      "page_no": 5,
      "bbox": [
        224.58599853515625,
        536.306396484375,
        292.14459228515625,
        553.152587890625
      ],
      "text": "L(N, S) =\n\u0012Nc"
    },
    {
      "page_no": 5,
      "bbox": [
        282.06201171875,
        550.02392578125,
        290.0719299316406,
        559.9865112304688
      ],
      "text": "N"
    },
    {
      "page_no": 5,
      "bbox": [
        293.83502197265625,
        533.542724609375,
        368.19244384765625,
        560.8275756835938
      ],
      "text": "\u0013αN\n+\n\u0012\nSc\nSmin(S)"
    },
    {
      "page_no": 5,
      "bbox": [
        369.3869934082031,
        533.542724609375,
        522.0003662109375,
        553.383056640625
      ],
      "text": "\u0013αS\n(1.6)"
    },
    {
      "page_no": 5,
      "bbox": [
        90.0,
        564.6044311523438,
        522.0049438476562,
        589.0910034179688
      ],
      "text": "where Sc ≈2.1 × 103 and αS ≈0.76, and Smin(S) is the minimum possible number of optimization steps\n(parameter updates) estimated using Equation (5.4)."
    },
    {
      "page_no": 5,
      "bbox": [
        90.00003051757812,
        595.2869262695312,
        522.0008544921875,
        627.2980346679688
      ],
      "text": "When training within a ﬁxed compute budget C, but with no other constraints, Equation (1.6) leads to the\nprediction that the optimal model size N, optimal batch size B, optimal number of steps S, and dataset size\nD should grow as"
    },
    {
      "page_no": 5,
      "bbox": [
        165.34805297851562,
        633.7659301757812,
        522.0003662109375,
        647.18603515625
      ],
      "text": "N ∝Cαmin\nC\n/αN ,\nB ∝Cαmin\nC\n/αB,\nS ∝Cαmin\nC\n/αS,\nD = B · S\n(1.7)"
    },
    {
      "page_no": 5,
      "bbox": [
        90.0,
        654.3614501953125,
        522.003173828125,
        722.4070434570312
      ],
      "text": "with\nαmin\nC\n= 1/ (1/αS + 1/αB + 1/αN)\n(1.8)\nwhich closely matches the empirically optimal results N ∝C0.73\nmin , B ∝C0.24\nmin , and S ∝C0.03\nmin . As the\ncomputational budget C increases, it should be spent primarily on larger models, without dramatic increases\nin training time or dataset size (see Figure 3). This also implies that as models grow larger, they become\nincreasingly sample efﬁcient. In practice, researchers typically train smaller models for longer than would"
    },
    {
      "page_no": 5,
      "bbox": [
        303.5101318359375,
        742.3324584960938,
        308.4914245605469,
        752.2950439453125
      ],
      "text": "5"
    },
    {
      "page_no": 6,
      "bbox": [
        90.0,
        74.40748596191406,
        521.998046875,
        95.27908325195312
      ],
      "text": "be maximally compute-efﬁcient because of hardware constraints. Optimal performance depends on total\ncompute as a power law (see Equation (1.3))."
    },
    {
      "page_no": 6,
      "bbox": [
        90.0,
        101.70448303222656,
        521.9982299804688,
        133.48507690429688
      ],
      "text": "We provide some basic theoretical motivation for Equation (1.5), an analysis of learning curve ﬁts and their\nimplications for training time, and a breakdown of our results per token. We also make some brief compar-\nisons to LSTMs and recurrent Transformers [DGV+18]."
    },
    {
      "page_no": 6,
      "bbox": [
        90.0,
        147.49151611328125,
        149.49664306640625,
        157.45411682128906
      ],
      "text": "1.3\nNotation"
    },
    {
      "page_no": 6,
      "bbox": [
        90.0,
        167.5574493408203,
        212.37057495117188,
        177.52005004882812
      ],
      "text": "We use the following notation:"
    },
    {
      "page_no": 6,
      "bbox": [
        115.90299987792969,
        186.6857452392578,
        522.0042724609375,
        396.3479919433594
      ],
      "text": "• L – the cross entropy loss in nats. Typically it will be averaged over the tokens in a context, but in\nsome cases we report the loss for speciﬁc tokens within the context.\n• N – the number of model parameters, excluding all vocabulary and positional embeddings\n• C ≈6NBS – an estimate of the total non-embedding training compute, where B is the batch size,\nand S is the number of training steps (ie parameter updates). We quote numerical values in PF-days,\nwhere one PF-day = 1015 × 24 × 3600 = 8.64 × 1019 ﬂoating point operations.\n• D – the dataset size in tokens\n• Bcrit – the critical batch size [MKAT18], deﬁned and discussed in Section 5.1. Training at the\ncritical batch size provides a roughly optimal compromise between time and compute efﬁciency.\n• Cmin – an estimate of the minimum amount of non-embedding compute to reach a given value of\nthe loss. This is the training compute that would be used if the model were trained at a batch size\nmuch less than the critical batch size.\n• Smin – an estimate of the minimal number of training steps needed to reach a given value of the loss.\nThis is also the number of training steps that would be used if the model were trained at a batch size\nmuch greater than the critical batch size.\n• αX – power-law exponents for the scaling of the loss as L(X) ∝1/XαX where X can be any of\nN, D, C, S, B, Cmin."
    },
    {
      "page_no": 6,
      "bbox": [
        90.0,
        412.76007080078125,
        240.5757598876953,
        424.71527099609375
      ],
      "text": "2\nBackground and Methods"
    },
    {
      "page_no": 6,
      "bbox": [
        90.0,
        435.58465576171875,
        522.001953125,
        501.60296630859375
      ],
      "text": "We train language models on WebText2, an extended version of the WebText [RWC+19] dataset, tokenized\nusing byte-pair encoding [SHB15] with a vocabulary size nvocab = 50257. We optimize the autoregres-\nsive log-likelihood (i.e. cross-entropy loss) averaged over a 1024-token context, which is also our principal\nperformance metric. We record the loss on the WebText2 test distribution and on a selection of other text\ndistributions. We primarily train decoder-only [LSP+18, RNSS18] Transformer [VSP+17] models, though\nwe also train LSTM models and Universal Transformers [DGV+18] for comparison."
    },
    {
      "page_no": 6,
      "bbox": [
        90.00009155273438,
        515.6083984375,
        323.00537109375,
        525.5709838867188
      ],
      "text": "2.1\nParameter and Compute Scaling of Transformers"
    },
    {
      "page_no": 6,
      "bbox": [
        90.00009155273438,
        535.4437866210938,
        522.0001220703125,
        579.62841796875
      ],
      "text": "We parameterize the Transformer architecture using hyperparameters nlayer (number of layers), dmodel (di-\nmension of the residual stream), dﬀ(dimension of the intermediate feed-forward layer), dattn (dimension of\nthe attention output), and nheads (number of attention heads per layer). We include nctx tokens in the input\ncontext, with nctx = 1024 except where otherwise noted."
    },
    {
      "page_no": 6,
      "bbox": [
        90.0000991821289,
        584.559814453125,
        479.8300476074219,
        594.7529296875
      ],
      "text": "We use N to denote the model size, which we deﬁne as the number of non-embedding parameters"
    },
    {
      "page_no": 6,
      "bbox": [
        144.006103515625,
        600.0986938476562,
        278.9065856933594,
        611.6854248046875
      ],
      "text": "N ≈2dmodelnlayer (2dattn + dﬀ)"
    },
    {
      "page_no": 6,
      "bbox": [
        155.8641357421875,
        614.3156127929688,
        522.00048828125,
        627.866455078125
      ],
      "text": "= 12nlayerd2\nmodel\nwith the standard\ndattn = dﬀ/4 = dmodel\n(2.1)"
    },
    {
      "page_no": 6,
      "bbox": [
        90.00015258789062,
        631.7617797851562,
        522.0045776367188,
        663.7728881835938
      ],
      "text": "where we have excluded biases and other sub-leading terms. Our models also have nvocabdmodel parameters\nin an embedding matrix, and use nctxdmodel parameters for positional embeddings, but we do not include\nthese when discussing the ‘model size’ N; we will see that this produces signiﬁcantly cleaner scaling laws."
    },
    {
      "page_no": 6,
      "bbox": [
        90.00016784667969,
        670.1993408203125,
        339.78240966796875,
        680.1619262695312
      ],
      "text": "Evaluating a forward pass of the Transformer involves roughly"
    },
    {
      "page_no": 6,
      "bbox": [
        233.1541748046875,
        685.5076293945312,
        522.0005493164062,
        696.9642944335938
      ],
      "text": "Cforward ≈2N + 2nlayernctxdmodel\n(2.2)"
    },
    {
      "page_no": 6,
      "bbox": [
        90.00018310546875,
        701.5353393554688,
        521.998291015625,
        722.4069213867188
      ],
      "text": "add-multiply operations, where the factor of two comes from the multiply-accumulate operation used in\nmatrix multiplication. A more detailed per-operation parameter and compute count is included in Table 1."
    },
    {
      "page_no": 6,
      "bbox": [
        303.51019287109375,
        742.3323364257812,
        308.4914855957031,
        752.294921875
      ],
      "text": "6"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        76.20653533935547,
        441.40704345703125,
        86.16913604736328
      ],
      "text": "Operation\nParameters\nFLOPs per Token"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        95.21989440917969,
        396.5833435058594,
        106.676513671875
      ],
      "text": "Embed\n(nvocab + nctx) dmodel\n4dmodel"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        111.98191833496094,
        444.9551696777344,
        122.78655242919922
      ],
      "text": "Attention: QKV\nnlayerdmodel3dattn\n2nlayerdmodel3dattn"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        128.7439422607422,
        430.6811828613281,
        139.548583984375
      ],
      "text": "Attention: Mask\n—\n2nlayernctxdattn"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        145.5059051513672,
        437.9390563964844,
        156.310546875
      ],
      "text": "Attention: Project\nnlayerdattndmodel\n2nlayerdattndembd"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        162.26792907714844,
        435.08721923828125,
        173.07257080078125
      ],
      "text": "Feedforward\nnlayer2dmodeldﬀ\n2nlayer2dmodeldﬀ"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        179.0309295654297,
        423.132568359375,
        189.8345947265625
      ],
      "text": "De-embed\n—\n2dmodelnvocab"
    },
    {
      "page_no": 7,
      "bbox": [
        104.66600036621094,
        198.1838836669922,
        504.34417724609375,
        209.6405029296875
      ],
      "text": "Total (Non-Embedding)\nN = 2dmodelnlayer (2dattn + dﬀ)\nCforward = 2N + 2nlayernctxdattn"
    },
    {
      "page_no": 7,
      "bbox": [
        90.0,
        221.2294921875,
        522.0026245117188,
        242.19204711914062
      ],
      "text": "Table 1\nParameter counts and compute (forward pass) estimates for a Transformer model. Sub-leading\nterms such as nonlinearities, biases, and layer normalization are omitted."
    },
    {
      "page_no": 7,
      "bbox": [
        89.99996948242188,
        273.3279113769531,
        521.9996337890625,
        327.1580505371094
      ],
      "text": "For contexts and models with dmodel > nctx/12, the context-dependent computational cost per token is a\nrelatively small fraction of the total compute. Since we primarily study models where dmodel ≫nctx/12,\nwe do not include context-dependent terms in our training compute estimate. Accounting for the backwards\npass (approximately twice the compute as the forwards pass), we then deﬁne the estimated non-embedding\ncompute as C ≈6N ﬂoating point operators per training token."
    },
    {
      "page_no": 7,
      "bbox": [
        89.9999771118164,
        342.906494140625,
        199.59854125976562,
        352.86907958984375
      ],
      "text": "2.2\nTraining Procedures"
    },
    {
      "page_no": 7,
      "bbox": [
        89.99993896484375,
        359.8944396972656,
        522.0037231445312,
        428.0180358886719
      ],
      "text": "Unless otherwise noted, we train models with the Adam optimizer [KB14] for a ﬁxed 2.5 × 105 steps with\na batch size of 512 sequences of 1024 tokens. Due to memory constraints, our largest models (more than\n1B parameters) were trained with Adafactor [SS18]. We experimented with a variety of learning rates and\nschedules, as discussed in Appendix D.6. We found that results at convergence were largely independent of\nlearning rate schedule. Unless otherwise noted, all training runs included in our data used a learning rate\nschedule with a 3000 step linear warmup followed by a cosine decay to zero."
    },
    {
      "page_no": 7,
      "bbox": [
        89.99993896484375,
        443.7664794921875,
        148.38079833984375,
        453.72906494140625
      ],
      "text": "2.3\nDatasets"
    },
    {
      "page_no": 7,
      "bbox": [
        89.99990844726562,
        462.8607177734375,
        521.9981689453125,
        572.5150146484375
      ],
      "text": "We train our models on an extended version of the WebText dataset described in [RWC+19]. The original\nWebText dataset was a web scrape of outbound links from Reddit through December 2017 which received at\nleast 3 karma. In the second version, WebText2, we added outbound Reddit links from the period of January\nto October 2018, also with a minimum of 3 karma. The karma threshold served as a heuristic for whether\npeople found the link interesting or useful. The text of the new links was extracted with the Newspaper3k\npython library. In total, the dataset consists of 20.3M documents containing 96 GB of text and 1.62 × 1010\nwords (as deﬁned by wc). We then apply the reversible tokenizer described in [RWC+19], which yields\n2.29 × 1010 tokens. We reserve 6.6 × 108 of these tokens for use as a test set, and we also test on similarly-\nprepared samples of Books Corpus [ZKZ+15], Common Crawl [Fou], English Wikipedia, and a collection\nof publicly-available Internet Books."
    },
    {
      "page_no": 7,
      "bbox": [
        89.99990844726562,
        590.6691284179688,
        317.12481689453125,
        602.6243286132812
      ],
      "text": "3\nEmpirical Results and Basic Power Laws"
    },
    {
      "page_no": 7,
      "bbox": [
        89.99990844726562,
        616.2094116210938,
        521.9981079101562,
        637.0809936523438
      ],
      "text": "To characterize language model scaling we train a wide variety of models, varying a number of factors\nincluding:"
    },
    {
      "page_no": 7,
      "bbox": [
        115.90290832519531,
        647.729736328125,
        441.8595886230469,
        658.052001953125
      ],
      "text": "• Model size (ranging in size from 768 to 1.5 billion non-embedding parameters)"
    },
    {
      "page_no": 7,
      "bbox": [
        115.90290832519531,
        663.8187255859375,
        358.49249267578125,
        674.1409912109375
      ],
      "text": "• Dataset size (ranging from 22 million to 23 billion tokens)"
    },
    {
      "page_no": 7,
      "bbox": [
        115.90290832519531,
        679.90673828125,
        432.0662536621094,
        690.22900390625
      ],
      "text": "• Shape (including depth, width, attention heads, and feed-forward dimension)"
    },
    {
      "page_no": 7,
      "bbox": [
        115.90290832519531,
        695.9957275390625,
        467.71246337890625,
        706.3179931640625
      ],
      "text": "• Context length (1024 for most runs, though we also experiment with shorter contexts)"
    },
    {
      "page_no": 7,
      "bbox": [
        115.90290832519531,
        708.8294067382812,
        456.1971435546875,
        722.4070434570312
      ],
      "text": "• Batch size (219 for most runs, but we also vary it to measure the critical batch size)"
    },
    {
      "page_no": 7,
      "bbox": [
        303.5099182128906,
        742.3323974609375,
        308.4912109375,
        752.2949829101562
      ],
      "text": "7"
    },
    {
      "page_no": 8,
      "bbox": [
        131.9876708984375,
        161.04222106933594,
        239.79576110839844,
        169.7822265625
      ],
      "text": "Feed-Forward Ratio (dff / dmodel)"
    },
    {
      "page_no": 8,
      "bbox": [
        158.69790649414062,
        161.04222106933594,
        524.491455078125,
        178.65631103515625
      ],
      "text": "50M Parameters\nAspect Ratio (dmodel / nlayer)\nAttention Head Dimension (dmodel / nhead)"
    },
    {
      "page_no": 8,
      "bbox": [
        428.4188232421875,
        170.00428771972656,
        480.8955078125,
        178.65631103515625
      ],
      "text": "25M Parameters"
    },
    {
      "page_no": 8,
      "bbox": [
        100.04014587402344,
        72.07621002197266,
        111.101318359375,
        78.17766571044922
      ],
      "text": "10%"
    },
    {
      "page_no": 8,
      "bbox": [
        102.65879821777344,
        86.21691131591797,
        110.80803680419922,
        92.31836700439453
      ],
      "text": "8%"
    },
    {
      "page_no": 8,
      "bbox": [
        102.65879821777344,
        100.35762786865234,
        110.80803680419922,
        106.4590835571289
      ],
      "text": "6%"
    },
    {
      "page_no": 8,
      "bbox": [
        102.65879821777344,
        114.49834442138672,
        110.80803680419922,
        120.59980010986328
      ],
      "text": "4%"
    },
    {
      "page_no": 8,
      "bbox": [
        102.65879821777344,
        128.1153106689453,
        110.80803680419922,
        134.21676635742188
      ],
      "text": "2%"
    },
    {
      "page_no": 8,
      "bbox": [
        102.65879821777344,
        142.25601196289062,
        110.80803680419922,
        148.3574676513672
      ],
      "text": "0%"
    },
    {
      "page_no": 8,
      "bbox": [
        91.32003784179688,
        91.32433319091797,
        100.06004333496094,
        138.33853149414062
      ],
      "text": "Loss Increase"
    },
    {
      "page_no": 8,
      "bbox": [
        270.776123046875,
        100.26335144042969,
        357.53094482421875,
        107.7547836303711
      ],
      "text": "A wide range of architectures"
    },
    {
      "page_no": 8,
      "bbox": [
        272.3472900390625,
        108.11930847167969,
        354.2062683105469,
        115.6107406616211
      ],
      "text": "achieve similar performance"
    },
    {
      "page_no": 8,
      "bbox": [
        404.8509826660156,
        113.50115966796875,
        501.9316711425781,
        128.15512084960938
      ],
      "text": "22% additional compute \ncompensates for 1% loss increase"
    },
    {
      "page_no": 8,
      "bbox": [
        90.0,
        187.25750732421875,
        522.0037231445312,
        240.94705200195312
      ],
      "text": "Figure 5\nPerformance depends very mildly on model shape when the total number of non-embedding\nparameters N is held ﬁxed. The loss varies only a few percent over a wide range of shapes. Small differences\nin parameter counts are compensated for by using the ﬁt to L(N) as a baseline. Aspect ratio in particular can\nvary by a factor of 40 while only slightly impacting performance; an (nlayer, dmodel) = (6, 4288) reaches a\nloss within 3% of the (48, 1600) model used in [RWC+19]."
    },
    {
      "page_no": 8,
      "bbox": [
        159.70535278320312,
        360.030517578125,
        292.4484558105469,
        369.8311462402344
      ],
      "text": "106\n107\n108\n109"
    },
    {
      "page_no": 8,
      "bbox": [
        166.59640502929688,
        368.7972106933594,
        265.8825988769531,
        378.3381652832031
      ],
      "text": "Parameters (with embedding)"
    },
    {
      "page_no": 8,
      "bbox": [
        123.17610168457031,
        354.6152038574219,
        127.34085845947266,
        364.1561584472656
      ],
      "text": "2"
    },
    {
      "page_no": 8,
      "bbox": [
        123.17610168457031,
        322.8787841796875,
        127.34085845947266,
        332.41973876953125
      ],
      "text": "3"
    },
    {
      "page_no": 8,
      "bbox": [
        123.17610168457031,
        300.3614501953125,
        127.34085845947266,
        309.90240478515625
      ],
      "text": "4"
    },
    {
      "page_no": 8,
      "bbox": [
        123.17610168457031,
        282.8956604003906,
        127.34085845947266,
        292.4366149902344
      ],
      "text": "5"
    },
    {
      "page_no": 8,
      "bbox": [
        123.17610168457031,
        268.62506103515625,
        127.34085845947266,
        278.166015625
      ],
      "text": "6"
    },
    {
      "page_no": 8,
      "bbox": [
        123.17610168457031,
        256.5594482421875,
        127.34085845947266,
        266.10040283203125
      ],
      "text": "7"
    },
    {
      "page_no": 8,
      "bbox": [
        112.67709350585938,
        293.6032409667969,
        122.21804809570312,
        324.93060302734375
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 8,
      "bbox": [
        154.0966339111328,
        295.66607666015625,
        182.66058349609375,
        344.0294494628906
      ],
      "text": "0 Layer\n1 Layer\n2 Layers\n3 Layers\n6 Layers"
    },
    {
      "page_no": 8,
      "bbox": [
        155.37240600585938,
        343.2716979980469,
        190.69973754882812,
        354.3777160644531
      ],
      "text": "> 6 Layers"
    },
    {
      "page_no": 8,
      "bbox": [
        331.6294250488281,
        360.030517578125,
        492.9139099121094,
        369.8311462402344
      ],
      "text": "103\n104\n105\n106\n107\n108\n109"
    },
    {
      "page_no": 8,
      "bbox": [
        364.50592041015625,
        368.7972106933594,
        461.7490539550781,
        378.3381652832031
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 8,
      "bbox": [
        320.06610107421875,
        354.6152038574219,
        324.2308654785156,
        364.1561584472656
      ],
      "text": "2"
    },
    {
      "page_no": 8,
      "bbox": [
        320.06610107421875,
        322.8787841796875,
        324.2308654785156,
        332.41973876953125
      ],
      "text": "3"
    },
    {
      "page_no": 8,
      "bbox": [
        320.06610107421875,
        300.3614501953125,
        324.2308654785156,
        309.90240478515625
      ],
      "text": "4"
    },
    {
      "page_no": 8,
      "bbox": [
        320.06610107421875,
        282.8956604003906,
        324.2308654785156,
        292.4366149902344
      ],
      "text": "5"
    },
    {
      "page_no": 8,
      "bbox": [
        320.06610107421875,
        268.62506103515625,
        324.2308654785156,
        278.166015625
      ],
      "text": "6"
    },
    {
      "page_no": 8,
      "bbox": [
        320.06610107421875,
        256.5594482421875,
        324.2308654785156,
        266.10040283203125
      ],
      "text": "7"
    },
    {
      "page_no": 8,
      "bbox": [
        309.5671081542969,
        293.6032409667969,
        319.1080627441406,
        324.93060302734375
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 8,
      "bbox": [
        350.98663330078125,
        305.3716735839844,
        379.55059814453125,
        344.0294494628906
      ],
      "text": "1 Layer\n2 Layers\n3 Layers\n6 Layers"
    },
    {
      "page_no": 8,
      "bbox": [
        352.2624206542969,
        343.2716979980469,
        387.5897521972656,
        354.3777160644531
      ],
      "text": "> 6 Layers"
    },
    {
      "page_no": 8,
      "bbox": [
        89.99996948242188,
        387.85150146484375,
        522.002685546875,
        430.633056640625
      ],
      "text": "Figure 6\nLeft: When we include embedding parameters, performance appears to depend strongly on the\nnumber of layers in addition to the number of parameters. Right: When we exclude embedding parameters,\nthe performance of models with different depths converge to a single trend. Only models with fewer than 2\nlayers or with extreme depth-to-width ratios deviate signiﬁcantly from the trend."
    },
    {
      "page_no": 8,
      "bbox": [
        89.99996948242188,
        455.5454406738281,
        521.9981689453125,
        476.41705322265625
      ],
      "text": "In this section we will display data along with empirically-motivated ﬁts, deferring theoretical analysis to\nlater sections."
    },
    {
      "page_no": 8,
      "bbox": [
        89.99996948242188,
        492.7514953613281,
        408.37493896484375,
        502.7140808105469
      ],
      "text": "3.1\nApproximate Transformer Shape and Hyperparameter Independence"
    },
    {
      "page_no": 8,
      "bbox": [
        89.99992370605469,
        513.3589477539062,
        522.0012817382812,
        590.052978515625
      ],
      "text": "Transformer performance depends very weakly on the shape parameters nlayer, nheads, and dﬀwhen we hold\nthe total non-embedding parameter count N ﬁxed. To establish these results we trained models with ﬁxed\nsize while varying a single hyperparameter. This was simplest for the case of nheads. When varying nlayer,\nwe simultaneously varied dmodel while keeping N ≈12nlayerd2\nmodel ﬁxed. Similarly, to vary dﬀat ﬁxed\nmodel size we also simultaneously varied the dmodel parameter, as required by the parameter counts in Table\n1. Independence of nlayers would follow if deeper Transformers effectively behave as ensembles of shallower\nmodels, as has been suggested for ResNets [VWB16]. The results are shown in Figure 5."
    },
    {
      "page_no": 8,
      "bbox": [
        89.9999771118164,
        606.2478637695312,
        348.7078857421875,
        616.3500366210938
      ],
      "text": "3.2\nPerformance with Non-Embedding Parameter Count N"
    },
    {
      "page_no": 8,
      "bbox": [
        89.99993896484375,
        627.2254028320312,
        522.0009155273438,
        669.9149780273438
      ],
      "text": "In Figure 6 we display the performance of a wide variety of models, ranging from small models with shape\n(nlayer, dmodel) = (2, 128) through billion-parameter models, ranging in shape from (6, 4288) through\n(207, 768). Here we have trained to near convergence on the full WebText2 dataset and observe no over-\nﬁtting (except possibly for the very largest models)."
    },
    {
      "page_no": 8,
      "bbox": [
        89.99993896484375,
        676.10986328125,
        522.0001831054688,
        697.2129516601562
      ],
      "text": "As shown in Figure 1, we ﬁnd a steady trend with non-embedding parameter count N, which can be ﬁt to the\nﬁrst term of Equation (1.5), so that"
    },
    {
      "page_no": 8,
      "bbox": [
        266.9489440917969,
        700.8462524414062,
        323.94952392578125,
        717.6934814453125
      ],
      "text": "L(N) ≈\n\u0012Nc"
    },
    {
      "page_no": 8,
      "bbox": [
        313.8680114746094,
        714.56494140625,
        321.8779296875,
        724.5275268554688
      ],
      "text": "N"
    },
    {
      "page_no": 8,
      "bbox": [
        325.6400146484375,
        698.083740234375,
        522.0003662109375,
        717.9240112304688
      ],
      "text": "\u0013αN\n(3.1)"
    },
    {
      "page_no": 8,
      "bbox": [
        303.509033203125,
        742.3324584960938,
        308.4903259277344,
        752.2950439453125
      ],
      "text": "8"
    },
    {
      "page_no": 9,
      "bbox": [
        339.2064208984375,
        72.30683898925781,
        486.4994812011719,
        88.21244049072266
      ],
      "text": "LSTM plateaus after <100 tokens \nTransformer improves through the whole context"
    },
    {
      "page_no": 9,
      "bbox": [
        502.3408203125,
        147.27108764648438,
        508.6667175292969,
        152.43553161621094
      ],
      "text": "2M"
    },
    {
      "page_no": 9,
      "bbox": [
        502.3408203125,
        164.55978393554688,
        513.59619140625,
        169.72422790527344
      ],
      "text": "200M"
    },
    {
      "page_no": 9,
      "bbox": [
        502.3408203125,
        154.3638916015625,
        508.6667175292969,
        159.52833557128906
      ],
      "text": "3M"
    },
    {
      "page_no": 9,
      "bbox": [
        502.3408203125,
        178.74539184570312,
        513.59619140625,
        183.9098358154297
      ],
      "text": "300M"
    },
    {
      "page_no": 9,
      "bbox": [
        331.6703186035156,
        143.76724243164062,
        334.6280212402344,
        149.96456909179688
      ],
      "text": "5"
    },
    {
      "page_no": 9,
      "bbox": [
        331.6703186035156,
        121.60224151611328,
        334.6280212402344,
        127.79957580566406
      ],
      "text": "4"
    },
    {
      "page_no": 9,
      "bbox": [
        331.6703186035156,
        165.48895263671875,
        334.6280212402344,
        171.686279296875
      ],
      "text": "3"
    },
    {
      "page_no": 9,
      "bbox": [
        331.6703186035156,
        187.2106475830078,
        334.6280212402344,
        193.40797424316406
      ],
      "text": "2"
    },
    {
      "page_no": 9,
      "bbox": [
        331.6703186035156,
        99.4372329711914,
        334.6280212402344,
        105.63456726074219
      ],
      "text": "6"
    },
    {
      "page_no": 9,
      "bbox": [
        336.98992919921875,
        202.62596130371094,
        402.7445983886719,
        210.02374267578125
      ],
      "text": "Token Index in Context"
    },
    {
      "page_no": 9,
      "bbox": [
        379.54669189453125,
        193.92398071289062,
        502.00390625,
        201.67063903808594
      ],
      "text": "103\n102\n101"
    },
    {
      "page_no": 9,
      "bbox": [
        129.96881103515625,
        72.30683898925781,
        283.1201171875,
        88.21244049072266
      ],
      "text": "Transformers asymptotically outperform LSTMs \ndue to improved use of long contexts"
    },
    {
      "page_no": 9,
      "bbox": [
        120.21621704101562,
        135.34454345703125,
        127.61045837402344,
        141.5418701171875
      ],
      "text": "3.6"
    },
    {
      "page_no": 9,
      "bbox": [
        120.21621704101562,
        118.49913787841797,
        127.61045837402344,
        124.69647216796875
      ],
      "text": "4.2"
    },
    {
      "page_no": 9,
      "bbox": [
        120.21621704101562,
        155.2930450439453,
        127.61045837402344,
        161.49037170410156
      ],
      "text": "3.0"
    },
    {
      "page_no": 9,
      "bbox": [
        120.21621704101562,
        179.2312469482422,
        127.61045837402344,
        185.42857360839844
      ],
      "text": "2.4"
    },
    {
      "page_no": 9,
      "bbox": [
        120.21621704101562,
        104.31354522705078,
        127.61045837402344,
        110.51087951660156
      ],
      "text": "4.8"
    },
    {
      "page_no": 9,
      "bbox": [
        120.21621704101562,
        91.45784759521484,
        127.61045837402344,
        97.65518188476562
      ],
      "text": "5.4"
    },
    {
      "page_no": 9,
      "bbox": [
        141.9379119873047,
        193.92398071289062,
        284.3436279296875,
        201.67063903808594
      ],
      "text": "105\n108\n106\n107\n109"
    },
    {
      "page_no": 9,
      "bbox": [
        129.5255126953125,
        202.62596130371094,
        211.7328338623047,
        210.02374267578125
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 9,
      "bbox": [
        157.4534149169922,
        155.62506103515625,
        192.37083435058594,
        162.49444580078125
      ],
      "text": "Transformers"
    },
    {
      "page_no": 9,
      "bbox": [
        233.70101928710938,
        118.38787078857422,
        252.2748565673828,
        125.25724792480469
      ],
      "text": "LSTMs"
    },
    {
      "page_no": 9,
      "bbox": [
        246.11341857910156,
        141.91424560546875,
        263.06695556640625,
        148.19137573242188
      ],
      "text": "1 Layer"
    },
    {
      "page_no": 9,
      "bbox": [
        248.77320861816406,
        149.00704956054688,
        280.6978759765625,
        161.0470733642578
      ],
      "text": "2 Layers\n4 Layers"
    },
    {
      "page_no": 9,
      "bbox": [
        91.84500885009766,
        91.3465805053711,
        329.515869140625,
        105.30874633789062
      ],
      "text": "Test Loss\nPer-token \nTest Loss"
    },
    {
      "page_no": 9,
      "bbox": [
        496.57794189453125,
        125.00413513183594,
        521.3805541992188,
        130.28826904296875
      ],
      "text": "Parameters:"
    },
    {
      "page_no": 9,
      "bbox": [
        502.3408203125,
        133.9720916748047,
        512.69189453125,
        139.13653564453125
      ],
      "text": "400K"
    },
    {
      "page_no": 9,
      "bbox": [
        502.3408203125,
        142.39479064941406,
        512.69189453125,
        147.55923461914062
      ],
      "text": "400K"
    },
    {
      "page_no": 9,
      "bbox": [
        288.24200439453125,
        216.93853759765625,
        323.7586975097656,
        226.90113830566406
      ],
      "text": "Figure 7"
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        249.9999237060547,
        521.9982299804688,
        292.9200744628906
      ],
      "text": "To observe these trends it is crucial to study performance as a function of N; if we instead use the total\nparameter count (including the embedding parameters) the trend is somewhat obscured (see Figure 6). This\nsuggests that the embedding matrix can be made smaller without impacting performance, as has been seen in\nrecent work [LCG+19]."
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        299.3464660644531,
        521.9979858398438,
        320.21807861328125
      ],
      "text": "Although these models have been trained on the WebText2 dataset, their test loss on a variety of other datasets\nis also a power-law in N with nearly identical power, as shown in Figure 8."
    },
    {
      "page_no": 9,
      "bbox": [
        90.00000762939453,
        333.322509765625,
        336.49462890625,
        343.28509521484375
      ],
      "text": "3.2.1\nComparing to LSTMs and Universal Transformers"
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        352.06146240234375,
        522.0033569335938,
        416.570068359375
      ],
      "text": "In Figure 7 we compare LSTM and Transformer performance as a function of non-embedding parameter\ncount N. The LSTMs were trained with the same dataset and context length. We see from these ﬁgures\nthat the LSTMs perform as well as Transformers for tokens appearing early in the context, but cannot match\nthe Transformer performance for later tokens. We present power-law relationships between performance and\ncontext position Appendix D.5, where increasingly large powers for larger models suggest improved ability\nto quickly recognize patterns."
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        421.4857482910156,
        522.0026245117188,
        454.77606201171875
      ],
      "text": "We also compare the performance of standard Transformers to recurrent Transformers [DGV+18] in Figure\n17 in the appendix. These models re-use parameters, and so perform slightly better as a function of N, at the\ncost of additional compute per-parameter."
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        467.8815002441406,
        297.6304931640625,
        477.8440856933594
      ],
      "text": "3.2.2\nGeneralization Among Data Distributions"
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        486.6204528808594,
        521.9981689453125,
        551.1279907226562
      ],
      "text": "We have also tested our models on a set of additional text data distributions. The test loss on these datasets\nas a function of model size is shown in Figure 8; in all cases the models were trained only on the WebText2\ndataset. We see that the loss on these other data distributions improves smoothly with model size, in direct\nparallel with the improvement on WebText2. We ﬁnd that generalization depends almost exclusively on the\nin-distribution validation loss, and does not depend on the duration of training or proximity to convergence.\nWe also observe no dependence on model depth (see Appendix D.8)."
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        565.5784912109375,
        303.1597900390625,
        575.5410766601562
      ],
      "text": "3.3\nPerformance with Dataset Size and Compute"
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        585.431884765625,
        521.99755859375,
        606.5339965820312
      ],
      "text": "We display empirical trends for the test loss as a function of dataset size D (in tokens) and training compute\nC in Figure 1."
    },
    {
      "page_no": 9,
      "bbox": [
        89.99996948242188,
        612.7288818359375,
        521.998291015625,
        644.7410278320312
      ],
      "text": "For the trend with D we trained a model with (nlayer, nembd) = (36, 1280) on ﬁxed subsets of the WebText2\ndataset. We stopped training once the test loss ceased to decrease. We see that the resulting test losses can be\nﬁt with simple power-law"
    },
    {
      "page_no": 9,
      "bbox": [
        267.2099609375,
        645.8623046875,
        323.8885192871094,
        662.70947265625
      ],
      "text": "L(D) ≈\n\u0012Dc"
    },
    {
      "page_no": 9,
      "bbox": [
        313.9679870605469,
        659.5798950195312,
        322.2170104980469,
        669.54248046875
      ],
      "text": "D"
    },
    {
      "page_no": 9,
      "bbox": [
        325.5789794921875,
        643.0997314453125,
        522.0003662109375,
        662.9400634765625
      ],
      "text": "\u0013αD\n(3.2)"
    },
    {
      "page_no": 9,
      "bbox": [
        90.0,
        674.2374877929688,
        306.13861083984375,
        684.2000732421875
      ],
      "text": "in the dataset size. The data and ﬁt appear in Figure 1."
    },
    {
      "page_no": 9,
      "bbox": [
        89.99993896484375,
        690.3959350585938,
        522.0021362304688,
        722.4070434570312
      ],
      "text": "The total amount of non-embedding compute used during training can be estimated as C = 6NBS, where\nB is the batch size, S is the number of parameter updates, and the factor of 6 accounts for the forward and\nbackward passes. Thus for a given value of C we can scan over all models with various N to ﬁnd the model"
    },
    {
      "page_no": 9,
      "bbox": [
        303.5089111328125,
        742.3324584960938,
        308.4902038574219,
        752.2950439453125
      ],
      "text": "9"
    },
    {
      "page_no": 10,
      "bbox": [
        132.5243377685547,
        185.18667602539062,
        288.96295166015625,
        195.64085388183594
      ],
      "text": "104\n105\n106\n107\n108\n109"
    },
    {
      "page_no": 10,
      "bbox": [
        152.2411346435547,
        194.5379638671875,
        255.96865844726562,
        204.7151336669922
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 10,
      "bbox": [
        104.83795928955078,
        151.6612091064453,
        109.28043365478516,
        161.83837890625
      ],
      "text": "3"
    },
    {
      "page_no": 10,
      "bbox": [
        104.83795928955078,
        125.57516479492188,
        109.28043365478516,
        135.75233459472656
      ],
      "text": "4"
    },
    {
      "page_no": 10,
      "bbox": [
        104.83795928955078,
        105.34125518798828,
        109.28043365478516,
        115.5184326171875
      ],
      "text": "5"
    },
    {
      "page_no": 10,
      "bbox": [
        104.83795928955078,
        88.8089599609375,
        109.28043365478516,
        98.98613739013672
      ],
      "text": "6"
    },
    {
      "page_no": 10,
      "bbox": [
        104.83795928955078,
        74.83110046386719,
        109.28043365478516,
        85.0082778930664
      ],
      "text": "7"
    },
    {
      "page_no": 10,
      "bbox": [
        93.63884735107422,
        115.21663665771484,
        103.81602478027344,
        148.63296508789062
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 10,
      "bbox": [
        249.8756561279297,
        82.0772705078125,
        291.7508850097656,
        118.62763214111328
      ],
      "text": "WebText2 (Test)\nInternet Books\nBooks\nWikipedia\nCommon Crawl"
    },
    {
      "page_no": 10,
      "bbox": [
        335.2508850097656,
        185.76942443847656,
        496.31097412109375,
        195.953125
      ],
      "text": "2.5\n3.0\n3.5\n4.0\n4.5\n5.0"
    },
    {
      "page_no": 10,
      "bbox": [
        368.8568115234375,
        194.52969360351562,
        490.3343200683594,
        204.71339416503906
      ],
      "text": "Test Loss on Training Distribution"
    },
    {
      "page_no": 10,
      "bbox": [
        326.99688720703125,
        163.71466064453125,
        338.11016845703125,
        173.8983612060547
      ],
      "text": "2.5"
    },
    {
      "page_no": 10,
      "bbox": [
        326.99688720703125,
        139.89263916015625,
        338.11016845703125,
        150.0763397216797
      ],
      "text": "3.0"
    },
    {
      "page_no": 10,
      "bbox": [
        326.99688720703125,
        119.75139617919922,
        338.11016845703125,
        129.9351043701172
      ],
      "text": "3.5"
    },
    {
      "page_no": 10,
      "bbox": [
        326.99688720703125,
        102.30426025390625,
        338.11016845703125,
        112.48796081542969
      ],
      "text": "4.0"
    },
    {
      "page_no": 10,
      "bbox": [
        326.99688720703125,
        86.914794921875,
        338.11016845703125,
        97.09849548339844
      ],
      "text": "4.5"
    },
    {
      "page_no": 10,
      "bbox": [
        326.99688720703125,
        73.14844512939453,
        338.11016845703125,
        83.33214569091797
      ],
      "text": "5.0"
    },
    {
      "page_no": 10,
      "bbox": [
        315.79058837890625,
        84.66349029541016,
        325.9742736816406,
        179.1265869140625
      ],
      "text": "Loss on Other Distribution"
    },
    {
      "page_no": 10,
      "bbox": [
        448.14801025390625,
        80.9933853149414,
        513.874267578125,
        110.45287322998047
      ],
      "text": "Books during training\nWikipedia during training\nBooks at convergence\nWikipedia at convergence"
    },
    {
      "page_no": 10,
      "bbox": [
        90.0,
        214.3995361328125,
        521.9999389648438,
        268.0890808105469
      ],
      "text": "Figure 8\nLeft: Generalization performance to other data distributions improves smoothly with model size,\nwith only a small and very slowly growing offset from the WebText2 training distribution. Right: Gener-\nalization performance depends only on training distribution performance, and not on the phase of training.\nWe compare generalization of converged models (points) to that of a single large model (dashed curves) as it\ntrains."
    },
    {
      "page_no": 10,
      "bbox": [
        90.0,
        289.6607666015625,
        521.9989013671875,
        324.7530517578125
      ],
      "text": "with the best performance on step S =\nC\n6BS . Note that in these results the batch size B remains ﬁxed for\nall models, which means that these empirical results are not truly optimal. We will account for this in later\nsections using an adjusted Cmin to produce cleaner trends."
    },
    {
      "page_no": 10,
      "bbox": [
        90.0,
        329.6844482421875,
        456.7431640625,
        339.6470642089844
      ],
      "text": "The result appears as the heavy black line on the left-hand plot in Figure 1. It can be ﬁt with"
    },
    {
      "page_no": 10,
      "bbox": [
        268.32098388671875,
        347.87335205078125,
        323.1795654296875,
        364.7195129394531
      ],
      "text": "L(C) ≈\n\u0012Cc"
    },
    {
      "page_no": 10,
      "bbox": [
        314.1679992675781,
        361.5909423828125,
        321.291259765625,
        371.55352783203125
      ],
      "text": "C"
    },
    {
      "page_no": 10,
      "bbox": [
        324.8699951171875,
        345.1097412109375,
        522.0003662109375,
        364.9500732421875
      ],
      "text": "\u0013αC\n(3.3)"
    },
    {
      "page_no": 10,
      "bbox": [
        90.0,
        379.36846923828125,
        521.9981689453125,
        411.1490783691406
      ],
      "text": "The ﬁgure also includes images of individual learning curves to clarify when individual models are optimal.\nWe will study the optimal allocation of compute more closely later on. The data strongly suggests that sample\nefﬁciency improves with model size, and we also illustrate this directly in Figure 19 in the appendix."
    },
    {
      "page_no": 10,
      "bbox": [
        90.0,
        428.1741638183594,
        354.2338562011719,
        440.1293640136719
      ],
      "text": "4\nCharting the Inﬁnite Data Limit and Overﬁtting"
    },
    {
      "page_no": 10,
      "bbox": [
        89.99996948242188,
        453.0364685058594,
        521.9981079101562,
        506.63507080078125
      ],
      "text": "In Section 3 we found a number of basic scaling laws for language modeling performance. Here we will\nstudy the performance of a model of size N trained on a dataset with D tokens while varying N and D\nsimultaneously. We will empirically demonstrate that the optimally trained test loss accords with the scaling\nlaw of Equation (1.5). This provides guidance on how much data we would need to train models of increasing\nsize while keeping overﬁtting under control."
    },
    {
      "page_no": 10,
      "bbox": [
        89.99996948242188,
        521.1149291992188,
        232.3993682861328,
        531.2171020507812
      ],
      "text": "4.1\nProposed L(N, D) Equation"
    },
    {
      "page_no": 10,
      "bbox": [
        89.9999771118164,
        541.406494140625,
        390.9402160644531,
        551.3690795898438
      ],
      "text": "We have chosen the parameterization (1.5) (repeated here for convenience):"
    },
    {
      "page_no": 10,
      "bbox": [
        234.68197631835938,
        570.1009521484375,
        281.221923828125,
        580.0635375976562
      ],
      "text": "L(N, D) ="
    },
    {
      "page_no": 10,
      "bbox": [
        283.98394775390625,
        560.2283325195312,
        309.8925476074219,
        574.16455078125
      ],
      "text": "\"\u0012Nc"
    },
    {
      "page_no": 10,
      "bbox": [
        299.8110046386719,
        576.9349365234375,
        307.8209228515625,
        586.8975219726562
      ],
      "text": "N"
    },
    {
      "page_no": 10,
      "bbox": [
        311.5830078125,
        558.0709228515625,
        330.02191162109375,
        573.178955078125
      ],
      "text": "\u0013 αN"
    },
    {
      "page_no": 10,
      "bbox": [
        320.2130126953125,
        562.2059326171875,
        357.9396057128906,
        580.0635375976562
      ],
      "text": "αD + Dc"
    },
    {
      "page_no": 10,
      "bbox": [
        348.01800537109375,
        576.9349365234375,
        356.26702880859375,
        586.8975219726562
      ],
      "text": "D"
    },
    {
      "page_no": 10,
      "bbox": [
        359.6300048828125,
        556.8317260742188,
        522.0003662109375,
        580.2940063476562
      ],
      "text": "#αD\n(4.1)"
    },
    {
      "page_no": 10,
      "bbox": [
        90.0,
        597.700439453125,
        178.547607421875,
        607.6630249023438
      ],
      "text": "using three principles:"
    },
    {
      "page_no": 10,
      "bbox": [
        113.41200256347656,
        618.16943359375,
        521.9979858398438,
        639.041015625
      ],
      "text": "1. Changes in vocabulary size or tokenization are expected to rescale the loss by an overall factor. The\nparameterization of L(N, D) (and all models of the loss) must naturally allow for such a rescaling."
    },
    {
      "page_no": 10,
      "bbox": [
        113.41200256347656,
        643.8037719726562,
        522.0,
        665.0350341796875
      ],
      "text": "2. Fixing D and sending N →∞, the overall loss should approach L(D). Conversely, ﬁxing N and\nsending D →∞the loss must approach L(N)."
    },
    {
      "page_no": 10,
      "bbox": [
        113.41195678710938,
        669.7977905273438,
        521.99658203125,
        691.029052734375
      ],
      "text": "3. L(N, D) should be analytic at D = ∞, so that it has a series expansion in 1/D with integer powers.\nTheoretical support for this principle is signiﬁcantly weaker than for the ﬁrst two."
    },
    {
      "page_no": 10,
      "bbox": [
        89.99993896484375,
        701.304931640625,
        522.0039672851562,
        723.9010620117188
      ],
      "text": "Our choice of L(N, D) satisﬁes the ﬁrst requirement because we can rescale Nc, Dc with changes in the\nvocabulary. This also implies that the values of Nc, Dc have no fundamental meaning."
    },
    {
      "page_no": 10,
      "bbox": [
        301.0189208984375,
        742.3324584960938,
        310.98150634765625,
        752.2950439453125
      ],
      "text": "10"
    },
    {
      "page_no": 11,
      "bbox": [
        136.10789489746094,
        167.3115997314453,
        260.68377685546875,
        176.2294921875
      ],
      "text": "106\n107\n108\n109"
    },
    {
      "page_no": 11,
      "bbox": [
        157.1931610107422,
        175.28868103027344,
        220.00807189941406,
        183.97027587890625
      ],
      "text": "Params (non-embed)"
    },
    {
      "page_no": 11,
      "bbox": [
        103.02351379394531,
        153.02777099609375,
        112.49759674072266,
        161.70936584472656
      ],
      "text": "2.5"
    },
    {
      "page_no": 11,
      "bbox": [
        103.02351379394531,
        132.81033325195312,
        112.49759674072266,
        141.49192810058594
      ],
      "text": "3.0"
    },
    {
      "page_no": 11,
      "bbox": [
        103.02351379394531,
        115.71673583984375,
        112.49759674072266,
        124.39833068847656
      ],
      "text": "3.5"
    },
    {
      "page_no": 11,
      "bbox": [
        103.02351379394531,
        100.90959167480469,
        112.49759674072266,
        109.5911865234375
      ],
      "text": "4.0"
    },
    {
      "page_no": 11,
      "bbox": [
        103.02351379394531,
        87.84877014160156,
        112.49759674072266,
        96.53035736083984
      ],
      "text": "4.5"
    },
    {
      "page_no": 11,
      "bbox": [
        93.47016906738281,
        110.6749267578125,
        102.1517562866211,
        139.1805877685547
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 11,
      "bbox": [
        150.79571533203125,
        72.62787628173828,
        226.66700744628906,
        83.04578399658203
      ],
      "text": "Data Size Bottleneck"
    },
    {
      "page_no": 11,
      "bbox": [
        266.255859375,
        94.97993469238281,
        295.083251953125,
        103.6615219116211
      ],
      "text": "Data Size"
    },
    {
      "page_no": 11,
      "bbox": [
        280.32427978515625,
        103.46659088134766,
        292.92657470703125,
        153.37921142578125
      ],
      "text": "21M\n43M\n86M\n172M\n344M\n688M\n1.4B\n22.0B"
    },
    {
      "page_no": 11,
      "bbox": [
        361.2155456542969,
        166.67356872558594,
        479.0862731933594,
        175.5699462890625
      ],
      "text": "10\n4\n10\n3\n10\n2\n10\n1"
    },
    {
      "page_no": 11,
      "bbox": [
        399.32708740234375,
        174.22042846679688,
        422.61517333984375,
        184.44252014160156
      ],
      "text": "N\nN/\nD/D"
    },
    {
      "page_no": 11,
      "bbox": [
        325.2153625488281,
        161.67083740234375,
        334.7261657714844,
        170.38607788085938
      ],
      "text": "0.0"
    },
    {
      "page_no": 11,
      "bbox": [
        325.2153625488281,
        145.36148071289062,
        334.7261657714844,
        154.07672119140625
      ],
      "text": "0.1"
    },
    {
      "page_no": 11,
      "bbox": [
        325.2153625488281,
        129.05210876464844,
        334.7261657714844,
        137.76734924316406
      ],
      "text": "0.2"
    },
    {
      "page_no": 11,
      "bbox": [
        325.2153625488281,
        112.74273681640625,
        334.7261657714844,
        121.4579849243164
      ],
      "text": "0.3"
    },
    {
      "page_no": 11,
      "bbox": [
        325.2153625488281,
        96.4333724975586,
        334.7261657714844,
        105.14862060546875
      ],
      "text": "0.4"
    },
    {
      "page_no": 11,
      "bbox": [
        325.2153625488281,
        80.1240005493164,
        334.7261657714844,
        88.83924865722656
      ],
      "text": "0.5"
    },
    {
      "page_no": 11,
      "bbox": [
        314.72900390625,
        104.55984497070312,
        324.8738708496094,
        145.98599243164062
      ],
      "text": "L/L(D =\n)\n1"
    },
    {
      "page_no": 11,
      "bbox": [
        391.2057800292969,
        73.95935821533203,
        431.0650634765625,
        84.41765594482422
      ],
      "text": "Overfitting"
    },
    {
      "page_no": 11,
      "bbox": [
        488.2793884277344,
        95.20173645019531,
        517.2185668945312,
        103.91698455810547
      ],
      "text": "Data Size"
    },
    {
      "page_no": 11,
      "bbox": [
        502.40234375,
        103.72129821777344,
        515.0535278320312,
        153.82740783691406
      ],
      "text": "21M\n43M\n86M\n172M\n344M\n688M\n1.4B\n22.0B"
    },
    {
      "page_no": 11,
      "bbox": [
        89.99996948242188,
        193.02793884277344,
        522.000244140625,
        239.43807983398438
      ],
      "text": "Figure 9\nThe early-stopped test loss L(N, D) depends predictably on the dataset size D and model size N\naccording to Equation (1.5). Left: For large D, performance is a straight power law in N. For a smaller ﬁxed\nD, performance stops improving as N increases and the model begins to overﬁt. (The reverse is also true,\nsee Figure 4.) Right: The extent of overﬁtting depends predominantly on the ratio N"
    },
    {
      "page_no": 11,
      "bbox": [
        90.00003051757812,
        224.03695678710938,
        522.004638671875,
        250.34707641601562
      ],
      "text": "αN\nαD /D, as predicted in\nequation (4.3). The line is our ﬁt to that equation."
    },
    {
      "page_no": 11,
      "bbox": [
        90.00003051757812,
        274.8564453125,
        522.0036010742188,
        328.4550476074219
      ],
      "text": "Since we stop training early when the test loss ceases to improve and optimize all models in the same way, we\nexpect that larger models should always perform better than smaller models. But with ﬁxed ﬁnite D, we also\ndo not expect any model to be capable of approaching the best possible loss (ie the entropy of text). Similarly,\na model with ﬁxed size will be capacity-limited. These considerations motivate our second principle. Note\nthat knowledge of L(N) at inﬁnite D and L(D) at inﬁnite N fully determines all the parameters in L(N, D)."
    },
    {
      "page_no": 11,
      "bbox": [
        90.00007629394531,
        334.8814392089844,
        522.0042114257812,
        399.3890380859375
      ],
      "text": "The third principle is more speculative. There is a simple and general reason one might expect overﬁtting\nto scale ∝1/D at very large D. Overﬁtting should be related to the variance or the signal-to-noise ratio\nof the dataset [AS17], and this scales as 1/D. This expectation should hold for any smooth loss function,\nsince we expect to be able to expand the loss about the D →∞limit. However, this argument assumes that\n1/D corrections dominate over other sources of variance, such as the ﬁnite batch size and other limits on the\nefﬁcacy of optimization. Without empirical conﬁrmation, we would not be very conﬁdent of its applicability."
    },
    {
      "page_no": 11,
      "bbox": [
        90.00006103515625,
        405.58489990234375,
        522.0022583007812,
        437.5960388183594
      ],
      "text": "Our third principle explains the asymmetry between the roles of N and D in Equation (1.5). Very similar\nsymmetric expressions4 are possible, but they would not have a 1/D expansion with integer powers, and\nwould require the introduction of an additional parameter."
    },
    {
      "page_no": 11,
      "bbox": [
        90.00004577636719,
        443.7919006347656,
        522.0038452148438,
        464.89404296875
      ],
      "text": "In any case, we will see that our equation for L(N, D) ﬁts the data well, which is the most important justiﬁ-\ncation for our L(N, D) ansatz."
    },
    {
      "page_no": 11,
      "bbox": [
        90.00003814697266,
        480.77349853515625,
        143.4095458984375,
        490.736083984375
      ],
      "text": "4.2\nResults"
    },
    {
      "page_no": 11,
      "bbox": [
        89.99996948242188,
        501.429443359375,
        521.9998779296875,
        533.2109985351562
      ],
      "text": "We regularize all our models with 10% dropout, and by tracking test loss and stopping once it is no longer\ndecreasing. The results are displayed in Figure 9, including a ﬁt to the four parameters αN, αD, Nc, Dc in\nEquation (1.5):"
    },
    {
      "page_no": 11,
      "bbox": [
        193.9250030517578,
        545.3129272460938,
        399.58758544921875,
        556.1165771484375
      ],
      "text": "Parameter\nαN\nαD\nNc\nDc"
    },
    {
      "page_no": 11,
      "bbox": [
        202.70199584960938,
        565.427734375,
        415.0931396484375,
        576.9010620117188
      ],
      "text": "Value\n0.076\n0.103\n6.4 × 1013\n1.8 × 1013"
    },
    {
      "page_no": 11,
      "bbox": [
        253.70899963378906,
        584.6329345703125,
        358.29144287109375,
        594.8260498046875
      ],
      "text": "Table 2\nFits to L(N, D)"
    },
    {
      "page_no": 11,
      "bbox": [
        90.0,
        607.1664428710938,
        521.9982299804688,
        660.7650146484375
      ],
      "text": "We obtain an excellent ﬁt, with the exception of the runs where the dataset has been reduced by a factor of\n1024, to about 2 × 107 tokens. With such a small dataset, an epoch consists of only 40 parameter updates.\nPerhaps such a tiny dataset represents a different regime for language modeling, as overﬁtting happens very\nearly in training (see Figure 16). Also note that the parameters differ very slightly from those obtained in\nSection 3, as here we are ﬁtting the full L(N, D) rather than just L(N, ∞) or L(∞, D)."
    },
    {
      "page_no": 11,
      "bbox": [
        89.99996948242188,
        667.1914672851562,
        522.0028076171875,
        698.9720458984375
      ],
      "text": "To chart the borderlands of the inﬁnite data limit, we can directly study the extent of overﬁtting. For all but\nthe largest models, we see no sign of overﬁtting when training with the full 22B token WebText2 dataset,\nso we can take it as representative of D = ∞. Thus we can compare ﬁnite D to the inﬁnite data limit by"
    },
    {
      "page_no": 11,
      "bbox": [
        102.65299987792969,
        708.0853271484375,
        295.0908508300781,
        722.1663818359375
      ],
      "text": "4For example, one might have used L(N, D) =\n\u0002\u0000 Nc"
    },
    {
      "page_no": 11,
      "bbox": [
        287.6210021972656,
        708.0853271484375,
        338.599853515625,
        724.348876953125
      ],
      "text": "N\n\u0001αN +\n\u0000 Dc"
    },
    {
      "page_no": 11,
      "bbox": [
        331.16900634765625,
        709.790283203125,
        513.2798461914062,
        724.348876953125
      ],
      "text": "D\n\u0001αD\u0003β, but this does not have a 1/D expansion."
    },
    {
      "page_no": 11,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "11"
    },
    {
      "page_no": 12,
      "bbox": [
        228.57716369628906,
        210.9593963623047,
        413.11871337890625,
        224.964599609375
      ],
      "text": "101\n3 × 100\n4 × 100\n6 × 100"
    },
    {
      "page_no": 12,
      "bbox": [
        275.7100830078125,
        223.58387756347656,
        369.7503967285156,
        236.3248748779297
      ],
      "text": "WebText2 Train Loss"
    },
    {
      "page_no": 12,
      "bbox": [
        193.1013946533203,
        204.12176513671875,
        208.20120239257812,
        217.1275634765625
      ],
      "text": "103"
    },
    {
      "page_no": 12,
      "bbox": [
        193.1013946533203,
        169.65077209472656,
        208.20120239257812,
        182.6565704345703
      ],
      "text": "104"
    },
    {
      "page_no": 12,
      "bbox": [
        193.1013946533203,
        135.09779357910156,
        208.20120239257812,
        148.1035919189453
      ],
      "text": "105"
    },
    {
      "page_no": 12,
      "bbox": [
        193.1013946533203,
        100.70877838134766,
        208.20120239257812,
        113.7145767211914
      ],
      "text": "106"
    },
    {
      "page_no": 12,
      "bbox": [
        179.08102416992188,
        87.68567657470703,
        191.822021484375,
        211.68524169921875
      ],
      "text": "Critical Batch Size (Tokens)"
    },
    {
      "page_no": 12,
      "bbox": [
        228.4488067626953,
        72.92012786865234,
        417.57525634765625,
        88.20932006835938
      ],
      "text": "Critical Batch Size vs. Performance"
    },
    {
      "page_no": 12,
      "bbox": [
        336.7987060546875,
        165.80105590820312,
        407.73382568359375,
        176.55178833007812
      ],
      "text": "Empirical Bcrit, N = 3M"
    },
    {
      "page_no": 12,
      "bbox": [
        336.7987060546875,
        175.7949676513672,
        411.70782470703125,
        186.5457000732422
      ],
      "text": "Empirical Bcrit, N = 85M"
    },
    {
      "page_no": 12,
      "bbox": [
        336.7987060546875,
        184.24197387695312,
        426.54010009765625,
        198.2514190673828
      ],
      "text": "Bcrit = 2.1 × 108 tokens L\n4.8"
    },
    {
      "page_no": 12,
      "bbox": [
        336.7987060546875,
        197.1757049560547,
        419.97314453125,
        206.27642822265625
      ],
      "text": "Noise Scale Measurement"
    },
    {
      "page_no": 12,
      "bbox": [
        90.0,
        246.4269256591797,
        522.0044555664062,
        289.3470764160156
      ],
      "text": "Figure 10\nThe critical batch size Bcrit follows a power law in the loss as performance increase, and does\nnot depend directly on the model size. We ﬁnd that the critical batch size approximately doubles for every\n13% decrease in loss. Bcrit is measured empirically from the data shown in Figure 18, but it is also roughly\npredicted by the gradient noise scale, as in [MKAT18]."
    },
    {
      "page_no": 12,
      "bbox": [
        90.00001525878906,
        312.88446044921875,
        122.65741729736328,
        322.8470764160156
      ],
      "text": "deﬁning"
    },
    {
      "page_no": 12,
      "bbox": [
        250.4440155029297,
        323.7879333496094,
        342.4854431152344,
        340.4905090332031
      ],
      "text": "δL(N, D) ≡L(N, D)"
    },
    {
      "page_no": 12,
      "bbox": [
        305.7460021972656,
        330.3988037109375,
        522.0003662109375,
        347.32452392578125
      ],
      "text": "L(N, ∞) −1\n(4.2)"
    },
    {
      "page_no": 12,
      "bbox": [
        90.00003051757812,
        352.26092529296875,
        521.9990844726562,
        373.3630676269531
      ],
      "text": "and studying it as a function of N, D. In fact, we see empirically that δL depends only a speciﬁc combination\nof N and D, as shown in Figure 16. This follows from the scaling law of Equation (1.5), which implies"
    },
    {
      "page_no": 12,
      "bbox": [
        232.92303466796875,
        392.1138000488281,
        255.0269317626953,
        402.20550537109375
      ],
      "text": "δL ≈"
    },
    {
      "page_no": 12,
      "bbox": [
        265.67901611328125,
        378.1959228515625,
        300.8619384765625,
        402.20550537109375
      ],
      "text": "1 +\n\u0012 N"
    },
    {
      "page_no": 12,
      "bbox": [
        291.3659973144531,
        399.0769348144531,
        302.93359375,
        409.88055419921875
      ],
      "text": "Nc"
    },
    {
      "page_no": 12,
      "bbox": [
        304.6239929199219,
        380.2139587402344,
        323.0628967285156,
        395.3219299316406
      ],
      "text": "\u0013 αN"
    },
    {
      "page_no": 12,
      "bbox": [
        313.2539978027344,
        384.3489074707031,
        340.464599609375,
        396.3075256347656
      ],
      "text": "αD Dc"
    },
    {
      "page_no": 12,
      "bbox": [
        330.5429992675781,
        399.0769348144531,
        338.7920227050781,
        409.0395202636719
      ],
      "text": "D"
    },
    {
      "page_no": 12,
      "bbox": [
        342.1549987792969,
        378.9747619628906,
        522.0003662109375,
        402.43609619140625
      ],
      "text": "!αD\n−1\n(4.3)"
    },
    {
      "page_no": 12,
      "bbox": [
        90.0,
        420.47796630859375,
        405.29864501953125,
        430.6711120605469
      ],
      "text": "Note that at large D this formula also has a series expansion in powers of 1/D."
    },
    {
      "page_no": 12,
      "bbox": [
        89.99996948242188,
        436.8669738769531,
        522.0030517578125,
        457.9691162109375
      ],
      "text": "We estimate that the variation in the loss with different random seeds is roughly 0.02, which means that to\navoid overﬁtting when training to within that threshold of convergence we require"
    },
    {
      "page_no": 12,
      "bbox": [
        262.6619873046875,
        463.82147216796875,
        522.0003662109375,
        476.1911315917969
      ],
      "text": "D ≳(5 × 103) N 0.74\n(4.4)"
    },
    {
      "page_no": 12,
      "bbox": [
        90.00003051757812,
        480.83551025390625,
        522.001220703125,
        538.049072265625
      ],
      "text": "With this relation, models smaller than 109 parameters can be trained with minimal overﬁtting on the 22B\ntoken WebText2 dataset, but our largest models will encounter some mild overﬁtting. More generally, this\nrelation shows that dataset size may grow sub-linearly in model size while avoiding overﬁtting. Note however\nthat this does not typically represent maximally compute-efﬁcient training. We should also emphasize that\nwe have not optimized regularization (eg the dropout probability) while varying dataset and model size."
    },
    {
      "page_no": 12,
      "bbox": [
        90.00004577636719,
        555.2411499023438,
        358.9203796386719,
        567.1963500976562
      ],
      "text": "5\nScaling Laws with Model Size and Training Time"
    },
    {
      "page_no": 12,
      "bbox": [
        90.00004577636719,
        580.2044677734375,
        522.0035400390625,
        644.7120361328125
      ],
      "text": "In this section we will demonstrate that a simple scaling law provides a good description for the loss as a\nfunction of model size N and training time. First we will explain how to use the results of [MKAT18] to\ndeﬁne a universal training step Smin, which accounts for the fact that most of our models have not been\ntrained at an optimal batch size. Then we will demonstrate that we can ﬁt the model size and training time\ndependence of the loss using Equation (1.6). Later we will use these results to predict the optimal allocation\nof training compute between model size and training time, and then conﬁrm that prediction."
    },
    {
      "page_no": 12,
      "bbox": [
        90.00004577636719,
        659.3589477539062,
        265.031494140625,
        670.16259765625
      ],
      "text": "5.1\nAdjustment for Training at Bcrit(L)"
    },
    {
      "page_no": 12,
      "bbox": [
        90.00003051757812,
        679.7174682617188,
        521.9981689453125,
        722.4070434570312
      ],
      "text": "A simple empirical theory for the batch size dependence of training was developed in [MKAT18] (see also\n[SLA+18, ZLN+19]). It was argued that there is a critical batch size Bcrit for training; for B up to Bcrit\nthe batch size can be increased with very minimal degradation in compute-efﬁciency, whereas for B > Bcrit\nincreases in B result in diminishing returns. It was also argued that the gradient noise scale provides a simple"
    },
    {
      "page_no": 12,
      "bbox": [
        301.01904296875,
        742.3324584960938,
        310.98162841796875,
        752.2950439453125
      ],
      "text": "12"
    },
    {
      "page_no": 13,
      "bbox": [
        89.99999237060547,
        74.17692565917969,
        522.0001831054688,
        128.00607299804688
      ],
      "text": "prediction for Bcrit, and that neither depends directly on model size except through the value of the loss that\nhas been attained. These results can be used to predict how training time and compute will vary with the\nbatch size. To utilize both training time and compute as effectively as possible, it is best to train with a batch\nsize B ≈Bcrit. Training at B ≫Bcrit minimizes the number of training steps, while B ≪Bcrit minimizes\nthe use of compute."
    },
    {
      "page_no": 13,
      "bbox": [
        90.00006103515625,
        134.4324493408203,
        521.9982299804688,
        172.80548095703125
      ],
      "text": "More speciﬁcally, it was demonstrated that for a wide variety of neural network tasks, the number of training\nsteps S and the number of data examples processed E = BS satisfy the simple relation\n\u0012 S"
    },
    {
      "page_no": 13,
      "bbox": [
        250.75,
        155.5349578857422,
        320.3493957519531,
        187.2205810546875
      ],
      "text": "Smin\n−1\n\u0013 \u0012 E"
    },
    {
      "page_no": 13,
      "bbox": [
        306.43499755859375,
        162.69837951660156,
        522.0003662109375,
        187.2205810546875
      ],
      "text": "Emin\n−1\n\u0013\n= 1\n(5.1)"
    },
    {
      "page_no": 13,
      "bbox": [
        90.00001525878906,
        193.72496032714844,
        521.9996948242188,
        216.32113647460938
      ],
      "text": "when training to any ﬁxed value of the loss L. Here Smin is the minimum number of steps necessary to reach\nL, while Emin is the minimum number of data examples that must be processed."
    },
    {
      "page_no": 13,
      "bbox": [
        90.00001525878906,
        221.2525177001953,
        521.9981689453125,
        257.37860107421875
      ],
      "text": "We demonstrate the relation (5.1) for Transformers in Figure 18 in the appendix. This relation deﬁnes the\ncritical batch size\nBcrit(L) ≡Emin"
    },
    {
      "page_no": 13,
      "bbox": [
        320.0419921875,
        246.8054962158203,
        522.0003662109375,
        264.21258544921875
      ],
      "text": "Smin\n(5.2)"
    },
    {
      "page_no": 13,
      "bbox": [
        90.0,
        266.80950927734375,
        521.9979858398438,
        289.17510986328125
      ],
      "text": "which is a function of the target value of the loss. Training at the critical batch size makes a roughly optimal\ntime/compute tradeoff, requiring 2Smin training steps and processing E = 2Emin data examples."
    },
    {
      "page_no": 13,
      "bbox": [
        90.00003051757812,
        290.49151611328125,
        522.003662109375,
        336.7961120605469
      ],
      "text": "In Figure 10 we have plotted the critical batch size and gradient noise scale5 as a function of training loss for\ntwo different models. We see that Bcrit(L) is independent of model size, and only depends on the loss L. So\nthe predictions of [MKAT18] continue to hold for Transformer language models. The critical batch size can\nbe ﬁt with a power-law in the loss"
    },
    {
      "page_no": 13,
      "bbox": [
        267.655029296875,
        336.56396484375,
        522.0003662109375,
        360.2795104980469
      ],
      "text": "Bcrit(L) ≈\nB∗\nL1/αB\n(5.3)"
    },
    {
      "page_no": 13,
      "bbox": [
        90.0,
        359.9624938964844,
        239.9226531982422,
        374.6744079589844
      ],
      "text": "where B∗≈2 × 108 and αB ≈0.21."
    },
    {
      "page_no": 13,
      "bbox": [
        90.0,
        379.7359619140625,
        522.0020141601562,
        435.05908203125
      ],
      "text": "We have chosen this parameterization for Bcrit(L) because as the loss approaches its minimum value Lmin,\nthe gradient noise scale is expected to diverge, and we expect Bcrit to track this noise scale. We do not\nknow Lmin, as we see no sign that our models are approaching it, but Lmin > 0 since the entropy of natural\nlanguage is non-zero. Since apparently Lmin is much smaller than the values of L we have achieved, we used\na parameterization where Bcrit diverges as L →0."
    },
    {
      "page_no": 13,
      "bbox": [
        90.00009155273438,
        439.7609558105469,
        522.0023193359375,
        461.47357177734375
      ],
      "text": "We will use Bcrit(L) to estimate the relation between the number of training steps S while training at batch\nsize B = 219 tokens and the number of training steps while training at B ≫Bcrit. This is simply"
    },
    {
      "page_no": 13,
      "bbox": [
        175.0701141357422,
        467.5039367675781,
        522.0004272460938,
        491.8815612792969
      ],
      "text": "Smin(S) ≡\nS\n1 + Bcrit(L)/B\n(minimum steps, at B ≫Bcrit)\n(5.4)"
    },
    {
      "page_no": 13,
      "bbox": [
        90.00006103515625,
        498.24493408203125,
        522.004638671875,
        519.9585571289062
      ],
      "text": "for any given target value L for the loss. This also deﬁnes a critical value of the compute needed to train to L\nwith a model of size N if we were to train at B ≪Bcrit(L). This is"
    },
    {
      "page_no": 13,
      "bbox": [
        166.79611206054688,
        526.3219604492188,
        522.0003662109375,
        550.6995849609375
      ],
      "text": "Cmin(C) ≡\nC\n1 + B/Bcrit(L)\n(minimum compute, at B ≪Bcrit)\n(5.5)"
    },
    {
      "page_no": 13,
      "bbox": [
        90.00003051757812,
        557.0639038085938,
        414.9806823730469,
        567.2570190429688
      ],
      "text": "where C = 6NBS estimates the (non-embedding) compute used at batch size B."
    },
    {
      "page_no": 13,
      "bbox": [
        90.00003051757812,
        581.5039672851562,
        414.9790954589844,
        592.3075561523438
      ],
      "text": "5.2\nResults for L(N, Smin) and Performance with Model Size and Compute"
    },
    {
      "page_no": 13,
      "bbox": [
        90.0000228881836,
        601.4789428710938,
        521.9982299804688,
        633.4900512695312
      ],
      "text": "Now we will use Smin deﬁned in Equation (5.4) to obtain a simple and universal ﬁt for the dependence of the\nloss on model size and training time in the inﬁnite data limit. We will ﬁt the stable, Adam-optimized training\nruns using Equation (1.6), repeated here for convenience:"
    },
    {
      "page_no": 13,
      "bbox": [
        225.24002075195312,
        641.42529296875,
        305.9226379394531,
        659.112548828125
      ],
      "text": "L(N, Smin) =\n\u0012Nc"
    },
    {
      "page_no": 13,
      "bbox": [
        295.84100341796875,
        655.1429443359375,
        303.8509216308594,
        665.1055297851562
      ],
      "text": "N"
    },
    {
      "page_no": 13,
      "bbox": [
        307.6130065917969,
        634.2619018554688,
        362.2226257324219,
        658.271484375
      ],
      "text": "\u0013αN\n+\n\u0012 Sc"
    },
    {
      "page_no": 13,
      "bbox": [
        347.7300109863281,
        655.1429443359375,
        367.0404357910156,
        665.946533203125
      ],
      "text": "Smin"
    },
    {
      "page_no": 13,
      "bbox": [
        368.7330322265625,
        638.6617431640625,
        522.0004272460938,
        658.5020141601562
      ],
      "text": "\u0013αS\n(5.6)"
    },
    {
      "page_no": 13,
      "bbox": [
        90.00006103515625,
        672.6284790039062,
        521.9981689453125,
        693.5000610351562
      ],
      "text": "for the loss. We include all training steps after the warmup period of the learning rate schedule, and ﬁnd a ﬁt\nto the data with the parameters:"
    },
    {
      "page_no": 13,
      "bbox": [
        90.0,
        701.6947021484375,
        522.00048828125,
        723.162353515625
      ],
      "text": "5Although the critical batch size roughly matches the gradient noise scale, we are using a direct measurements of\nBcrit from Figures 18 and 10 for all our later analyses."
    },
    {
      "page_no": 13,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "13"
    },
    {
      "page_no": 14,
      "bbox": [
        129.76760864257812,
        182.46713256835938,
        229.6159210205078,
        192.7504425048828
      ],
      "text": "104\n106\n108"
    },
    {
      "page_no": 14,
      "bbox": [
        129.52801513671875,
        191.65875244140625,
        232.20359802246094,
        201.7327117919922
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 14,
      "bbox": [
        104.71273803710938,
        176.68446350097656,
        109.11015319824219,
        186.7584228515625
      ],
      "text": "2"
    },
    {
      "page_no": 14,
      "bbox": [
        104.71273803710938,
        148.36268615722656,
        109.11015319824219,
        158.4366455078125
      ],
      "text": "3"
    },
    {
      "page_no": 14,
      "bbox": [
        104.71273803710938,
        128.26806640625,
        109.11015319824219,
        138.34202575683594
      ],
      "text": "4"
    },
    {
      "page_no": 14,
      "bbox": [
        104.71273803710938,
        112.68147277832031,
        109.11015319824219,
        122.75543975830078
      ],
      "text": "5"
    },
    {
      "page_no": 14,
      "bbox": [
        104.71273803710938,
        99.94630432128906,
        109.11015319824219,
        110.020263671875
      ],
      "text": "6"
    },
    {
      "page_no": 14,
      "bbox": [
        104.71273803710938,
        79.8516845703125,
        109.11015319824219,
        99.2528305053711
      ],
      "text": "7\n8"
    },
    {
      "page_no": 14,
      "bbox": [
        93.62721252441406,
        116.77861785888672,
        103.701171875,
        149.85604858398438
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 14,
      "bbox": [
        111.35128021240234,
        72.7259750366211,
        250.8324432373047,
        84.81472778320312
      ],
      "text": "Performance vs Compute Budget"
    },
    {
      "page_no": 14,
      "bbox": [
        266.916015625,
        164.58206176757812,
        282.91033935546875,
        174.86538696289062
      ],
      "text": "10\n5"
    },
    {
      "page_no": 14,
      "bbox": [
        266.916015625,
        149.9785614013672,
        282.91033935546875,
        160.26187133789062
      ],
      "text": "10\n4"
    },
    {
      "page_no": 14,
      "bbox": [
        266.916015625,
        135.31024169921875,
        282.91033935546875,
        145.5935516357422
      ],
      "text": "10\n3"
    },
    {
      "page_no": 14,
      "bbox": [
        266.916015625,
        120.64191436767578,
        282.91033935546875,
        130.92523193359375
      ],
      "text": "10\n2"
    },
    {
      "page_no": 14,
      "bbox": [
        266.916015625,
        105.97357940673828,
        282.91033935546875,
        116.25691223144531
      ],
      "text": "10\n1"
    },
    {
      "page_no": 14,
      "bbox": [
        266.916015625,
        91.30525207519531,
        278.8550109863281,
        101.58858489990234
      ],
      "text": "100"
    },
    {
      "page_no": 14,
      "bbox": [
        282.76953125,
        117.6528549194336,
        292.843505859375,
        148.98793029785156
      ],
      "text": "PF-dayss"
    },
    {
      "page_no": 14,
      "bbox": [
        354.5531921386719,
        182.43798828125,
        486.4498291015625,
        192.76937866210938
      ],
      "text": "106\n107\n108\n109"
    },
    {
      "page_no": 14,
      "bbox": [
        361.48004150390625,
        191.679443359375,
        463.9892883300781,
        201.73709106445312
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 14,
      "bbox": [
        331.1609191894531,
        159.30543518066406,
        342.13665771484375,
        169.3630828857422
      ],
      "text": "2.4"
    },
    {
      "page_no": 14,
      "bbox": [
        331.1609191894531,
        137.98020935058594,
        342.13665771484375,
        148.03785705566406
      ],
      "text": "3.0"
    },
    {
      "page_no": 14,
      "bbox": [
        331.1609191894531,
        120.55624389648438,
        342.13665771484375,
        130.6138916015625
      ],
      "text": "3.6"
    },
    {
      "page_no": 14,
      "bbox": [
        331.1609191894531,
        105.82447814941406,
        342.13665771484375,
        115.88211822509766
      ],
      "text": "4.2"
    },
    {
      "page_no": 14,
      "bbox": [
        331.1609191894531,
        93.06324768066406,
        342.13665771484375,
        103.12088775634766
      ],
      "text": "4.8"
    },
    {
      "page_no": 14,
      "bbox": [
        331.1609191894531,
        81.80705261230469,
        342.13665771484375,
        91.86469268798828
      ],
      "text": "5.4"
    },
    {
      "page_no": 14,
      "bbox": [
        320.0933837890625,
        116.92058563232422,
        330.1510009765625,
        149.9444580078125
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 14,
      "bbox": [
        367.0001220703125,
        72.93930053710938,
        458.77386474609375,
        85.00846862792969
      ],
      "text": "Performance vs Steps"
    },
    {
      "page_no": 14,
      "bbox": [
        497.4720153808594,
        149.99942016601562,
        509.3916931152344,
        160.26609802246094
      ],
      "text": "104"
    },
    {
      "page_no": 14,
      "bbox": [
        497.4720153808594,
        99.60411071777344,
        509.3916931152344,
        109.87078857421875
      ],
      "text": "105"
    },
    {
      "page_no": 14,
      "bbox": [
        509.35528564453125,
        123.65786743164062,
        519.4129028320312,
        143.2071075439453
      ],
      "text": "Steps"
    },
    {
      "page_no": 14,
      "bbox": [
        89.99995422363281,
        211.3895263671875,
        522.003173828125,
        254.17007446289062
      ],
      "text": "Figure 11\nWhen we hold either total compute or number of training steps ﬁxed, performance follows\nL(N, S) from Equation (5.6). Each value of compute budget has an associated optimal model size that\nmaximizes performance. Mediocre ﬁts at small S are unsurprising, as the power-law equation for the learning\ncurves breaks down very early in training."
    },
    {
      "page_no": 14,
      "bbox": [
        198.40196228027344,
        273.450927734375,
        396.027587890625,
        284.25555419921875
      ],
      "text": "Parameter\nαN\nαS\nNc\nSc"
    },
    {
      "page_no": 14,
      "bbox": [
        207.17897033691406,
        293.5667419433594,
        410.6130676269531,
        305.0390625
      ],
      "text": "Value\n0.077\n0.76\n6.5 × 1013\n2.1 × 103"
    },
    {
      "page_no": 14,
      "bbox": [
        254.62997436523438,
        312.77093505859375,
        357.3704528808594,
        322.9640808105469
      ],
      "text": "Table 3\nFits to L(N, S)"
    },
    {
      "page_no": 14,
      "bbox": [
        90.0,
        345.56646728515625,
        521.9982299804688,
        366.4380798339844
      ],
      "text": "With these parameters, we obtain the learning curve ﬁts in Figure 4. Though the ﬁts are imperfect, we believe\nthey are quite compelling given the simplicity of Equation (5.6)."
    },
    {
      "page_no": 14,
      "bbox": [
        90.0,
        372.8644714355469,
        522.00048828125,
        415.5540771484375
      ],
      "text": "The data and ﬁts can be visualized in a different and more interesting way, as shown in Figure 11. There we\nstudy the test loss as a function of model size while ﬁxing either the total non-embedding compute C used\nin training, or the number of steps S. For the ﬁts we use Equation (5.5) and (5.4) along with the parameters\nabove and Equation (5.6)."
    },
    {
      "page_no": 14,
      "bbox": [
        90.0,
        421.74993896484375,
        522.0003051757812,
        464.6700744628906
      ],
      "text": "The power-law dependence of the loss on Smin reﬂects the interplay of optimizer dynamics and the loss\nlandscape. Since the ﬁts are best late in training, when the loss may be approximately quadratic, the power-\nlaw should provide information about the spectrum of the Hessian of the loss. Its universality suggests that\nthe Hessian eigenvalue density is roughly independent of model size."
    },
    {
      "page_no": 14,
      "bbox": [
        90.00001525878906,
        481.76751708984375,
        272.026611328125,
        491.7301025390625
      ],
      "text": "5.3\nLower Bound on Early Stopping Step"
    },
    {
      "page_no": 14,
      "bbox": [
        90.0,
        502.679931640625,
        522.0049438476562,
        567.4180297851562
      ],
      "text": "The results for L(N, Smin) can be used to derive a lower-bound (and rough estimate) of the step at which\nearly stopping should occur when training is data limited. It is motivated by the idea that ﬁnite and inﬁnite D\nlearning curves for a given model will be very similar until we reach Smin ≈Sstop. Thus overﬁtting should\nbe proportional to the correction from simply ending training at Sstop. This will underestimate Sstop, because\nin reality the test loss will decrease more slowly when we have a ﬁnite D, and therefore we will require more\ntraining steps to reach the optimal test loss at ﬁnite D. This line of reasoning leads to the inequality"
    },
    {
      "page_no": 14,
      "bbox": [
        217.9520263671875,
        576.5529174804688,
        522.0003051757812,
        602.3995361328125
      ],
      "text": "Sstop(N, D) ≳\nSc\n[L(N, D) −L(N, ∞)]1/αS\n(5.7)"
    },
    {
      "page_no": 14,
      "bbox": [
        90.0,
        612.6337890625,
        522.0051879882812,
        655.6830444335938
      ],
      "text": "where L(N, ∞) is the converged loss, evaluated with inﬁnite available data. This inequality and its com-\nparison to the empirical data is displayed in Figure 16 in the appendix. In that ﬁgure, the values of Sstop\nand L(N, D) are empirical (though Sstop is adjusted to mimic training at B ≫Bcrit), while L(N, ∞) is\ncomputed from the ﬁt to L(N, D) evaluated at D = ∞."
    },
    {
      "page_no": 14,
      "bbox": [
        90.00007629394531,
        675.1861572265625,
        327.44232177734375,
        687.141357421875
      ],
      "text": "6\nOptimal Allocation of the Compute Budget"
    },
    {
      "page_no": 14,
      "bbox": [
        90.00006866455078,
        701.3590087890625,
        522.003662109375,
        722.4070434570312
      ],
      "text": "We displayed the empirical trend of performance as a function of the computation used during training in\nthe top-right of Figure 1. However, this result involved training at a ﬁxed batch size B, whereas we know"
    },
    {
      "page_no": 14,
      "bbox": [
        301.0190734863281,
        742.3324584960938,
        310.9816589355469,
        752.2950439453125
      ],
      "text": "14"
    },
    {
      "page_no": 15,
      "bbox": [
        141.67323303222656,
        123.1880111694336,
        258.30145263671875,
        131.82337951660156
      ],
      "text": "Models between 0.6x and 2.2x the"
    },
    {
      "page_no": 15,
      "bbox": [
        142.70816040039062,
        131.98483276367188,
        256.916748046875,
        140.6201934814453
      ],
      "text": "optimal size can be trained with a"
    },
    {
      "page_no": 15,
      "bbox": [
        152.02243041992188,
        140.78164672851562,
        245.9611053466797,
        149.41700744628906
      ],
      "text": "20% larger compute budget"
    },
    {
      "page_no": 15,
      "bbox": [
        365.2159423828125,
        82.82613372802734,
        456.7639465332031,
        109.05513763427734
      ],
      "text": "Smaller models require \nmore steps to train, while \nlarger models require fewer"
    },
    {
      "page_no": 15,
      "bbox": [
        374.5302429199219,
        163.6078338623047,
        471.14935302734375,
        180.95309448242188
      ],
      "text": "Our framework does not \ncapture early training dynamics"
    },
    {
      "page_no": 15,
      "bbox": [
        90.0,
        213.7864990234375,
        521.9990234375,
        267.4770202636719
      ],
      "text": "Figure 12\nLeft: Given a ﬁxed compute budget, a particular model size is optimal, though somewhat larger\nor smaller models can be trained with minimal additional compute. Right: Models larger than the compute-\nefﬁcient size require fewer steps to train, allowing for potentially faster training if sufﬁcient additional paral-\nlelism is possible. Note that this equation should not be trusted for very large models, as it is only valid in the\npower-law region of the learning curve, after initial transient effects."
    },
    {
      "page_no": 15,
      "bbox": [
        209.72154235839844,
        397.348388671875,
        395.00238037109375,
        408.170166015625
      ],
      "text": "10\n8\n10\n6\n10\n4\n10\n2\n100"
    },
    {
      "page_no": 15,
      "bbox": [
        247.92996215820312,
        407.02130126953125,
        380.5754089355469,
        417.62274169921875
      ],
      "text": "Compute (PF-days), non-embedding"
    },
    {
      "page_no": 15,
      "bbox": [
        210.8616943359375,
        391.262939453125,
        215.48936462402344,
        401.8643798828125
      ],
      "text": "2"
    },
    {
      "page_no": 15,
      "bbox": [
        210.8616943359375,
        356.9736328125,
        215.48936462402344,
        367.5750732421875
      ],
      "text": "3"
    },
    {
      "page_no": 15,
      "bbox": [
        210.8616943359375,
        332.6449890136719,
        215.48936462402344,
        343.2464294433594
      ],
      "text": "4"
    },
    {
      "page_no": 15,
      "bbox": [
        210.8616943359375,
        313.77423095703125,
        215.48936462402344,
        324.37567138671875
      ],
      "text": "5"
    },
    {
      "page_no": 15,
      "bbox": [
        210.8616943359375,
        298.3556823730469,
        215.48936462402344,
        308.9571228027344
      ],
      "text": "6"
    },
    {
      "page_no": 15,
      "bbox": [
        210.8616943359375,
        285.31951904296875,
        215.48936462402344,
        295.92095947265625
      ],
      "text": "7"
    },
    {
      "page_no": 15,
      "bbox": [
        199.19570922851562,
        323.2828674316406,
        209.79714965820312,
        358.09228515625
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 15,
      "bbox": [
        318.480224609375,
        288.0309143066406,
        403.1048889160156,
        301.462646484375
      ],
      "text": "L = (Cmin/2.3 108)\n0.050"
    },
    {
      "page_no": 15,
      "bbox": [
        318.480224609375,
        300.32794189453125,
        393.07452392578125,
        312.7623596191406
      ],
      "text": "L = (C/2.0 107)\n0.057"
    },
    {
      "page_no": 15,
      "bbox": [
        90.0,
        427.4195251464844,
        522.0015869140625,
        481.10906982421875
      ],
      "text": "Figure 13\nWhen adjusting performance to simulate training far below the critical batch size, we ﬁnd a\nsomewhat altered power law for L(Cmin) when compared with the fully empirical results. The conspicuous\nlump at 10−5 PF-days marks the transition from 1-layer to 2-layer networks; we exclude 1-layer networks\nin the power-law ﬁts. It is the L(Cmin) trend that we expect to provide a reliable extrapolation for larger\ncompute."
    },
    {
      "page_no": 15,
      "bbox": [
        90.0,
        501.449462890625,
        521.998291015625,
        547.7540283203125
      ],
      "text": "that in fact we could train more efﬁciently6 by training at the batch size Bcrit discussed in Section 5.1.\nLarge and small values of the loss could have been achieved with fewer samples or fewer steps, respectively,\nand correcting for this inefﬁciency by standardizing to the critical batch size results in cleaner and more\npredictable trends."
    },
    {
      "page_no": 15,
      "bbox": [
        90.0,
        554.180419921875,
        522.0028076171875,
        597.4805297851562
      ],
      "text": "In this section we will adjust for this oversight. More importantly, we will use the results of Section 5\nto determine the optimal allocation of compute between model size N and the quantity of data processed\nduring training, namely 2BcritSmin. We will determine this allocation both empirically and theoretically, by\nusing the equation for L(N, Smin), and we will demonstrate that these methods agree."
    },
    {
      "page_no": 15,
      "bbox": [
        90.00001525878906,
        612.12646484375,
        273.84979248046875,
        622.0890502929688
      ],
      "text": "6.1\nOptimal Performance and Allocations"
    },
    {
      "page_no": 15,
      "bbox": [
        90.00001525878906,
        632.533447265625,
        521.9982299804688,
        665.8080444335938
      ],
      "text": "Let us ﬁrst study the loss as a function of the optimally allocated compute from Equation (5.5). The result is\nplotted in Figure 13, along with a power-law ﬁt. We see that as compared to the compute plot of Figure 1, the\nnew ﬁt with Cmin is somewhat improved."
    },
    {
      "page_no": 15,
      "bbox": [
        90.0,
        670.5089111328125,
        522.0014038085938,
        692.2225341796875
      ],
      "text": "Given L(Cmin), it is natural to ask for the optimal model size N(Cmin) that provides the minimal loss with a\ngiven quantity of training compute. The optimal model size is shown in Figure 14. We observe that N(Cmin)"
    },
    {
      "page_no": 15,
      "bbox": [
        89.99996948242188,
        701.6947021484375,
        522.0018920898438,
        722.1663818359375
      ],
      "text": "6One might ask why we did not simply train at Bcrit in the ﬁrst place. The reason is that it depends not only on the\nmodel but also on the target value of the loss we wish to achieve, and so is a moving target."
    },
    {
      "page_no": 15,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "15"
    },
    {
      "page_no": 16,
      "bbox": [
        142.45748901367188,
        183.7381134033203,
        289.3598327636719,
        194.20758056640625
      ],
      "text": "10\n7\n10\n5\n10\n3\n10\n1"
    },
    {
      "page_no": 16,
      "bbox": [
        144.81146240234375,
        193.10308837890625,
        272.3346862792969,
        203.29515075683594
      ],
      "text": "Compute (PF-days), non-embedding"
    },
    {
      "page_no": 16,
      "bbox": [
        104.95751190185547,
        160.43600463867188,
        117.03649139404297,
        170.8398895263672
      ],
      "text": "103"
    },
    {
      "page_no": 16,
      "bbox": [
        104.95751190185547,
        129.89358520507812,
        117.03649139404297,
        140.29747009277344
      ],
      "text": "105"
    },
    {
      "page_no": 16,
      "bbox": [
        104.95751190185547,
        99.41671752929688,
        117.03649139404297,
        109.82061004638672
      ],
      "text": "107"
    },
    {
      "page_no": 16,
      "bbox": [
        93.6405258178711,
        77.40242004394531,
        103.83258819580078,
        181.28175354003906
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 16,
      "bbox": [
        146.8290252685547,
        79.49041748046875,
        215.68923950195312,
        91.52117919921875
      ],
      "text": "N = (1.3 109) C0.73"
    },
    {
      "page_no": 16,
      "bbox": [
        146.8290252685547,
        84.15755462646484,
        215.6947021484375,
        102.98368835449219
      ],
      "text": "min\nN = (1.6 109) C0.88"
    },
    {
      "page_no": 16,
      "bbox": [
        368.8979187011719,
        183.77735900878906,
        512.7354125976562,
        194.2283935546875
      ],
      "text": "10\n7\n10\n5\n10\n3\n10\n1"
    },
    {
      "page_no": 16,
      "bbox": [
        359.5565185546875,
        193.12583923339844,
        511.4839172363281,
        203.29995727539062
      ],
      "text": "Compute (PF-days), excluding embeddings"
    },
    {
      "page_no": 16,
      "bbox": [
        344.7542724609375,
        178.00267028808594,
        349.1954040527344,
        188.17678833007812
      ],
      "text": "0"
    },
    {
      "page_no": 16,
      "bbox": [
        331.427490234375,
        148.67868041992188,
        349.1920471191406,
        158.85279846191406
      ],
      "text": "5000"
    },
    {
      "page_no": 16,
      "bbox": [
        326.9852600097656,
        119.35467529296875,
        349.19091796875,
        129.52879333496094
      ],
      "text": "10000"
    },
    {
      "page_no": 16,
      "bbox": [
        326.9852600097656,
        90.03067016601562,
        349.19091796875,
        100.20478820800781
      ],
      "text": "15000"
    },
    {
      "page_no": 16,
      "bbox": [
        315.7895202636719,
        119.57813262939453,
        325.963623046875,
        139.353759765625
      ],
      "text": "Steps"
    },
    {
      "page_no": 16,
      "bbox": [
        378.5248107910156,
        79.66865539550781,
        430.3208923339844,
        90.82849884033203
      ],
      "text": "Smin (adjusted)"
    },
    {
      "page_no": 16,
      "bbox": [
        378.5248107910156,
        90.68640899658203,
        455.8866882324219,
        103.84162139892578
      ],
      "text": "Smin = (5.4 103) C0.03"
    },
    {
      "page_no": 16,
      "bbox": [
        378.5248107910156,
        95.34532165527344,
        453.7201232910156,
        112.8145751953125
      ],
      "text": "min\nS (fixed-batch)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.0,
        212.8429412841797,
        522.00244140625,
        266.6730651855469
      ],
      "text": "Figure 14\nLeft: Each value of the compute budget Cmin has an associated optimal model size N. Optimal\nmodel size grows very rapidly with Cmin, increasing by 5x for each 10x increase in compute. The number\nof data examples processed makes up the remainder of the increase, growing relatively modestly by only 2x.\nRight: The batch-adjusted number of optimization steps also grows very slowly, if at all, meaning that most\nof the growth in data examples processed can be used for increased batch sizes."
    },
    {
      "page_no": 16,
      "bbox": [
        90.00001525878906,
        291.2314453125,
        237.82505798339844,
        301.1940612792969
      ],
      "text": "can be ﬁt very well with a power-law"
    },
    {
      "page_no": 16,
      "bbox": [
        257.4720153808594,
        308.46673583984375,
        522.0003662109375,
        321.04754638671875
      ],
      "text": "N(Cmin) ∝(Cmin)0.73.\n(6.1)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.0,
        329.71746826171875,
        459.7220153808594,
        339.6800842285156
      ],
      "text": "In Figure 12, we show the effect of training models of sub-optimal sizes (see Appendix B.4)."
    },
    {
      "page_no": 16,
      "bbox": [
        90.0,
        345.746826171875,
        522.0028076171875,
        379.2210998535156
      ],
      "text": "By deﬁnition Cmin ≡6NBcritS, and so we can use N(Cmin) to extract further results. In particular, since\nprior ﬁts show B ∝L−4.8 and L ∝C−0.05\nmin\n, we can conclude that Bcrit ∝C0.24\nmin . This leads us to conclude\nthat the optimal number of steps will only grow very slowly with compute, as"
    },
    {
      "page_no": 16,
      "bbox": [
        266.39801025390625,
        386.4937744140625,
        522.0003662109375,
        399.5984191894531
      ],
      "text": "Smin ∝(Cmin)0.03,\n(6.2)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.00003051757812,
        407.7445068359375,
        521.9981689453125,
        428.6161193847656
      ],
      "text": "matching the empirical results in Figure 14. In fact the measured exponent is sufﬁciently small that our results\nmay even be consistent with an exponent of zero."
    },
    {
      "page_no": 16,
      "bbox": [
        90.00003051757812,
        435.0425109863281,
        522.0023193359375,
        477.73211669921875
      ],
      "text": "Thus we conclude that as we scale up language modeling with an optimal allocation of computation, we\nshould predominantly increase the model size N, while simultaneously scaling up the batch size via B ∝\nBcrit with negligible increase in the number of serial steps. Since compute-efﬁcient training uses relatively\nfew optimization steps, additional work on speeding up early training dynamics may be warranted."
    },
    {
      "page_no": 16,
      "bbox": [
        90.00003051757812,
        493.5279846191406,
        233.51148986816406,
        504.33160400390625
      ],
      "text": "6.2\nPredictions from L(N, Smin)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.00003051757812,
        514.114990234375,
        522.0001220703125,
        537.9085693359375
      ],
      "text": "The results for L(Cmin) and the allocations can be predicted from the L(N, Smin) equation obtained in\nSection 5. Given our equation for L(N, Smin), we can substitute Smin = Cmin"
    },
    {
      "page_no": 16,
      "bbox": [
        89.99996185302734,
        526.6824951171875,
        522.004150390625,
        558.4630737304688
      ],
      "text": "6NB and then ﬁnd the minimum\nof the loss as a function of N, while ﬁxing the training compute. We carry out this procedure in detail in\nAppendix B, where we also provide some additional predictions."
    },
    {
      "page_no": 16,
      "bbox": [
        89.99996185302734,
        564.8894653320312,
        335.0101623535156,
        574.85205078125
      ],
      "text": "For the loss as a function of training compute, we predict that"
    },
    {
      "page_no": 16,
      "bbox": [
        253.69696044921875,
        587.1017456054688,
        331.8923645019531,
        612.759521484375
      ],
      "text": "L(Cmin) =\n\u0012Cmin\nc\nCmin"
    },
    {
      "page_no": 16,
      "bbox": [
        333.5849914550781,
        583.4249267578125,
        522.0003662109375,
        605.3140258789062
      ],
      "text": "\u0013αmin\nC\n(6.3)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.0,
        620.9014282226562,
        114.33863067626953,
        630.864013671875
      ],
      "text": "where"
    },
    {
      "page_no": 16,
      "bbox": [
        223.34800720214844,
        630.2279052734375,
        522.0003662109375,
        655.258544921875
      ],
      "text": "αmin\nC\n≡\n1\n1/αS + 1/αB + 1/αN\n≈0.054\n(6.4)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.0,
        660.2984619140625,
        390.26275634765625,
        670.2610473632812
      ],
      "text": "in excellent agreement with the exponent of Figure 13. We also predict that"
    },
    {
      "page_no": 16,
      "bbox": [
        221.4080047607422,
        678.82080078125,
        522.0003662109375,
        692.8656005859375
      ],
      "text": "N(Cmin) ∝(Cmin)αmin\nC\n/αN ≈(Cmin)0.71\n(6.5)"
    },
    {
      "page_no": 16,
      "bbox": [
        90.0,
        701.5354614257812,
        521.9981689453125,
        722.4070434570312
      ],
      "text": "which also matches the scaling of Figure 14 to within a few percent. Our scaling laws provide a predictive\nframework for the performance of language modeling."
    },
    {
      "page_no": 16,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "16"
    },
    {
      "page_no": 17,
      "bbox": [
        354.176025390625,
        164.52804565429688,
        481.7458801269531,
        173.6463165283203
      ],
      "text": "The intersection point is sensitive to"
    },
    {
      "page_no": 17,
      "bbox": [
        357.3067626953125,
        173.3984832763672,
        476.3061828613281,
        182.51675415039062
      ],
      "text": "the precise power-law parameters"
    },
    {
      "page_no": 17,
      "bbox": [
        89.9999771118164,
        215.13250732421875,
        522.0025634765625,
        257.9130554199219
      ],
      "text": "Figure 15\nFar beyond the model sizes we study empirically, we ﬁnd a contradiction between our equations\nfor L(Cmin) and L(D) due to the slow growth of data needed for compute-efﬁcient training. The intersection\nmarks the point before which we expect our predictions to break down. The location of this point is highly\nsensitive to the precise exponents from our power-law ﬁts."
    },
    {
      "page_no": 17,
      "bbox": [
        89.9999771118164,
        280.219482421875,
        251.9818878173828,
        290.18206787109375
      ],
      "text": "6.3\nContradictions and a Conjecture"
    },
    {
      "page_no": 17,
      "bbox": [
        89.9999771118164,
        300.2854309082031,
        521.9981689453125,
        321.15704345703125
      ],
      "text": "We observe no signs of deviation from straight power-law trends at large values of compute, data, or model\nsize. Our trends must eventually level off, though, since natural language has non-zero entropy."
    },
    {
      "page_no": 17,
      "bbox": [
        89.9999771118164,
        327.58343505859375,
        522.00439453125,
        392.0910339355469
      ],
      "text": "Indeed, the trends for compute-efﬁcient training described in this section already contain an apparent contra-\ndiction. At scales several orders of magnitude above those documented here, the performance predicted by\nthe L(Cmin) scaling law decreases below what should be possible given the slow growth in training data with\ncompute. This implies that our scaling laws must break down before this point, but we conjecture that the\nintersection point has a deeper meaning: it provides an estimate of the point at which Transformer language\nmodels reach maximal performance."
    },
    {
      "page_no": 17,
      "bbox": [
        89.99996948242188,
        398.5174255371094,
        521.9984741210938,
        430.29803466796875
      ],
      "text": "Since the amount of data used by compute-efﬁcient training grows slowly with the compute budget, the\nperformance predicted by L(Cmin) eventually hits a lower bound set by the L(D) power law (see Figure 15).\nLet us work this out in more detail."
    },
    {
      "page_no": 17,
      "bbox": [
        89.99996948242188,
        436.7234191894531,
        499.7119140625,
        446.68603515625
      ],
      "text": "To keep overﬁtting under control, the results of Section 4 imply that we should scale the dataset size as"
    },
    {
      "page_no": 17,
      "bbox": [
        265.2139892578125,
        449.13275146484375,
        522.0003662109375,
        465.1474914550781
      ],
      "text": "D ∝N 0.74 ∝C0.54\nmin\n(6.6)"
    },
    {
      "page_no": 17,
      "bbox": [
        90.0,
        470.2568359375,
        362.7851867675781,
        481.0604553222656
      ],
      "text": "where we have used the compute-efﬁcient N(Cmin) from Figure 14."
    },
    {
      "page_no": 17,
      "bbox": [
        90.00001525878906,
        486.8753662109375,
        521.9981689453125,
        508.35845947265625
      ],
      "text": "Let us compare this to the data requirements of compute-efﬁcient training. If we train at the critical batch\nsize (i.e. C = 2Cmin) and never re-use data during training, we ﬁnd that data usage grows with compute as"
    },
    {
      "page_no": 17,
      "bbox": [
        172.04800415039062,
        513.4878540039062,
        522.0003662109375,
        537.8655395507812
      ],
      "text": "D(Cmin) =\n2Cmin\n6N(Cmin) ≈\n\u0000\n4 × 1010 tokens\n\u0001\n(Cmin/PF-Day)0.26\n(6.7)"
    },
    {
      "page_no": 17,
      "bbox": [
        90.0,
        543.5064697265625,
        521.9981689453125,
        586.1959838867188
      ],
      "text": "This is the maximum rate at which the dataset size can productively grow with compute, since it means that\nwe are only training for a single epoch. But it grows the dataset much more slowly than in Equation (6.6).\nIt appears to imply that compute-efﬁcient training will eventually run into a problem with overﬁtting, even if\nthe training process never re-uses any data!"
    },
    {
      "page_no": 17,
      "bbox": [
        89.99996185302734,
        592.6224365234375,
        522.0018920898438,
        640.3115234375
      ],
      "text": "According to Figure 1, we expect that when we are bottlenecked by the dataset size (ie by overﬁtting), the\nloss should scale as L(D) ∝D−0.095. This implies that the loss would scale with compute as L(D(Cmin)) ∝\nC−0.03\nmin\nonce we are data-limited. Once again, we have a contradiction, as this will eventually intersect with\nour prediction for L(Cmin) from Figure 13, where we found a scaling L(Cmin) ∝C−0.050\nmin\n."
    },
    {
      "page_no": 17,
      "bbox": [
        89.99993896484375,
        644.5379028320312,
        335.2349548339844,
        655.341552734375
      ],
      "text": "The intersection point of L(D(Cmin)) and L(Cmin) occurs at"
    },
    {
      "page_no": 17,
      "bbox": [
        113.9879150390625,
        658.4909057617188,
        522.0028076171875,
        672.7980346679688
      ],
      "text": "C∗∼104 PF-Days\nN ∗∼1012 parameters,\nD∗∼1012 tokens,\nL∗∼1.7 nats/token\n(6.8)"
    },
    {
      "page_no": 17,
      "bbox": [
        89.99993896484375,
        679.7174682617188,
        521.998046875,
        722.4070434570312
      ],
      "text": "though the numerical values are highly uncertain, varying by an order or magnitude in either direction de-\npending on the precise values of the exponents from the power-law ﬁts. The most obvious interpretation is\nthat our scaling laws break down at or before we reach this point, which is still many orders of magnitude\naway in both compute and model size."
    },
    {
      "page_no": 17,
      "bbox": [
        301.0189208984375,
        742.3324584960938,
        310.98150634765625,
        752.2950439453125
      ],
      "text": "17"
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        74.40748596191406,
        522.0042724609375,
        128.00601196289062
      ],
      "text": "One might also conjecture that this intersection point has a deeper meaning. If we cannot increase the model\nsize beyond N ∗without qualitatively different data requirements, perhaps this means that once we reach\nC∗\nmin and N ∗, we have extracted all of the reliable information available in natural language data. In this\ninterpretation, L∗would provide a rough estimate for the entropy-per-token7 of natural language. In this\nscenario, we would expect the loss trend to level off at or before L∗."
    },
    {
      "page_no": 18,
      "bbox": [
        89.99996948242188,
        134.2018280029297,
        522.0035400390625,
        209.84896850585938
      ],
      "text": "We can guess at the functional form of L(Cmin) as it levels off by considering a version of our training\ndataset with added noise. For example, we could append a random string of tokens to each context shown\nto the model to artiﬁcially boost the loss by a constant additive factor. Then, the distance from the noise\nﬂoor L −Lnoise would be a more meaningful performance metric, with even a small decrease in this distance\npotentially representing a signiﬁcant boost in qualitative performance. Since the artiﬁcial noise would affect\nall of our trends equally, the critical point of 6.8 would not change (aside from the absolute value of L∗), and\nmay be meaningful even if it occurs after the leveling off."
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        227.5390625,
        179.09014892578125,
        239.4942626953125
      ],
      "text": "7\nRelated Work"
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        252.8003692626953,
        521.9982299804688,
        295.4899597167969
      ],
      "text": "Power laws can arise from a wide variety of sources [THK18]. Power-law scalings with model and dataset\nsize in density estimation [Was06] and in random forest models [Bia12] may be connected with our results.\nThese models suggest that power-law exponents may have a very rough interpretation as the inverse of the\nnumber of relevant features in the data."
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        301.9163513183594,
        522.0048217773438,
        388.2429504394531
      ],
      "text": "Some early [BB01, Goo01] work found power-law scalings between performance and dataset size. More\nrecent work [HNA+17, HAD19] also investigated scaling between model size and data size; their work is\nperhaps the closest to ours in the literature8. Note, however, that [HNA+17] found super-linear scaling of\ndataset size with model size, whereas we ﬁnd a sub-linear scaling. There are some parallels between our\nﬁndings on optimal allocation of compute and [Kom19], including power-law learning curves. EfﬁcientNets\n[TL19] also appear to obey an approximate power-law relation between accuracy and model size. Very recent\nwork [RRBS19b] studies scaling with both dataset size and model size for a variety of datasets, and ﬁts an\nansatz similar to ours."
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        394.6683349609375,
        521.9982299804688,
        491.9039306640625
      ],
      "text": "EfﬁcientNet [TL19] advocates scaling depth and width exponentially (with different coefﬁcients) for optimal\nperformance of image models, resulting in a power-law scaling of width as a function of depth. We ﬁnd that\nfor language models this power should be roughly one when scaling up (as width/depth should remain ﬁxed).\nBut more importantly, we ﬁnd that the precise architectural hyperparameters are unimportant compared to the\noverall scale of the language model. In [VWB16] it was argued that deep models can function as ensembles\nof shallower models, which could potentially explain this ﬁnding. Earlier work [ZK16] has compared width\nand depth, and found that wide ResNets can outperform deep ResNets on image classiﬁcation. Some studies\nﬁx computation per data example, which tends to scale in proportion to the number of model parameters,\nwhereas we investigate scaling with both model size and the quantity of training computation."
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        498.3293151855469,
        522.0048828125,
        595.5648803710938
      ],
      "text": "Various works [AS17, BHMM18] have investigated generalization in highly overparameterized models, ﬁnd-\ning a “jamming transition” [GJS+19] when the model size reaches the dataset size (this may require training\nmany orders of magnitude beyond typical practice, and in particular does not use early stopping). We do\nnot observe such a transition, and ﬁnd that the necessary training data scales sublinearly in the model size.\nExpansions in the model size, particularly at large width [JGH18, LXS+19], may provide a useful framework\nfor thinking about some of our scaling relations. Our results on optimization, such as the shape of learning\ncurves, can likely be explained using a noisy quadratic model, which can provide quite accurate predictions\n[ZLN+19] in realistic settings. Making this connection quantitative will require a characterization of the\nHessian spectrum [Pap18, GKX19, GARD18]."
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        613.2550048828125,
        161.7431640625,
        625.210205078125
      ],
      "text": "8\nDiscussion"
    },
    {
      "page_no": 18,
      "bbox": [
        90.0,
        638.5162963867188,
        521.9981079101562,
        682.7008666992188
      ],
      "text": "We have observed consistent scalings of language model log-likelihood loss with non-embedding parameter\ncount N, dataset size D, and optimized training computation Cmin, as encapsulated in Equations (1.5) and\n(1.6). Conversely, we ﬁnd very weak dependence on many architectural and optimization hyperparameters.\nSince scalings with N, D, Cmin are power-laws, there are diminishing returns with increasing scale."
    },
    {
      "page_no": 18,
      "bbox": [
        89.99998474121094,
        690.8446655273438,
        522.00146484375,
        722.1663818359375
      ],
      "text": "7Deﬁning words using the wc utility, the WebText2 dataset has 1.4 tokens per word and 4.3 characters per token.\n8After this work was completed, [RRBS19a] also appeared, which makes similar predictions for the dependence of\nloss on both model and dataset size."
    },
    {
      "page_no": 18,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "18"
    },
    {
      "page_no": 19,
      "bbox": [
        90.0,
        74.17692565917969,
        521.998291015625,
        138.91506958007812
      ],
      "text": "We were able to precisely model the dependence of the loss on N and D, and alternatively on N and S, when\nthese parameters are varied simultaneously. We used these relations to derive the compute scaling, magnitude\nof overﬁtting, early stopping step, and data requirements when training large language models. So our scaling\nrelations go beyond mere observation to provide a predictive framework. One might interpret these relations\nas analogues of the ideal gas law, which relates the macroscopic properties of a gas in a universal way,\nindependent of most of the details of its microscopic consituents."
    },
    {
      "page_no": 19,
      "bbox": [
        90.00003051757812,
        145.34144592285156,
        521.9982299804688,
        231.66702270507812
      ],
      "text": "It is natural to conjecture that the scaling relations will apply to other generative modeling tasks with a\nmaximum likelihood loss, and perhaps in other settings as well. To this purpose, it will be interesting to\ntest these relations on other domains, such as images, audio, and video models, and perhaps also for random\nnetwork distillation. At this point we do not know which of our results depend on the structure of natural\nlanguage data, and which are universal. It would also be exciting to ﬁnd a theoretical framework from\nwhich the scaling relations can be derived: a ‘statistical mechanics’ underlying the ‘thermodynamics’ we\nhave observed. Such a theory might make it possible to derive other more precise predictions, and provide a\nsystematic understanding of the limitations of the scaling laws."
    },
    {
      "page_no": 19,
      "bbox": [
        90.00003051757812,
        238.09339904785156,
        521.998291015625,
        291.6919860839844
      ],
      "text": "In the domain of natural language, it will be important to investigate whether continued improvement on the\nloss translates into improvement on relevant language tasks. Smooth quantitative change can mask major\nqualitative improvements: “more is different”. For example, the smooth aggregate growth of the economy\nprovides no indication of the speciﬁc technological developments that underwrite it. Similarly, the smooth\nimprovements in language model loss may hide seemingly qualitative changes in capability."
    },
    {
      "page_no": 19,
      "bbox": [
        90.00003051757812,
        298.1183776855469,
        521.9992065429688,
        395.35296630859375
      ],
      "text": "Our results strongly suggest that larger models will continue to perform better, and will also be much more\nsample efﬁcient than has been previously appreciated. Big models may be more important than big data.\nIn this context, further investigation into model parallelism is warranted. Deep models can be trained using\npipelining [HCC+18], which splits parameters depth-wise between devices, but eventually requires increased\nbatch sizes as more devices are used. Wide networks on the other hand are more amenable to parallelization\n[SCP+18], since large layers can be split between multiple workers with less serial dependency. Sparsity\n[CGRS19, GRK17] or branching (e.g. [KSH12]) may allow for even faster training of large networks through\nincreased model parallelism. And using methods like [WRH17, WYL19], which grow networks as they train,\nit might be possible to remain on the compute-efﬁcient frontier for an entire training run."
    },
    {
      "page_no": 19,
      "bbox": [
        90.00003051757812,
        412.1640625,
        188.8336639404297,
        424.1192626953125
      ],
      "text": "Acknowledgements"
    },
    {
      "page_no": 19,
      "bbox": [
        90.00003051757812,
        436.8973693847656,
        521.998291015625,
        468.677978515625
      ],
      "text": "We would like to thank Shan Carter, Paul Christiano, Jack Clark, Ajeya Cotra, Ethan Dyer, Jason Eisner,\nDanny Hernandez, Jacob Hilton, Brice Menard, Chris Olah, and Ilya Sutskever for discussions and for feed-\nback on drafts of this work."
    },
    {
      "page_no": 19,
      "bbox": [
        301.01904296875,
        742.3323974609375,
        310.98162841796875,
        752.2949829101562
      ],
      "text": "19"
    },
    {
      "page_no": 20,
      "bbox": [
        90.0,
        70.37715148925781,
        191.65951538085938,
        91.0396499633789
      ],
      "text": "Appendices"
    },
    {
      "page_no": 20,
      "bbox": [
        90.0,
        109.93718719482422,
        239.3921661376953,
        121.89238739013672
      ],
      "text": "A\nSummary of Power Laws"
    },
    {
      "page_no": 20,
      "bbox": [
        90.0,
        135.35548400878906,
        488.43414306640625,
        145.31808471679688
      ],
      "text": "For easier reference, we provide a summary below of the key trends described throughout the paper."
    },
    {
      "page_no": 20,
      "bbox": [
        123.73200225830078,
        157.26348876953125,
        368.9604187011719,
        167.22608947753906
      ],
      "text": "Parameters\nData\nCompute\nBatch Size\nEquation"
    },
    {
      "page_no": 20,
      "bbox": [
        143.75399780273438,
        173.60377502441406,
        412.06292724609375,
        187.08056640625
      ],
      "text": "N\n∞\n∞\nFixed\nL (N) = (Nc/N)αN"
    },
    {
      "page_no": 20,
      "bbox": [
        143.3179931640625,
        190.3657989501953,
        411.8982238769531,
        203.84259033203125
      ],
      "text": "∞\nD\nEarly Stop\nFixed\nL (D) = (Dc/D)αD"
    },
    {
      "page_no": 20,
      "bbox": [
        131.9709930419922,
        206.0244903564453,
        440.4595642089844,
        220.60455322265625
      ],
      "text": "Optimal\n∞\nC\nFixed\nL (C) = (Cc/C)αC (naive)"
    },
    {
      "page_no": 20,
      "bbox": [
        138.30499267578125,
        222.38796997070312,
        452.7919006347656,
        239.278564453125
      ],
      "text": "Nopt\nDopt\nCmin\nB ≪Bcrit\nL (Cmin) =\n\u0000\nCmin\nc\n/Cmin\n\u0001αmin\nC"
    },
    {
      "page_no": 20,
      "bbox": [
        143.75399780273438,
        240.9153594970703,
        400.98455810546875,
        257.9930725097656
      ],
      "text": "N\nD\nEarly Stop\nFixed\nL (N, D) =\n\u0014\u0000 Nc"
    },
    {
      "page_no": 20,
      "bbox": [
        393.02801513671875,
        241.36593627929688,
        418.34991455078125,
        260.5445556640625
      ],
      "text": "N\n\u0001 αN"
    },
    {
      "page_no": 20,
      "bbox": [
        408.5409851074219,
        245.5009002685547,
        444.20184326171875,
        257.76251220703125
      ],
      "text": "αD + Dc"
    },
    {
      "page_no": 20,
      "bbox": [
        436.2149963378906,
        253.5707550048828,
        442.728515625,
        260.5445556640625
      ],
      "text": "D"
    },
    {
      "page_no": 20,
      "bbox": [
        445.89801025390625,
        238.1527862548828,
        461.865234375,
        250.87796020507812
      ],
      "text": "\u0015αD"
    },
    {
      "page_no": 20,
      "bbox": [
        143.75399780273438,
        263.92572021484375,
        393.88458251953125,
        279.8530578613281
      ],
      "text": "N\n∞\nS steps\nB\nL (N, S) =\n\u0000 Nc"
    },
    {
      "page_no": 20,
      "bbox": [
        385.9280090332031,
        263.00079345703125,
        484.5280456542969,
        282.96527099609375
      ],
      "text": "N\n\u0001αN +\n\u0010\nSc\nSmin(S,B)\n\u0011αS"
    },
    {
      "page_no": 20,
      "bbox": [
        290.5429992675781,
        289.29052734375,
        321.4569396972656,
        299.25311279296875
      ],
      "text": "Table 4"
    },
    {
      "page_no": 20,
      "bbox": [
        90.0,
        311.3884582519531,
        277.61572265625,
        321.35107421875
      ],
      "text": "The empirical ﬁtted values for these trends are:"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        333.2955017089844,
        393.39691162109375,
        343.2580871582031
      ],
      "text": "Power Law\nScale (tokenization-dependent)"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        348.9244689941406,
        415.8984680175781,
        363.7655029296875
      ],
      "text": "αN = 0.076\nNc = 8.8 × 1013 params (non-embed)"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        365.68646240234375,
        359.334716796875,
        380.5274963378906
      ],
      "text": "αD = 0.095\nDc = 5.4 × 1013 tokens"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        382.4484558105469,
        360.98040771484375,
        397.2904968261719
      ],
      "text": "αC = 0.057\nCc = 1.6 × 107 PF-days"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        399.2104797363281,
        371.3514404296875,
        414.6485900878906
      ],
      "text": "αmin\nC\n= 0.050\nCmin\nc\n= 3.1 × 108 PF-days"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        415.97247314453125,
        355.2117004394531,
        430.81451416015625
      ],
      "text": "αB = 0.21\nB∗= 2.1 × 108 tokens"
    },
    {
      "page_no": 20,
      "bbox": [
        193.61099243164062,
        432.7344665527344,
        347.23724365234375,
        447.5765075683594
      ],
      "text": "αS = 0.76\nSc = 2.1 × 103 steps"
    },
    {
      "page_no": 20,
      "bbox": [
        290.5429992675781,
        454.18450927734375,
        321.4569396972656,
        464.1470947265625
      ],
      "text": "Table 5"
    },
    {
      "page_no": 20,
      "bbox": [
        90.0,
        476.2814636230469,
        358.0138244628906,
        486.24407958984375
      ],
      "text": "The optimal parameters for compute efﬁcient training are given by:"
    },
    {
      "page_no": 20,
      "bbox": [
        157.5229949951172,
        498.1885070800781,
        382.9378967285156,
        508.1510925292969
      ],
      "text": "Compute-Efﬁcient Value\nPower Law\nScale"
    },
    {
      "page_no": 20,
      "bbox": [
        157.5229949951172,
        513.8175048828125,
        451.98699951171875,
        529.3646240234375
      ],
      "text": "Nopt = Ne · CpN\nmin\npN = 0.73\nNe = 1.3 · 109 params"
    },
    {
      "page_no": 20,
      "bbox": [
        157.5229949951172,
        530.5794677734375,
        448.6796875,
        547.5555419921875
      ],
      "text": "B ≪Bcrit =\nB∗\nL1/αB = BeCpB\nmin\npB = 0.24\nBe = 2.0 · 106 tokens"
    },
    {
      "page_no": 20,
      "bbox": [
        157.5229949951172,
        547.3414306640625,
        441.24420166015625,
        563.7730102539062
      ],
      "text": "Smin = Se · CpS\nmin (lower bound)\npS = 0.03\nSe = 5.4 · 103 steps"
    },
    {
      "page_no": 20,
      "bbox": [
        157.5229949951172,
        564.1034545898438,
        445.59368896484375,
        580.5350341796875
      ],
      "text": "Dopt = De · CpD\nmin (1 epoch)\npD = 0.27\nDe = 2 · 1010 tokens"
    },
    {
      "page_no": 20,
      "bbox": [
        290.5429992675781,
        585.5535278320312,
        321.4569396972656,
        595.51611328125
      ],
      "text": "Table 6"
    },
    {
      "page_no": 20,
      "bbox": [
        90.0,
        619.1761474609375,
        352.7752990722656,
        631.13134765625
      ],
      "text": "B\nEmpirical Model of Compute-Efﬁcient Frontier"
    },
    {
      "page_no": 20,
      "bbox": [
        89.99996948242188,
        644.3639526367188,
        521.9996337890625,
        665.4660034179688
      ],
      "text": "Throughout this appendix all values of C, S, and αC are adjusted for training at the critical batch size Bcrit.\nWe have left off the ‘adj’ label to avoid cluttering the notation."
    },
    {
      "page_no": 20,
      "bbox": [
        89.99996948242188,
        681.0125122070312,
        195.7429656982422,
        690.97509765625
      ],
      "text": "B.1\nDeﬁning Equations"
    },
    {
      "page_no": 20,
      "bbox": [
        89.99996948242188,
        701.5354614257812,
        521.9982299804688,
        722.4070434570312
      ],
      "text": "The power-law ﬁt to the learning curves implies a simple prescription for compute-efﬁcient training. In this\nappendix, we will derive the optimal performance, model size, and number of training steps as a function of"
    },
    {
      "page_no": 20,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "20"
    },
    {
      "page_no": 21,
      "bbox": [
        90.0,
        74.40748596191406,
        428.5290832519531,
        84.37008666992188
      ],
      "text": "the compute budget. We start with the Equation (1.6), repeated here for convenience:"
    },
    {
      "page_no": 21,
      "bbox": [
        233.5780029296875,
        92.98237609863281,
        302.7966003417969,
        109.82855224609375
      ],
      "text": "L (N, S) =\n\u0012Nc"
    },
    {
      "page_no": 21,
      "bbox": [
        292.7149963378906,
        106.69993591308594,
        300.72491455078125,
        116.66253662109375
      ],
      "text": "N"
    },
    {
      "page_no": 21,
      "bbox": [
        304.48699951171875,
        90.21882629394531,
        354.276611328125,
        109.82861328125
      ],
      "text": "\u0013αN\n+\n\u0012Sc"
    },
    {
      "page_no": 21,
      "bbox": [
        346.34600830078125,
        106.69993591308594,
        352.4530944824219,
        116.66253662109375
      ],
      "text": "S"
    },
    {
      "page_no": 21,
      "bbox": [
        355.9670104980469,
        90.21882629394531,
        522.0001220703125,
        110.05917358398438
      ],
      "text": "\u0013αS\n.\n(B.1)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.00003051757812,
        124.74302673339844,
        522.0004272460938,
        145.84518432617188
      ],
      "text": "Here, S represents the number of parameter updates when training at the critical batch size [MKAT18],\nwhich was deﬁned in Equation (5.2)9:"
    },
    {
      "page_no": 21,
      "bbox": [
        271.4530334472656,
        146.47801208496094,
        522.0001220703125,
        170.19354248046875
      ],
      "text": "B (L) =\nB∗\nL1/αB .\n(B.2)"
    },
    {
      "page_no": 21,
      "bbox": [
        89.99996948242188,
        172.8859100341797,
        522.0018920898438,
        193.98806762695312
      ],
      "text": "We would like to determine optimal training parameters for a ﬁxed compute budget, so we replace S =\nC/ (6NB (L)), where C is the number of FLOPs used in the training run:"
    },
    {
      "page_no": 21,
      "bbox": [
        207.32395935058594,
        202.93434143066406,
        277.6925354003906,
        219.780517578125
      ],
      "text": "L (N, C) =\n\u0012Nc"
    },
    {
      "page_no": 21,
      "bbox": [
        267.6109924316406,
        216.6519012451172,
        275.62091064453125,
        226.614501953125
      ],
      "text": "N"
    },
    {
      "page_no": 21,
      "bbox": [
        279.38299560546875,
        200.17079162597656,
        380.31524658203125,
        226.79351806640625
      ],
      "text": "\u0013αN\n+\n\u0012\n6B∗Sc\nN\nL1/αBC"
    },
    {
      "page_no": 21,
      "bbox": [
        382.2209777832031,
        200.17079162597656,
        522.0001220703125,
        220.01113891601562
      ],
      "text": "\u0013αS\n.\n(B.3)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.0,
        234.99342346191406,
        332.39202880859375,
        250.93405151367188
      ],
      "text": "Now, we set ∂NL\n\f\f\nC = 0 to ﬁnd the condition for optimality:"
    },
    {
      "page_no": 21,
      "bbox": [
        205.20701599121094,
        255.7500457763672,
        238.45460510253906,
        272.45166015625
      ],
      "text": "0 = ∂L"
    },
    {
      "page_no": 21,
      "bbox": [
        224.66700744628906,
        269.32293701171875,
        238.52499389648438,
        279.2855224609375
      ],
      "text": "∂N"
    },
    {
      "page_no": 21,
      "bbox": [
        240.79600524902344,
        261.1843566894531,
        249.82855224609375,
        277.1249694824219
      ],
      "text": "C"
    },
    {
      "page_no": 21,
      "bbox": [
        212.9550018310547,
        281.553955078125,
        245.10031127929688,
        298.25653076171875
      ],
      "text": "= −αN"
    },
    {
      "page_no": 21,
      "bbox": [
        234.8350067138672,
        295.1279296875,
        242.84494018554688,
        305.09051513671875
      ],
      "text": "N"
    },
    {
      "page_no": 21,
      "bbox": [
        249.2010040283203,
        281.40936279296875,
        269.2986145019531,
        292.3575744628906
      ],
      "text": "\u0012Nc"
    },
    {
      "page_no": 21,
      "bbox": [
        259.21600341796875,
        295.1279296875,
        267.2259216308594,
        305.09051513671875
      ],
      "text": "N"
    },
    {
      "page_no": 21,
      "bbox": [
        270.989013671875,
        278.6467590332031,
        315.04058837890625,
        298.25653076171875
      ],
      "text": "\u0013αN\n+ αS"
    },
    {
      "page_no": 21,
      "bbox": [
        305.2980041503906,
        295.1279296875,
        313.30792236328125,
        305.09051513671875
      ],
      "text": "N"
    },
    {
      "page_no": 21,
      "bbox": [
        318.7720031738281,
        281.40936279296875,
        388.1172790527344,
        305.2685546875
      ],
      "text": "\u0012\n6B∗Sc\nN\nL1/αBC"
    },
    {
      "page_no": 21,
      "bbox": [
        390.02301025390625,
        278.64678955078125,
        448.3879699707031,
        298.256591796875
      ],
      "text": "\u0013αS \u0012\n1 −5N"
    },
    {
      "page_no": 21,
      "bbox": [
        441.53399658203125,
        279.1784362792969,
        479.0075988769531,
        305.09051513671875
      ],
      "text": "L\u001a\u001a\u001a\n∂L\n∂N"
    },
    {
      "page_no": 21,
      "bbox": [
        467.9889831542969,
        286.9893493652344,
        477.02154541015625,
        302.9289245605469
      ],
      "text": "C"
    },
    {
      "page_no": 21,
      "bbox": [
        478.010986328125,
        281.40936279296875,
        485.3434753417969,
        291.3719482421875
      ],
      "text": "\u0013"
    },
    {
      "page_no": 21,
      "bbox": [
        129.4229736328125,
        309.98895263671875,
        164.88827514648438,
        326.6915283203125
      ],
      "text": "=⇒αN"
    },
    {
      "page_no": 21,
      "bbox": [
        153.0959930419922,
        323.56292724609375,
        164.36460876464844,
        334.3665466308594
      ],
      "text": "αS"
    },
    {
      "page_no": 21,
      "bbox": [
        168.98899841308594,
        309.8453369140625,
        189.0866241455078,
        320.7935485839844
      ],
      "text": "\u0012Nc"
    },
    {
      "page_no": 21,
      "bbox": [
        179.00399780273438,
        323.56292724609375,
        187.01393127441406,
        333.5255126953125
      ],
      "text": "N"
    },
    {
      "page_no": 21,
      "bbox": [
        190.77699279785156,
        307.08172607421875,
        292.8162841796875,
        333.7045593261719
      ],
      "text": "\u0013αN\n=\n\u0012\n6B∗Sc\nN\nL1/αBC"
    },
    {
      "page_no": 21,
      "bbox": [
        294.7220153808594,
        307.081787109375,
        522.0001220703125,
        326.922119140625
      ],
      "text": "\u0013αS\n(B.4)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.00003051757812,
        341.72650146484375,
        388.3001403808594,
        351.6891174316406
      ],
      "text": "Equation (B.3) and (B.4) together determine the compute-efﬁcient frontier."
    },
    {
      "page_no": 21,
      "bbox": [
        90.00003051757812,
        366.7425537109375,
        189.4566650390625,
        376.70513916015625
      ],
      "text": "B.2\nEfﬁcient Training"
    },
    {
      "page_no": 21,
      "bbox": [
        90.00003051757812,
        387.0684814453125,
        494.3619689941406,
        397.0310974121094
      ],
      "text": "Now we assemble the implications of (B.3) and (B.4). First, note that inserting (B.4) into (B.3) yields"
    },
    {
      "page_no": 21,
      "bbox": [
        215.94802856445312,
        405.1043701171875,
        332.2823181152344,
        422.7925720214844
      ],
      "text": "L (Neﬀ(C) , C) =\n\u0012\n1 + αN"
    },
    {
      "page_no": 21,
      "bbox": [
        320.4909973144531,
        418.8219299316406,
        331.75958251953125,
        429.62554931640625
      ],
      "text": "αS"
    },
    {
      "page_no": 21,
      "bbox": [
        334.7229919433594,
        405.1043395996094,
        522.0001220703125,
        422.79254150390625
      ],
      "text": "\u0013\nL (Neﬀ, ∞) ,\n(B.5)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.0,
        435.7177429199219,
        459.8858947753906,
        447.6650695800781
      ],
      "text": "which implies that for compute-efﬁcient training, we should train to a ﬁxed percentage αN"
    },
    {
      "page_no": 21,
      "bbox": [
        90.0,
        437.34283447265625,
        521.9998779296875,
        470.7620849609375
      ],
      "text": "αS ≈10% above\nthe converged loss. Next, let’s determine how the optimal loss depends on the compute budget. Eliminating\nN yields a power-law dependence of performance on compute:"
    },
    {
      "page_no": 21,
      "bbox": [
        267.489990234375,
        479.3753662109375,
        324.00958251953125,
        496.2215270996094
      ],
      "text": "L (C) =\n\u0012Cc"
    },
    {
      "page_no": 21,
      "bbox": [
        314.99798583984375,
        493.0929260253906,
        322.1212463378906,
        503.0555114746094
      ],
      "text": "C"
    },
    {
      "page_no": 21,
      "bbox": [
        325.6999816894531,
        476.6117248535156,
        522.0001220703125,
        496.4520568847656
      ],
      "text": "\u0013αC\n(B.6)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.0,
        511.2564697265625,
        160.26620483398438,
        521.2190551757812
      ],
      "text": "where we deﬁned"
    },
    {
      "page_no": 21,
      "bbox": [
        198.08499145507812,
        529.3567504882812,
        522.0001220703125,
        540.9425048828125
      ],
      "text": "αC = 1/ (1/αS + 1/αB + 1/αN) ≈0.052\n(B.7)"
    },
    {
      "page_no": 21,
      "bbox": [
        199.97998046875,
        553.9569091796875,
        263.2966003417969,
        565.4135131835938
      ],
      "text": "Cc = 6NcB∗Sc"
    },
    {
      "page_no": 21,
      "bbox": [
        265.4519958496094,
        547.0733032226562,
        303.8232727050781,
        563.9194946289062
      ],
      "text": "\u0012\n1 + αN"
    },
    {
      "page_no": 21,
      "bbox": [
        292.031005859375,
        560.7909545898438,
        303.2995910644531,
        571.5945434570312
      ],
      "text": "αS"
    },
    {
      "page_no": 21,
      "bbox": [
        306.26397705078125,
        539.909912109375,
        380.4425048828125,
        560.1019287109375
      ],
      "text": "\u00131/αS+1/αN \u0012 αS"
    },
    {
      "page_no": 21,
      "bbox": [
        368.2820129394531,
        560.7909545898438,
        380.9662780761719,
        571.5945434570312
      ],
      "text": "αN"
    },
    {
      "page_no": 21,
      "bbox": [
        383.4070129394531,
        544.3097534179688,
        522.0001220703125,
        564.1500244140625
      ],
      "text": "\u00131/αS\n.\n(B.8)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.0,
        579.44091796875,
        268.028564453125,
        589.634033203125
      ],
      "text": "Similarly, we can eliminate L to ﬁnd N (C):"
    },
    {
      "page_no": 21,
      "bbox": [
        223.53598022460938,
        600.9529418945312,
        249.87042236328125,
        610.91552734375
      ],
      "text": "N (C)"
    },
    {
      "page_no": 21,
      "bbox": [
        230.67100524902344,
        593.6449584960938,
        281.6742858886719,
        625.33056640625
      ],
      "text": "Nc\n=\n\u0012 C"
    },
    {
      "page_no": 21,
      "bbox": [
        272.87799072265625,
        614.5259399414062,
        283.56158447265625,
        625.33056640625
      ],
      "text": "Cc"
    },
    {
      "page_no": 21,
      "bbox": [
        285.2519836425781,
        598.0447387695312,
        359.7542724609375,
        617.654541015625
      ],
      "text": "\u0013αC/αN \u0012\n1 + αN"
    },
    {
      "page_no": 21,
      "bbox": [
        347.9630126953125,
        614.5259399414062,
        359.2315979003906,
        625.33056640625
      ],
      "text": "αS"
    },
    {
      "page_no": 21,
      "bbox": [
        362.19500732421875,
        598.0447387695312,
        522.0001220703125,
        617.8850708007812
      ],
      "text": "\u00131/αN\n(B.9)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.00003051757812,
        632.689453125,
        104.38602447509766,
        642.6520385742188
      ],
      "text": "and"
    },
    {
      "page_no": 21,
      "bbox": [
        205.7020263671875,
        651.5789184570312,
        272.7876892089844,
        675.95654296875
      ],
      "text": "S (C) =\nCc\n6NcB∗"
    },
    {
      "page_no": 21,
      "bbox": [
        276.1440124511719,
        651.435302734375,
        314.5152893066406,
        668.281494140625
      ],
      "text": "\u0012\n1 + αN"
    },
    {
      "page_no": 21,
      "bbox": [
        302.7239990234375,
        665.1529541015625,
        313.9925842285156,
        675.95654296875
      ],
      "text": "αS"
    },
    {
      "page_no": 21,
      "bbox": [
        316.95599365234375,
        644.2719116210938,
        369.63226318359375,
        664.4639892578125
      ],
      "text": "\u0013−1/αN \u0012 C"
    },
    {
      "page_no": 21,
      "bbox": [
        360.83599853515625,
        665.1529541015625,
        371.5205993652344,
        675.95654296875
      ],
      "text": "Cc"
    },
    {
      "page_no": 21,
      "bbox": [
        373.21099853515625,
        648.6717529296875,
        522.0004272460938,
        668.5120239257812
      ],
      "text": "\u0013αC/αS\n(B.10)"
    },
    {
      "page_no": 21,
      "bbox": [
        90.00003051757812,
        680.2286987304688,
        522.004638671875,
        722.1663818359375
      ],
      "text": "9There is a slight ambiguity here: we can imagine training either at a constant batch size B (Ltarget), or we could\ninstead train at a variable batch size ˜B (L), where ˜B is the instantaneous critical batch size (as opposed to B, which is\nthe averaged version). These two prescriptions result in the same number of steps, so we can ignore this subtlety (see\n[MKAT18])."
    },
    {
      "page_no": 21,
      "bbox": [
        301.01904296875,
        742.3324584960938,
        310.98162841796875,
        752.2950439453125
      ],
      "text": "21"
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        74.31652069091797,
        223.1103057861328,
        84.27912139892578
      ],
      "text": "B.3\nComparison to Inefﬁcient"
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        94.67646789550781,
        521.9982299804688,
        126.45706176757812
      ],
      "text": "Typically, researchers train models until they appear to be close to convergence. In this section, we compare\nthe efﬁcient training procedure described above to this more typical setup. We deﬁne a the convergence factor\nf as the percent deviation from the converged loss:"
    },
    {
      "page_no": 22,
      "bbox": [
        242.83401489257812,
        134.6697540283203,
        522.00048828125,
        144.99203491210938
      ],
      "text": "L (N, C) = (1 + f) L (N, ∞) .\n(B.11)"
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        153.2057647705078,
        522.0029296875,
        185.34603881835938
      ],
      "text": "For compute-efﬁcient training we have f = αN/αS ≈10% from the previous section, but researchers\ntypically use a much smaller value. Here, we choose f ′ = 2% as an estimate. For a ﬁxed value of the loss,\nwe predict:"
    },
    {
      "page_no": 22,
      "bbox": [
        244.01800537109375,
        189.0989227294922,
        306.3266906738281,
        220.7845458984375
      ],
      "text": "Nf\nNf ′ =\n\u0012 1 + f"
    },
    {
      "page_no": 22,
      "bbox": [
        282.8900146484375,
        209.34738159179688,
        308.2923889160156,
        219.9425048828125
      ],
      "text": "1 + f ′"
    },
    {
      "page_no": 22,
      "bbox": [
        309.9880065917969,
        193.49977111816406,
        522.00048828125,
        213.34005737304688
      ],
      "text": "\u00131/αN\n≈2.7\n(B.12)"
    },
    {
      "page_no": 22,
      "bbox": [
        245.91299438476562,
        230.2778778076172,
        271.5959167480469,
        254.65557861328125
      ],
      "text": "Sf\nSf ′ ="
    },
    {
      "page_no": 22,
      "bbox": [
        274.3609924316406,
        226.75477600097656,
        307.467041015625,
        238.30352783203125
      ],
      "text": "1 + 1"
    },
    {
      "page_no": 22,
      "bbox": [
        283.4429931640625,
        234.1127471923828,
        307.4670715332031,
        254.301513671875
      ],
      "text": "f\n1 + 1"
    },
    {
      "page_no": 22,
      "bbox": [
        301.7969970703125,
        249.6103973388672,
        308.65972900390625,
        257.08355712890625
      ],
      "text": "f ′"
    },
    {
      "page_no": 22,
      "bbox": [
        311.5489807128906,
        224.3817901611328,
        522.0003662109375,
        247.21109008789062
      ],
      "text": "!1/αS\n≈0.13\n(B.13)"
    },
    {
      "page_no": 22,
      "bbox": [
        244.90199279785156,
        260.263916015625,
        288.7923889160156,
        284.64154052734375
      ],
      "text": "Cf\nCf ′ = Nf"
    },
    {
      "page_no": 22,
      "bbox": [
        275.5559997558594,
        260.263916015625,
        522.0004272460938,
        284.64154052734375
      ],
      "text": "Nf ′\nSf\nSf ′ ≈0.35\n(B.14)"
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        292.29644775390625,
        521.9981689453125,
        313.1680603027344
      ],
      "text": "So that compute-efﬁcient training uses 7.7x fewer parameter updates, 2.7x more parameters, and 65% less\ncompute to reach the same loss."
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        328.3074951171875,
        216.48516845703125,
        338.27008056640625
      ],
      "text": "B.4\nSuboptimal Model Sizes"
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        348.6674499511719,
        521.998046875,
        369.5390625
      ],
      "text": "We can solve A.1 to ﬁnd an expression for the amount of compute needed to reach a given value of the loss\nL with a model of size N:"
    },
    {
      "page_no": 22,
      "bbox": [
        192.5469970703125,
        378.9373474121094,
        303.81060791015625,
        402.7965087890625
      ],
      "text": "C (N, L) =\n\u0012\n6B∗Sc\nN\nL1/αB"
    },
    {
      "page_no": 22,
      "bbox": [
        306.2349853515625,
        378.9373474121094,
        361.6175842285156,
        395.78350830078125
      ],
      "text": "\u0013 \u0012\nL −\n\u0012Nc"
    },
    {
      "page_no": 22,
      "bbox": [
        351.5350036621094,
        392.6549377441406,
        359.544921875,
        402.6175231933594
      ],
      "text": "N"
    },
    {
      "page_no": 22,
      "bbox": [
        363.3080139160156,
        375.54437255859375,
        522.0004272460938,
        396.0140686035156
      ],
      "text": "\u0013αN \u0013−1/αS\n.\n(B.15)"
    },
    {
      "page_no": 22,
      "bbox": [
        89.99996948242188,
        411.38092041015625,
        521.9981079101562,
        470.66455078125
      ],
      "text": "Using A.6 and A.9, we can eliminate L in favor of Neﬀ(L), the model size which reaches L most efﬁciently.\nFrom there, we ﬁnd an expression for the excess compute needed as a consequence of using a suboptimal\nmodel size:\nC (N, Neﬀ)\nC (Neﬀ, Neﬀ) =\nN\nNeﬀ"
    },
    {
      "page_no": 22,
      "bbox": [
        276.0169982910156,
        446.1433410644531,
        311.7895812988281,
        462.989501953125
      ],
      "text": "\u0014\n1 + αS"
    },
    {
      "page_no": 22,
      "bbox": [
        299.6289978027344,
        459.8609313964844,
        312.3132629394531,
        470.66455078125
      ],
      "text": "αN"
    },
    {
      "page_no": 22,
      "bbox": [
        316.4139709472656,
        446.1433410644531,
        365.7099304199219,
        462.989501953125
      ],
      "text": "\u0012\n1 −\n\u0012Neﬀ"
    },
    {
      "page_no": 22,
      "bbox": [
        353.5530090332031,
        459.8609313964844,
        361.56292724609375,
        469.8235168457031
      ],
      "text": "N"
    },
    {
      "page_no": 22,
      "bbox": [
        367.9580078125,
        442.7493591308594,
        522.0004272460938,
        463.2200622558594
      ],
      "text": "\u0013αN \u0013\u0015−1/αS\n.\n(B.16)"
    },
    {
      "page_no": 22,
      "bbox": [
        90.0,
        475.43743896484375,
        521.9981079101562,
        518.1270141601562
      ],
      "text": "The result is shown in Figure X. Models between 0.6x and 2.2x the optimal size can be used with only a\n20% increase in compute budget. Using a smaller model is useful when accounting for the cost inference. A\nlarger model can be trained the the same level of performance in fewer steps, allowing for more parallelism\nand faster training if sufﬁcient harware is available (see Figure Y):"
    },
    {
      "page_no": 22,
      "bbox": [
        195.0989990234375,
        529.5823364257812,
        300.5256042480469,
        554.1045532226562
      ],
      "text": "S (N, Neﬀ)\nS (Neﬀ, Neﬀ) =\n\u0014\n1 + αS"
    },
    {
      "page_no": 22,
      "bbox": [
        288.364013671875,
        543.3009643554688,
        301.04827880859375,
        554.1045532226562
      ],
      "text": "αN"
    },
    {
      "page_no": 22,
      "bbox": [
        305.1499938964844,
        529.5823364257812,
        354.4459533691406,
        546.4295654296875
      ],
      "text": "\u0012\n1 −\n\u0012Neﬀ"
    },
    {
      "page_no": 22,
      "bbox": [
        342.2879943847656,
        543.3009643554688,
        350.29791259765625,
        553.2635498046875
      ],
      "text": "N"
    },
    {
      "page_no": 22,
      "bbox": [
        356.6929931640625,
        526.1893920898438,
        522.00048828125,
        546.6600952148438
      ],
      "text": "\u0013αN \u0013\u0015−1/αS\n.\n(B.17)"
    },
    {
      "page_no": 22,
      "bbox": [
        90.00003051757812,
        561.5394897460938,
        521.998291015625,
        593.320068359375
      ],
      "text": "A 2.2x larger model requires 45% fewer steps at a cost of 20% more training compute. Note that this equation\nshould not be trusted for very large models, as it is only valid in the power-law region of the learning curve\nafter initial transient effects."
    },
    {
      "page_no": 22,
      "bbox": [
        90.00003051757812,
        610.8651733398438,
        150.6726531982422,
        622.8203735351562
      ],
      "text": "C\nCaveats"
    },
    {
      "page_no": 22,
      "bbox": [
        90.00003051757812,
        636.0394897460938,
        330.1186218261719,
        646.0020751953125
      ],
      "text": "In this section we list some potential caveats to our analysis."
    },
    {
      "page_no": 22,
      "bbox": [
        115.90303039550781,
        657.5398559570312,
        521.9996948242188,
        722.4070434570312
      ],
      "text": "• At present we do not have a solid theoretical understanding for any of our proposed scaling laws.\nThe scaling relations with model size and compute are especially mysterious. It may be possible to\nunderstand scaling at very large D holding model size ﬁxed [AS17], and also the shape of learning\ncurves late in training, by modeling the loss with a noisy quadratic. But the scaling with D at very\nlarge model size still remains mysterious. Without a theory or a systematic understanding of the\ncorrections to our scaling laws, it’s difﬁcult to determine in what circumstances they can be trusted."
    },
    {
      "page_no": 22,
      "bbox": [
        301.01904296875,
        742.33251953125,
        310.98162841796875,
        752.2951049804688
      ],
      "text": "22"
    },
    {
      "page_no": 23,
      "bbox": [
        122.31973266601562,
        187.0601043701172,
        259.99530029296875,
        196.01844787597656
      ],
      "text": "103\n104\n105"
    },
    {
      "page_no": 23,
      "bbox": [
        150.48263549804688,
        195.05548095703125,
        229.08209228515625,
        206.26629638671875
      ],
      "text": "Sc × [L(N, D)\nL(N,\n)]\n1/\nS"
    },
    {
      "page_no": 23,
      "bbox": [
        104.12008666992188,
        177.55624389648438,
        114.45561218261719,
        186.45846557617188
      ],
      "text": "103"
    },
    {
      "page_no": 23,
      "bbox": [
        104.12008666992188,
        150.4701690673828,
        114.45561218261719,
        159.3723907470703
      ],
      "text": "104"
    },
    {
      "page_no": 23,
      "bbox": [
        104.12008666992188,
        123.32798767089844,
        114.45561218261719,
        132.23020935058594
      ],
      "text": "105"
    },
    {
      "page_no": 23,
      "bbox": [
        93.6191177368164,
        139.62811279296875,
        102.9336166381836,
        152.477294921875
      ],
      "text": "Sstop"
    },
    {
      "page_no": 23,
      "bbox": [
        153.44869995117188,
        94.68329620361328,
        226.83407592773438,
        105.14844512939453
      ],
      "text": "Early Stopping Step"
    },
    {
      "page_no": 23,
      "bbox": [
        266.106689453125,
        118.90497589111328,
        295.0648193359375,
        127.62593841552734
      ],
      "text": "Data Size"
    },
    {
      "page_no": 23,
      "bbox": [
        280.3023376464844,
        127.43011474609375,
        292.8377990722656,
        171.2962646484375
      ],
      "text": "21M\n43M\n86M\n172M\n344M\n688M\n1.4B"
    },
    {
      "page_no": 23,
      "bbox": [
        354.0931396484375,
        184.73138427734375,
        462.9344177246094,
        195.28404235839844
      ],
      "text": "103\n104\n105"
    },
    {
      "page_no": 23,
      "bbox": [
        397.5262145996094,
        194.17074584960938,
        413.8770446777344,
        204.4438018798828
      ],
      "text": "Step"
    },
    {
      "page_no": 23,
      "bbox": [
        327.1052551269531,
        172.49710083007812,
        331.5895690917969,
        182.77015686035156
      ],
      "text": "2"
    },
    {
      "page_no": 23,
      "bbox": [
        327.1052551269531,
        147.66241455078125,
        331.5895690917969,
        157.9354705810547
      ],
      "text": "3"
    },
    {
      "page_no": 23,
      "bbox": [
        327.1052551269531,
        122.8277359008789,
        331.5895690917969,
        133.1007843017578
      ],
      "text": "4"
    },
    {
      "page_no": 23,
      "bbox": [
        327.1052551269531,
        97.9930648803711,
        331.5895690917969,
        108.26610565185547
      ],
      "text": "5"
    },
    {
      "page_no": 23,
      "bbox": [
        327.1052551269531,
        73.15838623046875,
        331.5895690917969,
        83.43142700195312
      ],
      "text": "6"
    },
    {
      "page_no": 23,
      "bbox": [
        315.8006591796875,
        123.1015396118164,
        326.0736999511719,
        139.26202392578125
      ],
      "text": "Loss"
    },
    {
      "page_no": 23,
      "bbox": [
        432.453857421875,
        82.18359375,
        469.928955078125,
        102.80465698242188
      ],
      "text": "Test Loss\nTrain Loss"
    },
    {
      "page_no": 23,
      "bbox": [
        493.9243469238281,
        155.19284057617188,
        506.09930419921875,
        165.6793975830078
      ],
      "text": "108"
    },
    {
      "page_no": 23,
      "bbox": [
        493.9243469238281,
        120.06604766845703,
        506.09930419921875,
        130.5526123046875
      ],
      "text": "109"
    },
    {
      "page_no": 23,
      "bbox": [
        493.9243469238281,
        84.93926239013672,
        509.2394714355469,
        95.42581176757812
      ],
      "text": "1010"
    },
    {
      "page_no": 23,
      "bbox": [
        509.08392333984375,
        92.16057586669922,
        519.3569946289062,
        170.19198608398438
      ],
      "text": "Dataset Size (Tokens)"
    },
    {
      "page_no": 23,
      "bbox": [
        89.99996948242188,
        214.051513671875,
        522.0031127929688,
        278.6500549316406
      ],
      "text": "Figure 16\nLeft: We characterize the step on which early stopping occurs, as a function of the extent of\noverﬁtting. The red line indicates a lower bound for early stopping that is derived in Section 5.3. Right:\nWe display train and test loss for a series of 300M parameter models trained on different sized dataset sub-\nsamples. The test loss typically follows that of a run done with unrestricted data until diverging. Note that the\ndegree of overﬁtting (as compared to the inﬁnite data limit) is signiﬁcantly overestimated by Ltest −Ltrain\n(denoted by a black bar for each run)."
    },
    {
      "page_no": 23,
      "bbox": [
        115.90292358398438,
        299.5257873535156,
        522.0045166015625,
        509.280029296875
      ],
      "text": "• We are not especially conﬁdent in the prediction of Bcrit(L) for values of the loss far outside the\nrange we have explored. Changes in Bcrit could have a signiﬁcant impact on trade-offs between\ndata parallelism and the number of serial training steps required, which would have a major impact\non training time.\n• We did not thoroughly investigate the small data regime, and our ﬁts for L(N, D) were poor for\nthe smallest values of D (where an epoch corresponded to only 40 steps). Furthermore, we did\nnot experiment with regularization and data augmentation. Improvements in these could alter our\nresults, quantitatively or qualitatively.\n• We used the estimated training compute C ≈6NBS, which did not include contributions propor-\ntional to nctx (see Section 2.1). So our scalings with compute may be confounded in practice in the\nregime of very large nctx, speciﬁcally where nctx ≳12dmodel.\n• We tuned learning rates, and we experimented with learning rate schedules. But we may have\nneglected to tune some hyperparameter (e.g. intialization scale or momentum) that have an important\neffect on scaling.\n• The optimal choice of learning rate is sensitive to the target loss. When training close to convergence,\nit may be necessary to use a smaller learning rate to avoid divergences. But when conducting a short\ntraining run (eg due to compute limitations), it may be possible to use a larger learning rate. We did\nnot experiment with higher learning rates for training runs that did not proceed to convergence."
    },
    {
      "page_no": 23,
      "bbox": [
        89.99992370605469,
        525.6481323242188,
        222.29617309570312,
        537.6033325195312
      ],
      "text": "D\nSupplemental Figures"
    },
    {
      "page_no": 23,
      "bbox": [
        89.99992370605469,
        549.8494873046875,
        254.7713165283203,
        559.8120727539062
      ],
      "text": "D.1\nEarly Stopping and Test vs Train"
    },
    {
      "page_no": 23,
      "bbox": [
        89.99992370605469,
        569.9154052734375,
        521.998046875,
        601.6959838867188
      ],
      "text": "In section 5.3 we described the result shown in Figure 16, which provides a prediction for a lower bound on\nthe early stopping step. We also show the train and test loss for a given model size when training on different\nsized datasets."
    },
    {
      "page_no": 23,
      "bbox": [
        89.99992370605469,
        615.659423828125,
        215.8973388671875,
        625.6220092773438
      ],
      "text": "D.2\nUniversal Transformers"
    },
    {
      "page_no": 23,
      "bbox": [
        89.99990844726562,
        634.2156982421875,
        522.0039672851562,
        667.5059814453125
      ],
      "text": "We compare the performance of standard Transformers to recurrent Transformers [DGV+18] in Figure 17.\nThese models re-use parameters, and so perform slightly better as a function of N, but slightly worse as a\nfunction of compute C. We include several different different possibilities for parameter re-use."
    },
    {
      "page_no": 23,
      "bbox": [
        89.9999008178711,
        681.469482421875,
        158.98095703125,
        691.4320678710938
      ],
      "text": "D.3\nBatch Size"
    },
    {
      "page_no": 23,
      "bbox": [
        89.9999008178711,
        701.535400390625,
        521.9981079101562,
        723.0175170898438
      ],
      "text": "We measure the critical batch size using the data displayed in ﬁgure 18. This made it possible to estimate\nBcrit(L) in ﬁgure 10."
    },
    {
      "page_no": 23,
      "bbox": [
        301.0188903808594,
        742.3323974609375,
        310.9814758300781,
        752.2949829101562
      ],
      "text": "23"
    },
    {
      "page_no": 24,
      "bbox": [
        120.49006652832031,
        183.6464080810547,
        294.0143127441406,
        194.10728454589844
      ],
      "text": "105\n106\n107\n108\n109"
    },
    {
      "page_no": 24,
      "bbox": [
        125.8192138671875,
        193.00369262695312,
        289.0589599609375,
        203.18739318847656
      ],
      "text": "Parameters, including reuse (non-embedding)"
    },
    {
      "page_no": 24,
      "bbox": [
        104.84587097167969,
        165.51138305664062,
        115.95917510986328,
        175.69508361816406
      ],
      "text": "2.5"
    },
    {
      "page_no": 24,
      "bbox": [
        104.84587097167969,
        140.01541137695312,
        115.95917510986328,
        150.19911193847656
      ],
      "text": "3.0"
    },
    {
      "page_no": 24,
      "bbox": [
        104.84587097167969,
        118.45887756347656,
        115.95917510986328,
        128.642578125
      ],
      "text": "3.5"
    },
    {
      "page_no": 24,
      "bbox": [
        104.84587097167969,
        99.78575897216797,
        115.95917510986328,
        109.9694595336914
      ],
      "text": "4.0"
    },
    {
      "page_no": 24,
      "bbox": [
        104.84587097167969,
        83.31489562988281,
        115.95917510986328,
        93.49859619140625
      ],
      "text": "4.5"
    },
    {
      "page_no": 24,
      "bbox": [
        93.63957977294922,
        112.5649642944336,
        103.82328033447266,
        146.00274658203125
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 24,
      "bbox": [
        144.5190887451172,
        136.6945343017578,
        223.75205993652344,
        177.65231323242188
      ],
      "text": "2x Reuse\n4x Reuse\n8x Reuse\nNon-recurrent Models"
    },
    {
      "page_no": 24,
      "bbox": [
        342.6410827636719,
        183.6464080810547,
        516.1653442382812,
        194.10728454589844
      ],
      "text": "105\n106\n107\n108\n109"
    },
    {
      "page_no": 24,
      "bbox": [
        377.698974609375,
        193.00369262695312,
        481.4930419921875,
        203.18739318847656
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 24,
      "bbox": [
        326.99688720703125,
        165.51138305664062,
        338.11016845703125,
        175.69508361816406
      ],
      "text": "2.5"
    },
    {
      "page_no": 24,
      "bbox": [
        326.99688720703125,
        140.01541137695312,
        338.11016845703125,
        150.19911193847656
      ],
      "text": "3.0"
    },
    {
      "page_no": 24,
      "bbox": [
        326.99688720703125,
        118.45887756347656,
        338.11016845703125,
        128.642578125
      ],
      "text": "3.5"
    },
    {
      "page_no": 24,
      "bbox": [
        326.99688720703125,
        99.78575897216797,
        338.11016845703125,
        109.9694595336914
      ],
      "text": "4.0"
    },
    {
      "page_no": 24,
      "bbox": [
        326.99688720703125,
        83.31489562988281,
        338.11016845703125,
        93.49859619140625
      ],
      "text": "4.5"
    },
    {
      "page_no": 24,
      "bbox": [
        315.79058837890625,
        112.5649642944336,
        325.9742736816406,
        146.00274658203125
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 24,
      "bbox": [
        432.8787536621094,
        79.43961334228516,
        512.1116943359375,
        120.39739227294922
      ],
      "text": "2x Reuse\n4x Reuse\n8x Reuse\nNon-recurrent Models"
    },
    {
      "page_no": 24,
      "bbox": [
        90.0,
        211.74977111816406,
        521.9982299804688,
        245.04006958007812
      ],
      "text": "Figure 17\nWe compare recurrent Transformers [DGV+18], which re-use parameters, to standard Trans-\nformers. Recurrent Transformers perform slightly better when comparing models with equal parameter count,\nbut slightly worse when accounting for reuse and comparing per FLOP."
    },
    {
      "page_no": 24,
      "bbox": [
        141.2659149169922,
        381.2104797363281,
        246.99990844726562,
        391.7427978515625
      ],
      "text": "102\n103\n104\n105"
    },
    {
      "page_no": 24,
      "bbox": [
        190.71292114257812,
        390.63165283203125,
        207.0322723388672,
        400.8849182128906
      ],
      "text": "Step"
    },
    {
      "page_no": 24,
      "bbox": [
        114.09722137451172,
        360.2099914550781,
        126.24872589111328,
        370.67633056640625
      ],
      "text": "106"
    },
    {
      "page_no": 24,
      "bbox": [
        114.09722137451172,
        344.2586364746094,
        126.24872589111328,
        354.7249755859375
      ],
      "text": "107"
    },
    {
      "page_no": 24,
      "bbox": [
        114.09722137451172,
        328.439208984375,
        126.24872589111328,
        338.9055480957031
      ],
      "text": "108"
    },
    {
      "page_no": 24,
      "bbox": [
        114.09722137451172,
        312.5538330078125,
        126.24872589111328,
        323.0201721191406
      ],
      "text": "109"
    },
    {
      "page_no": 24,
      "bbox": [
        111.08126068115234,
        296.66845703125,
        126.36688232421875,
        307.1347961425781
      ],
      "text": "1010"
    },
    {
      "page_no": 24,
      "bbox": [
        111.08126068115234,
        280.7830505371094,
        126.36688232421875,
        291.2493896484375
      ],
      "text": "1011"
    },
    {
      "page_no": 24,
      "bbox": [
        99.79843139648438,
        299.1181640625,
        110.05168914794922,
        363.1922607421875
      ],
      "text": "Tokens Processed"
    },
    {
      "page_no": 24,
      "bbox": [
        135.98974609375,
        269.3857421875,
        262.136474609375,
        281.68963623046875
      ],
      "text": "Batch Size Scan - 3M Params"
    },
    {
      "page_no": 24,
      "bbox": [
        284.6068420410156,
        354.600830078125,
        289.08251953125,
        364.8540954589844
      ],
      "text": "4"
    },
    {
      "page_no": 24,
      "bbox": [
        284.6068420410156,
        328.6133117675781,
        289.08251953125,
        338.8665771484375
      ],
      "text": "6"
    },
    {
      "page_no": 24,
      "bbox": [
        284.6068420410156,
        302.62579345703125,
        289.08251953125,
        312.8790588378906
      ],
      "text": "8"
    },
    {
      "page_no": 24,
      "bbox": [
        284.6068420410156,
        276.6382751464844,
        293.5581970214844,
        286.89154052734375
      ],
      "text": "10"
    },
    {
      "page_no": 24,
      "bbox": [
        293.1083984375,
        314.32061767578125,
        303.3616638183594,
        347.9867858886719
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 24,
      "bbox": [
        336.86614990234375,
        381.2104797363281,
        458.77679443359375,
        391.7427978515625
      ],
      "text": "101\n102\n103\n104\n105"
    },
    {
      "page_no": 24,
      "bbox": [
        400.5619201660156,
        390.63165283203125,
        416.88128662109375,
        400.8849182128906
      ],
      "text": "Step"
    },
    {
      "page_no": 24,
      "bbox": [
        323.94622802734375,
        354.16546630859375,
        336.09771728515625,
        364.6318054199219
      ],
      "text": "106"
    },
    {
      "page_no": 24,
      "bbox": [
        323.94622802734375,
        324.4462890625,
        336.09771728515625,
        334.9126281738281
      ],
      "text": "108"
    },
    {
      "page_no": 24,
      "bbox": [
        320.9302673339844,
        294.72711181640625,
        336.21588134765625,
        305.1934509277344
      ],
      "text": "1010"
    },
    {
      "page_no": 24,
      "bbox": [
        309.6474304199219,
        299.1181640625,
        319.90069580078125,
        363.1922607421875
      ],
      "text": "Tokens Processed"
    },
    {
      "page_no": 24,
      "bbox": [
        343.1604919433594,
        269.3857421875,
        474.6780700683594,
        281.68963623046875
      ],
      "text": "Batch Size Scan - 85M Params"
    },
    {
      "page_no": 24,
      "bbox": [
        494.4558410644531,
        354.600830078125,
        498.9315185546875,
        364.8540954589844
      ],
      "text": "4"
    },
    {
      "page_no": 24,
      "bbox": [
        494.4558410644531,
        328.6133117675781,
        498.9315185546875,
        338.8665771484375
      ],
      "text": "6"
    },
    {
      "page_no": 24,
      "bbox": [
        494.4558410644531,
        302.62579345703125,
        498.9315185546875,
        312.8790588378906
      ],
      "text": "8"
    },
    {
      "page_no": 24,
      "bbox": [
        494.4558410644531,
        276.6382751464844,
        503.4071960449219,
        286.89154052734375
      ],
      "text": "10"
    },
    {
      "page_no": 24,
      "bbox": [
        502.9573974609375,
        314.32061767578125,
        513.2106323242188,
        347.9867858886719
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 24,
      "bbox": [
        89.99996948242188,
        410.346923828125,
        521.9989624023438,
        432.060546875
      ],
      "text": "Figure 18\nThese ﬁgures demonstrate ﬁts to Equation (5.1) for a large number of values of the loss L, and\nfor two different Transformer model sizes. These ﬁts were used to measure Bcrit(L) for Figure 10."
    },
    {
      "page_no": 24,
      "bbox": [
        89.99996948242188,
        465.342529296875,
        251.13507080078125,
        475.30511474609375
      ],
      "text": "D.4\nSample Efﬁciency vs Model Size"
    },
    {
      "page_no": 24,
      "bbox": [
        89.99996948242188,
        490.261474609375,
        521.9982299804688,
        522.0420532226562
      ],
      "text": "It is easy to see from ﬁgure 2 that larger models train faster, and are therefore more sample efﬁcient. We\nprovide another way of looking at this phenomenon in ﬁgure 19, which shows when different models reach\nvarious ﬁxed values of the loss."
    },
    {
      "page_no": 24,
      "bbox": [
        114.1540756225586,
        649.601806640625,
        227.12660217285156,
        658.8999633789062
      ],
      "text": "106\n107\n108"
    },
    {
      "page_no": 24,
      "bbox": [
        147.7669677734375,
        657.9190673828125,
        240.02464294433594,
        666.9708862304688
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 24,
      "bbox": [
        105.5007553100586,
        630.676513671875,
        116.22838592529297,
        639.9163818359375
      ],
      "text": "103"
    },
    {
      "page_no": 24,
      "bbox": [
        105.5007553100586,
        596.5693969726562,
        116.22838592529297,
        605.8092651367188
      ],
      "text": "104"
    },
    {
      "page_no": 24,
      "bbox": [
        105.5007553100586,
        562.4039306640625,
        116.22838592529297,
        571.6438598632812
      ],
      "text": "105"
    },
    {
      "page_no": 24,
      "bbox": [
        95.33892059326172,
        568.2885131835938,
        105.26773834228516,
        637.11328125
      ],
      "text": "Minimum Steps (Smin)"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        636.0097045898438,
        295.0242919921875,
        645.0615234375
      ],
      "text": "2.5"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        621.9190063476562,
        295.0242919921875,
        630.9708251953125
      ],
      "text": "3.0"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        607.828369140625,
        295.0242919921875,
        616.8801879882812
      ],
      "text": "3.5"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        593.7376708984375,
        295.0242919921875,
        602.7894897460938
      ],
      "text": "4.0"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        579.64697265625,
        295.0242919921875,
        588.6987915039062
      ],
      "text": "4.5"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        565.5563354492188,
        295.0242919921875,
        574.608154296875
      ],
      "text": "5.0"
    },
    {
      "page_no": 24,
      "bbox": [
        285.1462097167969,
        551.4656372070312,
        295.0242919921875,
        560.5174560546875
      ],
      "text": "5.5"
    },
    {
      "page_no": 24,
      "bbox": [
        294.627685546875,
        595.3850708007812,
        303.67950439453125,
        609.6243896484375
      ],
      "text": "Loss"
    },
    {
      "page_no": 24,
      "bbox": [
        330.9475402832031,
        649.6388549804688,
        442.2400817871094,
        658.9196166992188
      ],
      "text": "106\n107\n108"
    },
    {
      "page_no": 24,
      "bbox": [
        363.431640625,
        657.9405517578125,
        455.51678466796875,
        666.9754028320312
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 24,
      "bbox": [
        322.3104248046875,
        628.9705200195312,
        333.0179748535156,
        638.193115234375
      ],
      "text": "108"
    },
    {
      "page_no": 24,
      "bbox": [
        322.3104248046875,
        604.7154541015625,
        333.0179748535156,
        613.9380493164062
      ],
      "text": "109"
    },
    {
      "page_no": 24,
      "bbox": [
        319.65283203125,
        580.46044921875,
        333.1220703125,
        589.6830444335938
      ],
      "text": "1010"
    },
    {
      "page_no": 24,
      "bbox": [
        319.65283203125,
        556.2053833007812,
        333.1220703125,
        565.427978515625
      ],
      "text": "1011"
    },
    {
      "page_no": 24,
      "bbox": [
        309.5100402832031,
        562.0741577148438,
        319.4202880859375,
        643.5961303710938
      ],
      "text": "Minimum Examples (Emin)"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        636.0722045898438,
        509.21441650390625,
        645.1070556640625
      ],
      "text": "2.5"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        622.0078735351562,
        509.21441650390625,
        631.042724609375
      ],
      "text": "3.0"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        607.9435424804688,
        509.21441650390625,
        616.9783935546875
      ],
      "text": "3.5"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        593.8792114257812,
        509.21441650390625,
        602.9140625
      ],
      "text": "4.0"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        579.8148803710938,
        509.21441650390625,
        588.8497314453125
      ],
      "text": "4.5"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        565.7505493164062,
        509.21441650390625,
        574.785400390625
      ],
      "text": "5.0"
    },
    {
      "page_no": 24,
      "bbox": [
        499.35479736328125,
        551.6862182617188,
        509.21441650390625,
        560.7210693359375
      ],
      "text": "5.5"
    },
    {
      "page_no": 24,
      "bbox": [
        508.81854248046875,
        595.5234375,
        517.8533935546875,
        609.7362060546875
      ],
      "text": "Loss"
    },
    {
      "page_no": 24,
      "bbox": [
        90.0,
        676.353515625,
        522.0028686523438,
        719.134033203125
      ],
      "text": "Figure 19\nThe number of minimum serial steps needed to reach any ﬁxed value of the test loss decreases\nprecipitously with model size. Sample efﬁciency (show here for training far below the critical batch size)\nimproves greatly as well, improving by a factor of almost 100 when comparing the smallest possible model\nto a very large one."
    },
    {
      "page_no": 24,
      "bbox": [
        301.01898193359375,
        742.3324584960938,
        310.9815673828125,
        752.2950439453125
      ],
      "text": "24"
    },
    {
      "page_no": 25,
      "bbox": [
        114.16484069824219,
        187.16526794433594,
        267.7503662109375,
        196.54681396484375
      ],
      "text": "100\n101\n102\n103"
    },
    {
      "page_no": 25,
      "bbox": [
        171.63430786132812,
        195.55084228515625,
        211.1466064453125,
        204.7413787841797
      ],
      "text": "Token Index"
    },
    {
      "page_no": 25,
      "bbox": [
        105.47095489501953,
        166.88404846191406,
        109.48274230957031,
        176.0745849609375
      ],
      "text": "3"
    },
    {
      "page_no": 25,
      "bbox": [
        105.47095489501953,
        150.9610595703125,
        109.48274230957031,
        160.15159606933594
      ],
      "text": "4"
    },
    {
      "page_no": 25,
      "bbox": [
        105.47095489501953,
        135.0380859375,
        109.48274230957031,
        144.22862243652344
      ],
      "text": "5"
    },
    {
      "page_no": 25,
      "bbox": [
        105.47095489501953,
        119.1151123046875,
        109.48274230957031,
        128.30563354492188
      ],
      "text": "6"
    },
    {
      "page_no": 25,
      "bbox": [
        105.47095489501953,
        103.19212341308594,
        109.48274230957031,
        112.38264465332031
      ],
      "text": "7"
    },
    {
      "page_no": 25,
      "bbox": [
        105.47095489501953,
        87.2691421508789,
        109.48274230957031,
        96.45966339111328
      ],
      "text": "8"
    },
    {
      "page_no": 25,
      "bbox": [
        95.3575668334961,
        106.32608032226562,
        104.54808807373047,
        171.2589874267578
      ],
      "text": "Per-Token Test Loss"
    },
    {
      "page_no": 25,
      "bbox": [
        230.03956604003906,
        93.11504364013672,
        265.822021484375,
        100.8147201538086
      ],
      "text": "4.0 + 3.2 T\n0.47"
    },
    {
      "page_no": 25,
      "bbox": [
        230.03956604003906,
        100.32400512695312,
        265.822021484375,
        108.023681640625
      ],
      "text": "3.4 + 4.0 T\n0.56"
    },
    {
      "page_no": 25,
      "bbox": [
        230.03956604003906,
        107.53296661376953,
        265.822021484375,
        115.2326431274414
      ],
      "text": "2.9 + 4.5 T\n0.56"
    },
    {
      "page_no": 25,
      "bbox": [
        230.03956604003906,
        114.74192810058594,
        265.822021484375,
        122.44160461425781
      ],
      "text": "2.7 + 4.9 T\n0.60"
    },
    {
      "page_no": 25,
      "bbox": [
        230.03956604003906,
        121.95088195800781,
        265.822021484375,
        129.6505584716797
      ],
      "text": "2.4 + 5.1 T\n0.61"
    },
    {
      "page_no": 25,
      "bbox": [
        230.03956604003906,
        129.1598663330078,
        265.822021484375,
        136.85952758789062
      ],
      "text": "2.3 + 5.4 T\n0.62"
    },
    {
      "page_no": 25,
      "bbox": [
        287.9072265625,
        169.63221740722656,
        298.79925537109375,
        179.01376342773438
      ],
      "text": "106"
    },
    {
      "page_no": 25,
      "bbox": [
        287.9072265625,
        140.2666015625,
        298.79925537109375,
        149.6481475830078
      ],
      "text": "107"
    },
    {
      "page_no": 25,
      "bbox": [
        287.9072265625,
        111.01927947998047,
        298.79925537109375,
        120.40081024169922
      ],
      "text": "108"
    },
    {
      "page_no": 25,
      "bbox": [
        298.7659912109375,
        109.26374053955078,
        307.9565124511719,
        168.33035278320312
      ],
      "text": "Model Parameters"
    },
    {
      "page_no": 25,
      "bbox": [
        361.4450378417969,
        184.7557373046875,
        468.03271484375,
        195.30587768554688
      ],
      "text": "101\n103\n105"
    },
    {
      "page_no": 25,
      "bbox": [
        399.65435791015625,
        194.19288635253906,
        416.0013122558594,
        204.46347045898438
      ],
      "text": "Step"
    },
    {
      "page_no": 25,
      "bbox": [
        329.7566833496094,
        177.81130981445312,
        334.23992919921875,
        188.08189392089844
      ],
      "text": "2"
    },
    {
      "page_no": 25,
      "bbox": [
        329.7566833496094,
        156.77743530273438,
        334.23992919921875,
        167.0480194091797
      ],
      "text": "4"
    },
    {
      "page_no": 25,
      "bbox": [
        329.7566833496094,
        135.74356079101562,
        334.23992919921875,
        146.01414489746094
      ],
      "text": "6"
    },
    {
      "page_no": 25,
      "bbox": [
        329.7566833496094,
        114.70967864990234,
        334.23992919921875,
        124.98027801513672
      ],
      "text": "8"
    },
    {
      "page_no": 25,
      "bbox": [
        325.2723083496094,
        93.6758041381836,
        334.2388000488281,
        103.94640350341797
      ],
      "text": "10"
    },
    {
      "page_no": 25,
      "bbox": [
        313.97039794921875,
        117.75277709960938,
        324.2409973144531,
        151.4758758544922
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 25,
      "bbox": [
        341.6680908203125,
        72.74191284179688,
        474.380859375,
        85.06663513183594
      ],
      "text": "Per-token Loss (774M Params)"
    },
    {
      "page_no": 25,
      "bbox": [
        495.11981201171875,
        178.5043487548828,
        507.2918701171875,
        188.9884033203125
      ],
      "text": "100"
    },
    {
      "page_no": 25,
      "bbox": [
        495.11981201171875,
        145.64398193359375,
        507.2918701171875,
        156.12803649902344
      ],
      "text": "101"
    },
    {
      "page_no": 25,
      "bbox": [
        495.11981201171875,
        112.78360748291016,
        507.2918701171875,
        123.26766204833984
      ],
      "text": "102"
    },
    {
      "page_no": 25,
      "bbox": [
        495.11981201171875,
        79.9232406616211,
        507.2918701171875,
        90.40729522705078
      ],
      "text": "103"
    },
    {
      "page_no": 25,
      "bbox": [
        507.2546691894531,
        112.53217315673828,
        517.5252685546875,
        156.68798828125
      ],
      "text": "Token Index"
    },
    {
      "page_no": 25,
      "bbox": [
        90.0,
        214.06951904296875,
        522.0039672851562,
        245.94107055664062
      ],
      "text": "Figure 20\nThis ﬁgure provides information about the performance per token as a function of model size\nand training time. Left: Loss per token as a function of its position T in the 1024-token context. Loss scales\npredictably as a power-law in T. Right: Test loss per token as a function of training step."
    },
    {
      "page_no": 25,
      "bbox": [
        221.63763427734375,
        366.50225830078125,
        361.31219482421875,
        376.5440673828125
      ],
      "text": "104\n105\n106\n107\n108\n109"
    },
    {
      "page_no": 25,
      "bbox": [
        235.72329711914062,
        375.48468017578125,
        338.33837890625,
        385.2604064941406
      ],
      "text": "Parameters (excl. embedding)"
    },
    {
      "page_no": 25,
      "bbox": [
        202.46693420410156,
        338.5919189453125,
        213.13504028320312,
        348.3676452636719
      ],
      "text": "3.0"
    },
    {
      "page_no": 25,
      "bbox": [
        202.46693420410156,
        308.0421142578125,
        213.13504028320312,
        317.8178405761719
      ],
      "text": "4.5"
    },
    {
      "page_no": 25,
      "bbox": [
        202.46693420410156,
        286.3666687011719,
        213.13504028320312,
        296.14239501953125
      ],
      "text": "6.0"
    },
    {
      "page_no": 25,
      "bbox": [
        202.46693420410156,
        269.5538635253906,
        213.13504028320312,
        279.32958984375
      ],
      "text": "7.5"
    },
    {
      "page_no": 25,
      "bbox": [
        191.70957946777344,
        298.268310546875,
        201.48532104492188,
        330.3665771484375
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 25,
      "bbox": [
        376.0875244140625,
        271.64422607421875,
        418.520263671875,
        355.9733581542969
      ],
      "text": "Token 1/1024\nToken 2/1024\nToken 4/1024\nToken 8/1024\nToken 16/1024\nToken 64/1024\nToken 256/1024\nToken 1024/1024\nToken 1/8\nToken 2/8\nToken 4/8\nToken 8/8"
    },
    {
      "page_no": 25,
      "bbox": [
        90.0,
        394.8365173339844,
        522.00048828125,
        426.70806884765625
      ],
      "text": "Figure 21\nIn addition to the averaged loss, individual tokens within the 1024-token context also improve\nsmoothly as model size increases. Training runs with shorter context nctx = 8 (dashed lines) perform better\non early tokens, since they can allocate all of their capacity to them."
    },
    {
      "page_no": 25,
      "bbox": [
        90.00003051757812,
        450.38250732421875,
        202.13906860351562,
        460.3450927734375
      ],
      "text": "D.5\nContext Dependence"
    },
    {
      "page_no": 25,
      "bbox": [
        90.00001525878906,
        470.7044372558594,
        521.9989013671875,
        502.48504638671875
      ],
      "text": "The trends for loss as a function of model size are displayed for different tokens in the context in Figure 21.\nWe see that models trained on nctx = 1024 show steady improvement with model size on all but the ﬁrst\ntoken."
    },
    {
      "page_no": 25,
      "bbox": [
        90.0,
        508.67987060546875,
        521.9995727539062,
        595.2369995117188
      ],
      "text": "Fixing model size, it appears that the loss scales as a power-law as a function of position T in the context, see\nFigure 20. This may be a consequence of underlying power-law correlations in language [EP94, ACDE12,\nLT16], or a more general feature of the model architecture and optimization. It provides some suggestion for\nthe potential beneﬁts (or lack thereof) from training on larger contexts. Not only do larger models converge\nto better performance at T = 1024, but they also improve more quickly at early tokens, suggesting that larger\nmodels are more efﬁcient at detecting patterns with less contextual information. In the right-hand plot we\nshow how per-token performance varies for a ﬁxed model as a function of the training step. The model begins\nby learning short-range information, and only learns longer-range correlations later in training."
    },
    {
      "page_no": 25,
      "bbox": [
        90.0,
        601.431884765625,
        521.999267578125,
        644.3529663085938
      ],
      "text": "We have also included models trained with a tiny context nctx = 8 in order to compare with our longer\ncontext models. Even modestly sized models trained on nctx = 8 can dominate our largest nctx = 1024\nmodels on very early tokens. This also suggests that further improvements should be possible with much\nlarger models trained on large contexts."
    },
    {
      "page_no": 25,
      "bbox": [
        90.00003051757812,
        659.3954467773438,
        304.78369140625,
        669.3580322265625
      ],
      "text": "D.6\nLearning Rate Schedules and Error Analysis"
    },
    {
      "page_no": 25,
      "bbox": [
        90.00003051757812,
        679.7174072265625,
        521.9983520507812,
        722.406982421875
      ],
      "text": "We experimented with a variety of learning rates and schedules. A host of schedules and resulting test\nperformances for a small language model are plotted in Figure 22. We conclude that the choice of learning\nrate schedule is mostly irrelevant, as long as the total summed learning rate is sufﬁciently large, and the\nschedule includes a warmup period and a ﬁnal decay to near-vanishing learning rate. Variations among"
    },
    {
      "page_no": 25,
      "bbox": [
        301.01904296875,
        742.3323974609375,
        310.98162841796875,
        752.2949829101562
      ],
      "text": "25"
    },
    {
      "page_no": 26,
      "bbox": [
        138.3563690185547,
        164.92642211914062,
        303.0555725097656,
        180.3866729736328
      ],
      "text": "0\n50000\n100000\n150000\n200000\n250000\nStep"
    },
    {
      "page_no": 26,
      "bbox": [
        117.35987091064453,
        155.85519409179688,
        137.3130340576172,
        164.16615295410156
      ],
      "text": "0.0000"
    },
    {
      "page_no": 26,
      "bbox": [
        117.35987091064453,
        139.6494598388672,
        137.3130340576172,
        147.96041870117188
      ],
      "text": "0.0002"
    },
    {
      "page_no": 26,
      "bbox": [
        117.35987091064453,
        123.44371032714844,
        137.3130340576172,
        131.75466918945312
      ],
      "text": "0.0004"
    },
    {
      "page_no": 26,
      "bbox": [
        117.35987091064453,
        107.23796844482422,
        137.3130340576172,
        115.54893493652344
      ],
      "text": "0.0006"
    },
    {
      "page_no": 26,
      "bbox": [
        117.35987091064453,
        91.03223419189453,
        137.3130340576172,
        99.34320068359375
      ],
      "text": "0.0008"
    },
    {
      "page_no": 26,
      "bbox": [
        117.35987091064453,
        74.82649230957031,
        137.3130340576172,
        83.13745880126953
      ],
      "text": "0.0010"
    },
    {
      "page_no": 26,
      "bbox": [
        108.13160705566406,
        98.85807800292969,
        116.44257354736328,
        140.15049743652344
      ],
      "text": "Learning Rate"
    },
    {
      "page_no": 26,
      "bbox": [
        353.7236633300781,
        164.9138946533203,
        502.52349853515625,
        180.38516235351562
      ],
      "text": "50\n100\n150\n200\n250\nLR Summed Over Steps"
    },
    {
      "page_no": 26,
      "bbox": [
        318.5810546875,
        159.89053344726562,
        331.28753662109375,
        168.20741271972656
      ],
      "text": "3.65"
    },
    {
      "page_no": 26,
      "bbox": [
        318.5810546875,
        142.50003051757812,
        331.28753662109375,
        150.81690979003906
      ],
      "text": "3.70"
    },
    {
      "page_no": 26,
      "bbox": [
        318.5810546875,
        125.10952758789062,
        331.28753662109375,
        133.42640686035156
      ],
      "text": "3.75"
    },
    {
      "page_no": 26,
      "bbox": [
        318.5810546875,
        107.71902465820312,
        331.28753662109375,
        116.03590393066406
      ],
      "text": "3.80"
    },
    {
      "page_no": 26,
      "bbox": [
        318.5810546875,
        90.32852172851562,
        331.28753662109375,
        98.64540100097656
      ],
      "text": "3.85"
    },
    {
      "page_no": 26,
      "bbox": [
        318.5810546875,
        72.93801879882812,
        331.28753662109375,
        81.25489807128906
      ],
      "text": "3.90"
    },
    {
      "page_no": 26,
      "bbox": [
        309.4290466308594,
        114.04389190673828,
        317.74591064453125,
        127.12712860107422
      ],
      "text": "Loss"
    },
    {
      "page_no": 26,
      "bbox": [
        90.0,
        189.488525390625,
        522.0003051757812,
        254.08706665039062
      ],
      "text": "Figure 22\nWe test a variety of learning rate schedules including cosine decay, linear decay, as well as other\nfaster/slower decays schedules on a 3 million parameter model, shown on the left. For these experiments we\ndo not decay to zero, since we ﬁnd that this tends to give a ﬁxed improvement close to the end of training.\nWe ﬁnd that, as long as the learning rate is not too small and does not decay too quickly, performance does\nnot depend strongly on learning rate. Run-to-run variation is at the level of 0.05 in the loss, so averaging\nmultiple runs is necessary to validate performance changes smaller than this level."
    },
    {
      "page_no": 26,
      "bbox": [
        247.85491943359375,
        378.63604736328125,
        381.8458557128906,
        389.17889404296875
      ],
      "text": "104\n105\n106\n107\n108\n109"
    },
    {
      "page_no": 26,
      "bbox": [
        263.39642333984375,
        388.066650390625,
        368.0033874511719,
        398.330078125
      ],
      "text": "Parameters (non-embedding)"
    },
    {
      "page_no": 26,
      "bbox": [
        233.40084838867188,
        372.8106689453125,
        237.8809814453125,
        383.0740966796875
      ],
      "text": "2"
    },
    {
      "page_no": 26,
      "bbox": [
        233.40084838867188,
        347.04534912109375,
        237.8809814453125,
        357.30877685546875
      ],
      "text": "3"
    },
    {
      "page_no": 26,
      "bbox": [
        233.40084838867188,
        321.2800598144531,
        237.8809814453125,
        331.54351806640625
      ],
      "text": "4"
    },
    {
      "page_no": 26,
      "bbox": [
        233.40084838867188,
        295.5147399902344,
        237.8809814453125,
        305.7781982421875
      ],
      "text": "5"
    },
    {
      "page_no": 26,
      "bbox": [
        233.40084838867188,
        269.74945068359375,
        237.8809814453125,
        280.01287841796875
      ],
      "text": "6"
    },
    {
      "page_no": 26,
      "bbox": [
        222.00457763671875,
        275.7142028808594,
        232.26803588867188,
        371.9878234863281
      ],
      "text": "Test Loss (at convergence)"
    },
    {
      "page_no": 26,
      "bbox": [
        291.10101318359375,
        273.2021179199219,
        366.8106994628906,
        285.2401123046875
      ],
      "text": "L = (N/8.8 1013)\n0.076"
    },
    {
      "page_no": 26,
      "bbox": [
        291.10101318359375,
        284.7276306152344,
        383.5574645996094,
        296.765625
      ],
      "text": "L =\n0.25log(N/7.1 1012)"
    },
    {
      "page_no": 26,
      "bbox": [
        90.0,
        407.8969421386719,
        521.9976806640625,
        428.99908447265625
      ],
      "text": "Figure 23\nThe trend for performance as a function of parameter count, L(N), is ﬁt better by a power law\nthan by other functions such as a logarithm at a qualitative level."
    },
    {
      "page_no": 26,
      "bbox": [
        90.0,
        450.6144714355469,
        521.9982299804688,
        482.39508056640625
      ],
      "text": "schedules appear to be statistical noise, and provide a rough gauge for the scale of variation between different\ntraining runs. Experiments on larger models suggest that the variation in the ﬁnal test loss between different\nrandom seeds is roughly constant in magnitude for different model sizes."
    },
    {
      "page_no": 26,
      "bbox": [
        90.0,
        488.82147216796875,
        521.9982299804688,
        509.6930847167969
      ],
      "text": "We found that larger models require a smaller learning rate to prevent divergence, while smaller models can\ntolerate a larger learning rate. To implement this, the following rule of thumb was used for most runs:"
    },
    {
      "page_no": 26,
      "bbox": [
        218.38400268554688,
        515.2747802734375,
        522.0000610351562,
        525.5970458984375
      ],
      "text": "LR(N) ≈0.003239 + −0.0001395 log(N)\n(D.1)"
    },
    {
      "page_no": 26,
      "bbox": [
        90.0,
        531.5384521484375,
        521.9981689453125,
        563.3190307617188
      ],
      "text": "We expect that this formula could be improved. There may be a dependence on network width, likely set by\nthe initialization scale. The formula also breaks down for N > 1010 parameters. Nevertheless, we found that\nit works sufﬁciently well for the models we considered."
    },
    {
      "page_no": 26,
      "bbox": [
        90.0,
        577.3675537109375,
        262.1835632324219,
        587.3301391601562
      ],
      "text": "D.7\nFit Details and Power Law Quality"
    },
    {
      "page_no": 26,
      "bbox": [
        89.99996948242188,
        597.2029418945312,
        522.004150390625,
        618.3050537109375
      ],
      "text": "We experimented with a number of functional forms for the ﬁts to L(N), L(C), and L(D); the power-law\nﬁts were qualitatively much more accurate than other functions such as logarithms (see Figure 23)."
    },
    {
      "page_no": 26,
      "bbox": [
        89.99993896484375,
        624.5009155273438,
        522.0046997070312,
        667.4210815429688
      ],
      "text": "For L(C), we do not include small models with only 1 layer in the ﬁt, as the transition from 1 to 2 layers\ncauses a noticable lump in the data. For L(N) we also do not include very small models with only 1 layer in\nthe ﬁt, and we exclude the largest models that have not trained fully to convergence. Fit parameters change\nmarginally if we do include them, and the trend extrapolates well in both directions regardless."
    },
    {
      "page_no": 26,
      "bbox": [
        89.99993896484375,
        681.4695434570312,
        252.4202423095703,
        691.43212890625
      ],
      "text": "D.8\nGeneralization and Architecture"
    },
    {
      "page_no": 26,
      "bbox": [
        89.99993896484375,
        701.5354614257812,
        521.998046875,
        722.4070434570312
      ],
      "text": "In ﬁgure 24 we show that generalization to other data distributions does not depend on network depth when we\nhold the total parameter count ﬁxed. It seems to depend only on the performance on the training distribution."
    },
    {
      "page_no": 26,
      "bbox": [
        301.0189208984375,
        742.3324584960938,
        310.98150634765625,
        752.2950439453125
      ],
      "text": "26"
    },
    {
      "page_no": 27,
      "bbox": [
        241.39755249023438,
        188.6668701171875,
        322.75360107421875,
        199.50469970703125
      ],
      "text": "101\n102"
    },
    {
      "page_no": 27,
      "bbox": [
        274.3077697753906,
        198.3541259765625,
        296.7517395019531,
        208.97129821777344
      ],
      "text": "Depth"
    },
    {
      "page_no": 27,
      "bbox": [
        212.12574768066406,
        176.56227111816406,
        223.7120819091797,
        187.179443359375
      ],
      "text": "2.3"
    },
    {
      "page_no": 27,
      "bbox": [
        212.12574768066406,
        158.130126953125,
        223.7120819091797,
        168.74729919433594
      ],
      "text": "2.4"
    },
    {
      "page_no": 27,
      "bbox": [
        212.12574768066406,
        139.69798278808594,
        223.7120819091797,
        150.31515502929688
      ],
      "text": "2.5"
    },
    {
      "page_no": 27,
      "bbox": [
        212.12574768066406,
        121.26586151123047,
        223.7120819091797,
        131.88302612304688
      ],
      "text": "2.6"
    },
    {
      "page_no": 27,
      "bbox": [
        212.12574768066406,
        102.83372497558594,
        223.7120819091797,
        113.45088195800781
      ],
      "text": "2.7"
    },
    {
      "page_no": 27,
      "bbox": [
        212.12574768066406,
        84.4015884399414,
        223.7120819091797,
        95.01874542236328
      ],
      "text": "2.8"
    },
    {
      "page_no": 27,
      "bbox": [
        200.4424591064453,
        114.38996124267578,
        211.05963134765625,
        149.2509765625
      ],
      "text": "Test Loss"
    },
    {
      "page_no": 27,
      "bbox": [
        362.9539489746094,
        108.38440704345703,
        409.4034118652344,
        154.15164184570312
      ],
      "text": "Wikipedia\nBooks\nInternet Books\nCommon Crawl\nWebText2 (Train)\nWebText2 (Test)"
    },
    {
      "page_no": 27,
      "bbox": [
        89.99999237060547,
        218.66754150390625,
        521.999267578125,
        261.4480895996094
      ],
      "text": "Figure 24\nWe show evaluations on a series of datasets for models with approximately 1.5 Billion param-\neters. We observe no effect of depth on generalization; generalization performance depends primarily on\ntraining distribution performance. The 12-layer model overﬁt the Internet Books dataset and we show the\nearly-stopped performance; we have not seen this surprising result in other experiments."
    },
    {
      "page_no": 27,
      "bbox": [
        89.99999237060547,
        289.8351745605469,
        164.17005920410156,
        301.7903747558594
      ],
      "text": "List of Figures"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        319.8464660644531,
        521.99853515625,
        329.80908203125
      ],
      "text": "1\nSummary of simple power laws. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        336.91546630859375,
        521.99853515625,
        346.8780822753906
      ],
      "text": "2\nIllustration of sample efﬁciency and compute efﬁciency. . . . . . . . . . . . . . . . . . . . .\n4"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        353.9854736328125,
        521.99853515625,
        363.9480895996094
      ],
      "text": "3\nHow to scale up model size, batch size, and serial steps . . . . . . . . . . . . . . . . . . . .\n4"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        371.0544738769531,
        521.9983520507812,
        381.01708984375
      ],
      "text": "4\nPerformance when varying model and data size, or model and training steps, simultaneously\n5"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        388.1244812011719,
        521.9984130859375,
        398.08709716796875
      ],
      "text": "5\nWeak dependence of performance on hyperparameter tuning . . . . . . . . . . . . . . . . .\n8"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        405.1934814453125,
        521.9983520507812,
        415.1560974121094
      ],
      "text": "6\nComparison of performance trend when including or excluding embeddings . . . . . . . . .\n8"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        422.26348876953125,
        521.9984741210938,
        432.2261047363281
      ],
      "text": "7\nLSTM and Transformer performance comparison . . . . . . . . . . . . . . . . . . . . . . .\n9"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        439.3324890136719,
        521.9985961914062,
        449.29510498046875
      ],
      "text": "8\nGeneralization to other test datasets\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n10"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        456.4024963378906,
        521.99853515625,
        466.3651123046875
      ],
      "text": "9\nUniversality of overﬁtting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n11"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        473.47149658203125,
        521.99853515625,
        483.4341125488281
      ],
      "text": "10\nCritical batch size . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n12"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        490.54150390625,
        521.9984741210938,
        500.5041198730469
      ],
      "text": "11\nPerformance versus compute budget or number of parameter updates . . . . . . . . . . . . .\n14"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        507.6104736328125,
        521.99853515625,
        517.5730590820312
      ],
      "text": "12\nTraining on suboptimal models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n15"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        524.6805419921875,
        521.9984741210938,
        534.6431274414062
      ],
      "text": "13\nComparison between empirical and adjusted compute trends . . . . . . . . . . . . . . . . .\n15"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        541.74951171875,
        521.9984741210938,
        551.7120971679688
      ],
      "text": "14\nOptimal model size and serial number of steps versus compute budget . . . . . . . . . . . .\n16"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        558.8195190429688,
        521.99853515625,
        568.7821044921875
      ],
      "text": "15\nContradiction between compute and data trends . . . . . . . . . . . . . . . . . . . . . . . .\n17"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        575.8885498046875,
        521.9983520507812,
        585.8511352539062
      ],
      "text": "16\nEarly stopping lower bound and training curves for overﬁt models\n. . . . . . . . . . . . . .\n23"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        592.95849609375,
        521.99853515625,
        602.9210815429688
      ],
      "text": "17\nUniversal transformers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n24"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        610.0275268554688,
        521.99853515625,
        619.9901123046875
      ],
      "text": "18\nBatch size scans . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n24"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        627.0975341796875,
        521.99853515625,
        637.0601196289062
      ],
      "text": "19\nAnother look at sample efﬁciency\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n24"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        644.16650390625,
        521.9984130859375,
        654.1290893554688
      ],
      "text": "20\nPower-law dependence of performance on position in context . . . . . . . . . . . . . . . . .\n25"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        661.2365112304688,
        521.9984741210938,
        671.1990966796875
      ],
      "text": "21\nPerformance at different context positions versus model size\n. . . . . . . . . . . . . . . . .\n25"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        678.3055419921875,
        521.9985961914062,
        688.2681274414062
      ],
      "text": "22\nLearning rate schedule scan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n26"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        695.3755493164062,
        521.9984130859375,
        705.338134765625
      ],
      "text": "23\nComparison of Power-Law and Logarithmic Fits\n. . . . . . . . . . . . . . . . . . . . . . .\n26"
    },
    {
      "page_no": 27,
      "bbox": [
        104.9439926147461,
        712.4445190429688,
        521.9985961914062,
        722.4071044921875
      ],
      "text": "24\nGeneralization versus depth . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n27"
    },
    {
      "page_no": 27,
      "bbox": [
        301.01898193359375,
        742.33251953125,
        310.9815673828125,
        752.2951049804688
      ],
      "text": "27"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        72.78716278076172,
        158.64675903320312,
        84.74236297607422
      ],
      "text": "List of Tables"
    },
    {
      "page_no": 28,
      "bbox": [
        104.94400024414062,
        97.91450500488281,
        521.9984741210938,
        107.87710571289062
      ],
      "text": "1\nParameter and compute counts for Transformer . . . . . . . . . . . . . . . . . . . . . . . .\n7"
    },
    {
      "page_no": 28,
      "bbox": [
        104.94400024414062,
        114.12297058105469,
        521.9974365234375,
        124.31613159179688
      ],
      "text": "2\nFits to L(N, D) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n11"
    },
    {
      "page_no": 28,
      "bbox": [
        104.94400024414062,
        130.56297302246094,
        521.9974365234375,
        140.75613403320312
      ],
      "text": "3\nFits to L(N, S) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n14"
    },
    {
      "page_no": 28,
      "bbox": [
        104.94400024414062,
        147.23255920410156,
        521.9984741210938,
        157.19515991210938
      ],
      "text": "4\nKey trend equations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20"
    },
    {
      "page_no": 28,
      "bbox": [
        104.94400024414062,
        163.6725616455078,
        521.9985961914062,
        173.63516235351562
      ],
      "text": "5\nKey parameters to trend ﬁts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20"
    },
    {
      "page_no": 28,
      "bbox": [
        104.94400024414062,
        180.11158752441406,
        521.99853515625,
        190.07418823242188
      ],
      "text": "6\nTrends for compute-efﬁcient training . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        207.456298828125,
        145.54383850097656,
        219.4114990234375
      ],
      "text": "References"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        229.3006134033203,
        521.9981079101562,
        261.0812072753906
      ],
      "text": "[ACDE12]\nEduardo G Altmann, Giampaolo Cristadoro, and Mirko Degli Esposti. On the origin of long-\nrange correlations in texts. Proceedings of the National Academy of Sciences, 109(29):11582–\n11587, 2012. 25"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        266.5216064453125,
        521.998046875,
        287.3932189941406
      ],
      "text": "[AS17]\nMadhu S. Advani and Andrew M. Saxe. High-dimensional dynamics of generalization error in\nneural networks. arXiv, 2017, 1710.03667. 11, 18, 22"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99998474121094,
        292.8336181640625,
        522.002197265625,
        324.6142272949219
      ],
      "text": "[BB01]\nMichele Banko and Eric Brill. Scaling to very very large corpora for natural language disam-\nbiguation. In Proceedings of the 39th annual meeting on association for computational linguis-\ntics, pages 26–33. Association for Computational Linguistics, 2001. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        89.9999771118164,
        330.05462646484375,
        521.9982299804688,
        350.9262390136719
      ],
      "text": "[BHMM18] Mikhail Belkin, Daniel Hsu, Siyuan Ma, and Soumik Mandal. Reconciling modern machine\nlearning and the bias-variance trade-off. arXiv, 2018, 1812.11118. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99996948242188,
        357.3851623535156,
        521.9996337890625,
        378.4332275390625
      ],
      "text": "[Bia12]\nGÃŠrard Biau. Analysis of a random forests model. Journal of Machine Learning Research,\n13(Apr):1063–1095, 2012. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99996948242188,
        383.87261962890625,
        522.0213623046875,
        415.9022521972656
      ],
      "text": "[CGRS19]\nRewon Child, Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with\nsparse transformers. CoRR, abs/1904.10509, 2019, 1904.10509. URL http://arxiv.org/\nabs/1904.10509. 19"
    },
    {
      "page_no": 28,
      "bbox": [
        89.9999771118164,
        421.0936279296875,
        521.9981079101562,
        441.9652404785156
      ],
      "text": "[DCLT18]\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep\nbidirectional transformers for language understanding, 2018, arXiv:1810.04805. 2"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99996948242188,
        445.8949279785156,
        522.0213623046875,
        479.43426513671875
      ],
      "text": "[DGV+18] Mostafa Dehghani, Stephan Gouws, Oriol Vinyals, Jakob Uszkoreit, and Lukasz Kaiser. Uni-\nversal transformers. CoRR, abs/1807.03819, 2018, 1807.03819. URL http://arxiv.org/\nabs/1807.03819. 6, 9, 23, 24"
    },
    {
      "page_no": 28,
      "bbox": [
        89.9999771118164,
        484.62664794921875,
        521.998046875,
        505.4982604980469
      ],
      "text": "[EP94]\nWerner Ebeling and Thorsten Pöschel. Entropy and long-range correlations in literary english.\nEPL (Europhysics Letters), 26(4):241, 1994. 25"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99998474121094,
        510.9376220703125,
        493.7554931640625,
        521.1482543945312
      ],
      "text": "[Fou]\nThe Common Crawl Foundation. Common crawl. URL http://commoncrawl.org. 7"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        526.3406372070312,
        521.9981079101562,
        547.2122192382812
      ],
      "text": "[GARD18] Guy Gur-Ari, Daniel A. Roberts, and Ethan Dyer. Gradient descent happens in a tiny subspace.\n2018, arXiv:1812.04754. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        551.1419067382812,
        521.9984130859375,
        584.4332275390625
      ],
      "text": "[GJS+19]\nMario Geiger, Arthur Jacot, Stefano Spigler, Franck Gabriel, Levent Sagun, Stéphane d’Ascoli,\nGiulio Biroli, Clément Hongler, and Matthieu Wyart. Scaling description of generalization with\nnumber of parameters in deep learning. arXiv, 2019, 1901.01608. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        90.0,
        589.8726196289062,
        521.998046875,
        621.9022827148438
      ],
      "text": "[GKX19]\nBehrooz Ghorbani, Shankar Krishnan, and Ying Xiao. An investigation into neural net op-\ntimization via hessian eigenvalue density. CoRR, abs/1901.10159, 2019, 1901.10159. URL\nhttp://arxiv.org/abs/1901.10159. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99996948242188,
        626.9171752929688,
        522.0014038085938,
        648.2132568359375
      ],
      "text": "[Goo01]\nJoshua Goodman. A bit of progress in language modeling. CoRR, cs.CL/0108005, 2001. URL\nhttp://arxiv.org/abs/cs.CL/0108005. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99993896484375,
        653.2291870117188,
        522.00048828125,
        674.2772216796875
      ],
      "text": "[GRK17]\nScott Gray, Alec Radford, and Diederik P Kingma. Gpu kernels for block-sparse weights. ope-\nnai.com, 2017. 19"
    },
    {
      "page_no": 28,
      "bbox": [
        89.99994659423828,
        679.7176513671875,
        522.0016479492188,
        722.4071655273438
      ],
      "text": "[HAD19]\nJoel Hestness, Newsha Ardalani, and Gregory Diamos. Beyond human-level accuracy: Compu-\ntational challenges in deep learning. In Proceedings of the 24th Symposium on Principles and\nPractice of Parallel Programming, PPoPP ’19, pages 1–14, New York, NY, USA, 2019. ACM.\ndoi:10.1145/3293883.3295710. 18"
    },
    {
      "page_no": 28,
      "bbox": [
        301.0189208984375,
        742.3326416015625,
        310.98150634765625,
        752.2952270507812
      ],
      "text": "28"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        72.89674377441406,
        521.998291015625,
        106.43610382080078
      ],
      "text": "[HCC+18]\nYanping Huang, Yonglong Cheng, Dehao Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc V. Le,\nand Zhifeng Chen. Gpipe: Efﬁcient training of giant neural networks using pipeline parallelism.\nCoRR, abs/1811.06965, 2018, 1811.06965. URL http://arxiv.org/abs/1811.06965. 19"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        109.92274475097656,
        521.99853515625,
        143.21408081054688
      ],
      "text": "[HNA+17] Joel Hestness, Sharan Narang, Newsha Ardalani, Gregory Diamos, Heewoo Jun, Hassan Kia-\nninejad, Md. Mostofa Ali Patwary, Yang Yang, and Yanqi Zhou. Deep learning scaling is pre-\ndictable, empirically, 2017, 1712.00409. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        148.4584503173828,
        522.004638671875,
        180.24002075195312
      ],
      "text": "[JGH18]\nArthur Jacot, Franck Gabriel, and Clément Hongler. Neural tangent kernel: Convergence and\ngeneralization in neural networks. In Advances in neural information processing systems, pages\n8571–8580, 2018. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        185.48439025878906,
        521.9982299804688,
        206.35598754882812
      ],
      "text": "[KB14]\nDiederik P. Kingma and Jimmy Ba.\nAdam: A method for stochastic optimization, 2014,\n1412.6980. 7"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        211.6013946533203,
        444.3995056152344,
        221.56399536132812
      ],
      "text": "[Kom19]\nAran Komatsuzaki. One epoch is all you need, 2019, arXiv:1906.06669. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        226.8094024658203,
        522.0045166015625,
        269.74700927734375
      ],
      "text": "[KSH12]\nAlex Krizhevsky, Ilya Sutskever, and Geoffrey E. Hinton. Imagenet classiﬁcation with deep\nconvolutional neural networks. In Proceedings of the 25th International Conference on Neural\nInformation Processing Systems - Volume 1, NIPS’12, pages 1097–1105, USA, 2012. Curran\nAssociates Inc. URL http://dl.acm.org/citation.cfm?id=2999134.2999257. 19"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00006103515625,
        273.233642578125,
        521.99853515625,
        306.52496337890625
      ],
      "text": "[LCG+19]\nZhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and Radu\nSoricut.\nAlbert: A lite bert for self-supervised learning of language representations, 2019,\n1909.11942. 9"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00004577636719,
        310.2596435546875,
        522.0169677734375,
        354.7079772949219
      ],
      "text": "[LOG+19]\nYinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike\nLewis, Luke Zettlemoyer, and Veselin Stoyanov. Roberta: A robustly optimized BERT pretrain-\ning approach. CoRR, abs/1907.11692, 2019, 1907.11692. URL http://arxiv.org/abs/\n1907.11692. 2"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00006866455078,
        358.19464111328125,
        521.9996948242188,
        391.7339782714844
      ],
      "text": "[LSP+18]\nPeter J. Liu, Mohammad Saleh, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser, and\nNoam Shazeer. Generating wikipedia by summarizing long sequences. arXiv:1801.10198 [cs],\n2018, 1801.10198. URL http://arxiv.org/abs/1801.10198. 2, 6"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        396.5549011230469,
        521.9999389648438,
        417.60296630859375
      ],
      "text": "[LT16]\nHenry W Lin and Max Tegmark. Criticality in formal languages and statistical physics. arXiv\npreprint arXiv:1606.06737, 2016. 25"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        421.337646484375,
        521.99853515625,
        454.6279602050781
      ],
      "text": "[LXS+19]\nJaehoon Lee, Lechao Xiao, Samuel S. Schoenholz, Yasaman Bahri, Roman Novak, Jascha Sohl-\nDickstein, and Jeffrey Pennington. Wide neural networks of any depth evolve as linear models\nunder gradient descent, 2019, arXiv:1902.06720. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        459.87335205078125,
        521.9982299804688,
        480.7449645996094
      ],
      "text": "[MKAT18] Sam McCandlish, Jared Kaplan, Dario Amodei, and OpenAI Dota Team. An empirical model\nof large-batch training, 2018, arXiv:1812.06162. 3, 5, 6, 12, 13, 21"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        485.9903564453125,
        521.9982299804688,
        507.1099853515625
      ],
      "text": "[Pap18]\nVardan Papyan. The full spectrum of deep net hessians at scale: Dynamics with sample size.\nCoRR, abs/1811.07062, 2018, 1811.07062. URL http://arxiv.org/abs/1811.07062. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.00003051757812,
        512.1073608398438,
        522.001953125,
        543.887939453125
      ],
      "text": "[RNSS18]\nAlec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. Improving language\nunderstanding by generative pre-training. URL https://s3-us-west-2. amazonaws. com/openai-\nassets/research-covers/languageunsupervised/language understanding paper. pdf, 2018. 2, 6"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        549.1333618164062,
        521.998046875,
        570.0049438476562
      ],
      "text": "[RRBS19a] Jonathan S. Rosenfeld, Amir Rosenfeld, Yonatan Belinkov, and Nir Shavit.\nA constructive\nprediction of the generalization error across scales, 2019, 1909.12673. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        575.2493896484375,
        521.998046875,
        596.1219482421875
      ],
      "text": "[RRBS19b] Jonathan S. Rosenfeld, Amir Rosenfeld, Yonatan Belinkov, and Nir Shavit.\nA constructive\nprediction of the generalization error across scales, 2019, arXiv:1909.12673. 18"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        599.8566284179688,
        521.9984741210938,
        633.1469116210938
      ],
      "text": "[RSR+19]\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena,\nYanqi Zhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a uniﬁed\ntext-to-text transformer, 2019, arXiv:1910.10683. 2"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        636.8826293945312,
        521.9976196289062,
        659.2639770507812
      ],
      "text": "[RWC+19] Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language\nmodels are unsupervised multitask learners. openai.com, 2019. 2, 5, 6, 7, 8"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        662.9996337890625,
        521.99853515625,
        696.2899780273438
      ],
      "text": "[SCP+18]\nNoam Shazeer, Youlong Cheng, Niki Parmar, Dustin Tran, Ashish Vaswani, Penporn Koanan-\ntakool, Peter Hawkins, HyoukJoong Lee, Mingsheng Hong, Cliff Young, Ryan Sepassi, and\nBlake Hechtman. Mesh-tensorﬂow: Deep learning for supercomputers, 2018, 1811.02084. 19"
    },
    {
      "page_no": 29,
      "bbox": [
        90.0,
        701.5353393554688,
        521.9981689453125,
        722.4069213867188
      ],
      "text": "[SHB15]\nRico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare words\nwith subword units. CoRR, 2015, 1508.07909. 6"
    },
    {
      "page_no": 29,
      "bbox": [
        301.0190124511719,
        742.3323974609375,
        310.9815979003906,
        752.2949829101562
      ],
      "text": "29"
    },
    {
      "page_no": 30,
      "bbox": [
        89.99996948242188,
        72.89674377441406,
        522.0227661132812,
        572.7869262695312
      ],
      "text": "[SLA+18]\nChristopher J. Shallue, Jaehoon Lee, Joe Antognini, Jascha Sohl-Dickstein, Roy Frostig, and\nGeorge E. Dahl. Measuring the effects of data parallelism on neural network training, 2018,\narXiv:1811.03600. 12\n[SS18]\nNoam Shazeer and Mitchell Stern. Adafactor: Adaptive learning rates with sublinear memory\ncost. CoRR, abs/1804.04235, 2018, 1804.04235. URL http://arxiv.org/abs/1804.04235.\n7\n[THK18]\nStefan Thurner, Rudolf Hanel, and Peter Klimek. Introduction to the theory of complex systems.\nOxford University Press, 2018. 18\n[TL19]\nMingxing Tan and Quoc V. Le. Efﬁcientnet: Rethinking model scaling for convolutional neural\nnetworks. CoRR, abs/1905.11946, 2019, 1905.11946. URL http://arxiv.org/abs/1905.\n11946. 18\n[VSP+17]\nAshish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez,\nŁ ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In I. Guyon, U. V. Luxburg,\nS. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances in Neural\nInformation Processing Systems 30, pages 5998–6008. Curran Associates, Inc., 2017. URL\nhttp://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf. 2, 6\n[VWB16]\nAndreas Veit, Michael Wilber, and Serge Belongie. Residual networks behave like ensembles\nof relatively shallow networks, 2016, arXiv:1605.06431. 8, 18\n[Was06]\nLarry Wasserman. All of nonparametric statistics. Springer Science & Business Media, 2006.\n18\n[WPN+19] Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill,\nOmer Levy, and Samuel R. Bowman. Superglue: A stickier benchmark for general-purpose\nlanguage understanding systems, 2019, 1905.00537. 2\n[WRH17]\nYu-Xiong Wang, Deva Ramanan, and Martial Hebert. Growing a brain: Fine-tuning by in-\ncreasing model capacity. 2017 IEEE Conference on Computer Vision and Pattern Recognition\n(CVPR), Jul 2017. doi:10.1109/cvpr.2017.323. 19\n[WYL19]\nWei Wen, Feng Yan, and Hai Li. Autogrow: Automatic layer growing in deep convolutional\nnetworks, 2019, 1906.02909. 19\n[YDY+19] Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, and Quoc V.\nLe.\nXlnet:\nGeneralized autoregressive pretraining for language understanding, 2019,\narXiv:1906.08237. 2\n[ZK16]\nSergey Zagoruyko and Nikos Komodakis. Wide residual networks. Procedings of the British\nMachine Vision Conference 2016, 2016. doi:10.5244/c.30.87. 18\n[ZKZ+15]\nYukun Zhu, Ryan Kiros, Rich Zemel, Ruslan Salakhutdinov, Raquel Urtasun, Antonio Tor-\nralba, and Sanja Fidler. Aligning books and movies: Towards story-like visual explanations by\nwatching movies and reading books. 2015 IEEE International Conference on Computer Vision\n(ICCV), Dec 2015. doi:10.1109/iccv.2015.11. 7\n[ZLN+19]\nGuodong Zhang, Lala Li, Zachary Nado, James Martens, Sushant Sachdeva, George E. Dahl,\nChristopher J. Shallue, and Roger B. Grosse. Which algorithmic choices matter at which batch\nsizes? insights from a noisy quadratic model. CoRR, abs/1907.04164, 2019, 1907.04164. URL\nhttp://arxiv.org/abs/1907.04164. 12, 18"
    },
    {
      "page_no": 30,
      "bbox": [
        301.0189514160156,
        742.332275390625,
        310.9815368652344,
        752.2948608398438
      ],
      "text": "30"
    }
  ],
  "pictures": [
    {
      "page_no": 4,
      "bbox": [
        458.9425964355469,
        99.1944351196289,
        465.1444091796875,
        221.53903198242188
      ],
      "xref": 0,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p4_blk1_crop.png"
    },
    {
      "page_no": 4,
      "bbox": [
        457.0,
        122.0,
        513.0,
        128.0
      ],
      "xref": 16,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p4_blk2_crop.png"
    },
    {
      "page_no": 5,
      "bbox": [
        487.297607421875,
        83.22895050048828,
        491.1846923828125,
        166.5856475830078
      ],
      "xref": 21,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p5_blk1_crop.png"
    },
    {
      "page_no": 14,
      "bbox": [
        258.43133544921875,
        84.83869171142578,
        263.3700256347656,
        181.63720703125
      ],
      "xref": 10,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p14_blk1_crop.png"
    },
    {
      "page_no": 14,
      "bbox": [
        489.068115234375,
        85.03239440917969,
        493.9988098144531,
        181.6741180419922
      ],
      "xref": 28,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p14_blk2_crop.png"
    },
    {
      "page_no": 23,
      "bbox": [
        484.8689270019531,
        78.04327392578125,
        490.4088439941406,
        183.80557250976562
      ],
      "xref": 18,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p23_blk1_crop.png"
    },
    {
      "page_no": 24,
      "bbox": [
        276.0809631347656,
        281.71405029296875,
        281.1075744628906,
        380.23541259765625
      ],
      "xref": 29,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p24_blk1_crop.png"
    },
    {
      "page_no": 24,
      "bbox": [
        485.9299621582031,
        281.71405029296875,
        490.9565734863281,
        380.23541259765625
      ],
      "xref": 42,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p24_blk2_crop.png"
    },
    {
      "page_no": 24,
      "bbox": [
        277.59088134765625,
        555.7698974609375,
        282.0284729003906,
        648.95947265625
      ],
      "xref": 57,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p24_blk3_crop.png"
    },
    {
      "page_no": 24,
      "bbox": [
        491.42108154296875,
        555.9823608398438,
        496.2933044433594,
        648.9976806640625
      ],
      "xref": 73,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p24_blk4_crop.png"
    },
    {
      "page_no": 25,
      "bbox": [
        279.95172119140625,
        91.18873596191406,
        284.9078674316406,
        186.25689697265625
      ],
      "xref": 15,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p25_blk1_crop.png"
    },
    {
      "page_no": 25,
      "bbox": [
        486.52294921875,
        85.091064453125,
        491.55804443359375,
        183.77902221679688
      ],
      "xref": 29,
      "image_path": "../data/parsed_documents/2001.08361/images/2001.08361_p25_blk2_crop.png"
    }
  ],
  "tables": [
    {
      "page_no": 1,
      "index": 1,
      "flavor": "stream",
      "nrows": 10,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p1_table1_stream.csv"
    },
    {
      "page_no": 2,
      "index": 1,
      "flavor": "stream",
      "nrows": 14,
      "ncols": 3,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p2_table1_stream.csv"
    },
    {
      "page_no": 3,
      "index": 1,
      "flavor": "stream",
      "nrows": 39,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p3_table1_stream.csv"
    },
    {
      "page_no": 4,
      "index": 1,
      "flavor": "stream",
      "nrows": 51,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p4_table1_stream.csv"
    },
    {
      "page_no": 5,
      "index": 1,
      "flavor": "stream",
      "nrows": 19,
      "ncols": 9,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p5_table1_stream.csv"
    },
    {
      "page_no": 5,
      "index": 2,
      "flavor": "stream",
      "nrows": 51,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p5_table2_stream.csv"
    },
    {
      "page_no": 6,
      "index": 1,
      "flavor": "stream",
      "nrows": 7,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p6_table1_stream.csv"
    },
    {
      "page_no": 6,
      "index": 2,
      "flavor": "stream",
      "nrows": 19,
      "ncols": 3,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p6_table2_stream.csv"
    },
    {
      "page_no": 7,
      "index": 1,
      "flavor": "lattice",
      "nrows": 6,
      "ncols": 3,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p7_table1_lattice.csv"
    },
    {
      "page_no": 8,
      "index": 1,
      "flavor": "lattice",
      "nrows": 3,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p8_table1_lattice.csv"
    },
    {
      "page_no": 8,
      "index": 2,
      "flavor": "lattice",
      "nrows": 2,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p8_table2_lattice.csv"
    },
    {
      "page_no": 9,
      "index": 1,
      "flavor": "stream",
      "nrows": 19,
      "ncols": 7,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p9_table1_stream.csv"
    },
    {
      "page_no": 9,
      "index": 2,
      "flavor": "stream",
      "nrows": 39,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p9_table2_stream.csv"
    },
    {
      "page_no": 10,
      "index": 1,
      "flavor": "stream",
      "nrows": 14,
      "ncols": 6,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p10_table1_stream.csv"
    },
    {
      "page_no": 10,
      "index": 2,
      "flavor": "stream",
      "nrows": 21,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p10_table2_stream.csv"
    },
    {
      "page_no": 11,
      "index": 1,
      "flavor": "stream",
      "nrows": 19,
      "ncols": 8,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p11_table1_stream.csv"
    },
    {
      "page_no": 11,
      "index": 2,
      "flavor": "stream",
      "nrows": 31,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p11_table2_stream.csv"
    },
    {
      "page_no": 12,
      "index": 1,
      "flavor": "stream",
      "nrows": 15,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p12_table1_stream.csv"
    },
    {
      "page_no": 13,
      "index": 1,
      "flavor": "stream",
      "nrows": 56,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p13_table1_stream.csv"
    },
    {
      "page_no": 14,
      "index": 1,
      "flavor": "stream",
      "nrows": 13,
      "ncols": 7,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p14_table1_stream.csv"
    },
    {
      "page_no": 15,
      "index": 1,
      "flavor": "stream",
      "nrows": 7,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p15_table1_stream.csv"
    },
    {
      "page_no": 16,
      "index": 1,
      "flavor": "stream",
      "nrows": 29,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p16_table1_stream.csv"
    },
    {
      "page_no": 17,
      "index": 1,
      "flavor": "stream",
      "nrows": 41,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p17_table1_stream.csv"
    },
    {
      "page_no": 18,
      "index": 1,
      "flavor": "stream",
      "nrows": 13,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p18_table1_stream.csv"
    },
    {
      "page_no": 19,
      "index": 1,
      "flavor": "stream",
      "nrows": 32,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p19_table1_stream.csv"
    },
    {
      "page_no": 20,
      "index": 1,
      "flavor": "lattice",
      "nrows": 6,
      "ncols": 5,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p20_table1_lattice.csv"
    },
    {
      "page_no": 20,
      "index": 2,
      "flavor": "lattice",
      "nrows": 6,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p20_table2_lattice.csv"
    },
    {
      "page_no": 20,
      "index": 3,
      "flavor": "lattice",
      "nrows": 4,
      "ncols": 3,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p20_table3_lattice.csv"
    },
    {
      "page_no": 21,
      "index": 1,
      "flavor": "stream",
      "nrows": 16,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p21_table1_stream.csv"
    },
    {
      "page_no": 22,
      "index": 1,
      "flavor": "stream",
      "nrows": 8,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p22_table1_stream.csv"
    },
    {
      "page_no": 22,
      "index": 2,
      "flavor": "stream",
      "nrows": 8,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p22_table2_stream.csv"
    },
    {
      "page_no": 23,
      "index": 1,
      "flavor": "stream",
      "nrows": 16,
      "ncols": 9,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p23_table1_stream.csv"
    },
    {
      "page_no": 23,
      "index": 2,
      "flavor": "stream",
      "nrows": 12,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p23_table2_stream.csv"
    },
    {
      "page_no": 23,
      "index": 3,
      "flavor": "stream",
      "nrows": 20,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p23_table3_stream.csv"
    },
    {
      "page_no": 24,
      "index": 1,
      "flavor": "stream",
      "nrows": 11,
      "ncols": 5,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p24_table1_stream.csv"
    },
    {
      "page_no": 24,
      "index": 2,
      "flavor": "stream",
      "nrows": 11,
      "ncols": 10,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p24_table2_stream.csv"
    },
    {
      "page_no": 24,
      "index": 3,
      "flavor": "stream",
      "nrows": 14,
      "ncols": 8,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p24_table3_stream.csv"
    },
    {
      "page_no": 25,
      "index": 1,
      "flavor": "stream",
      "nrows": 18,
      "ncols": 8,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p25_table1_stream.csv"
    },
    {
      "page_no": 25,
      "index": 2,
      "flavor": "stream",
      "nrows": 15,
      "ncols": 3,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p25_table2_stream.csv"
    },
    {
      "page_no": 26,
      "index": 1,
      "flavor": "lattice",
      "nrows": 2,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p26_table1_lattice.csv"
    },
    {
      "page_no": 27,
      "index": 1,
      "flavor": "stream",
      "nrows": 12,
      "ncols": 5,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p27_table1_stream.csv"
    },
    {
      "page_no": 27,
      "index": 2,
      "flavor": "stream",
      "nrows": 8,
      "ncols": 1,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p27_table2_stream.csv"
    },
    {
      "page_no": 27,
      "index": 3,
      "flavor": "stream",
      "nrows": 25,
      "ncols": 20,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p27_table3_stream.csv"
    },
    {
      "page_no": 28,
      "index": 1,
      "flavor": "stream",
      "nrows": 7,
      "ncols": 44,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p28_table1_stream.csv"
    },
    {
      "page_no": 28,
      "index": 2,
      "flavor": "stream",
      "nrows": 41,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p28_table2_stream.csv"
    },
    {
      "page_no": 29,
      "index": 1,
      "flavor": "stream",
      "nrows": 52,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p29_table1_stream.csv"
    },
    {
      "page_no": 30,
      "index": 1,
      "flavor": "stream",
      "nrows": 41,
      "ncols": 2,
      "csv_path": "../data/parsed_documents/2001.08361/2001.08361_p30_table1_stream.csv"
    }
  ]
}