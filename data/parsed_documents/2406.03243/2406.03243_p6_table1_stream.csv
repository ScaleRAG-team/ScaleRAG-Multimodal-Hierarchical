"Alloc
Alloc
Resumed",""
"","Instance"
"Destination instance",""
"","Migration 
Local Scheduler"
"","llumlet"
"","Coordinator"
"Figure 7: Handshake during migration.",""
"","llumlet"
"","Executor"
"which is negligible regardless of the sequence length.","Executor"
"The request migration approach of Llumnix borrows the",""
"","Instance"
"",""
"key concept introduced in virtual machine (VM) live migra-","GPU"
"tion [17], which gradually reduces the working set to mini-","Instance
Model Instance"
"mize the downtime. Llumnix does not require the dirty page",""
"tracing in VM migration as the working set (i.e., KV cache) is","Figure 8: Llumnix architecture."
"append-only and does not change during migration. However,",""
"LLM serving further introduces additional challenges. Firstly,",""
"","schedulers, named llumlets, to enable continuous rescheduling"
"as both the source and destination instances are continually",""
"","efficiently (Figure 8). Llumnix defines a clean separation of"
"processing requests,
the request might run out of memory",""
"","concerns with a narrow interface between the two levels. The"
"during migration. Secondly, the request can complete in the",""
"","global scheduler does not directly track or schedule the run-"
"middle of migration, due to the unpredictable execution (i.e.,",""
"","ning requests; instead, it makes all scheduling decisions ori-"
"generating EOS token) and the continuous batching [67]. To",""
"","ented to the instances, according to the memory loads of them."
"handle such exceptions and guarantee correctness during the",""
"","This way,
the complexity of
the global scheduler remains"
"asynchronous computation and memory copying, Llumnix in-",""
"","independent from the running requests, thereby preserving"
"troduces fine-grained coordination between the participating",""
"","similar scalability to schedulers without dynamic scheduling."
"instances with a handshake process (Figure 7). Before each",""
"","The loads are reported by the llumlets periodically, based on"
"stage, the source instance issues a pre-allocate request with",""
"","the request status and Llumnix’s scheduling policy."
"the number of blocks to migrate to make sure that the destina-",""
"","The global scheduler utilizes the load information to dis-"
"tion has enough space. The destination will try to allocate and",""
"","patch new requests, trigger migration across instances, and"
"reserve the blocks; if it succeeds or fails, the destination will",""
"","control the instance auto-scaling. In particular, for migration,"
"notify the source to proceed or abort the migration and clean",""
"","the decisions are not made for specific requests;
the global"
"the states, respectively. Similarly, after each stage, the source",""
"","scheduler just pairs the source and destination instances, only"
"instance also checks whether the request being migrated has",""
"","based on the loads, and marks them as in the corresponding"
"completed or been preempted — if it has, the source will no-",""
"","states to trigger the migration. The llumlets will decide the"
"tify the destination to abort and release the reserved blocks;",""
"","requests to migrate and execute the migration automatically."
"otherwise the source will go ahead to the next stage. The",""
"","The llumlet of each instance consists of a local scheduler"
"source or destination will also abort the migration if the other",""
"","and a migration coordinator. In addition to the functionalities"
"side fails. After the final stage finishes, the source releases",""
"","of similar roles in existing systems like queuing, batching,"
"its local blocks and notifies the destination to commit
the",""
"","and block management, an important new task of the local"
"migration and resume the execution of the request.",""
"","scheduler is to calculate the memory load of the instance. The"
"","load is not simply the physical memory being used; instead,"
"4.3
Distributed Scheduling Architecture","it is a sum of the “virtual usages” (§4.4) of the requests. The"
"","local scheduler is also responsible for deciding the requests"
"The live migration mechanism provides the foundation for",""
"","to migrate when triggered. Given the chosen requests,
the"
"runtime rescheduling of LLM inference requests. However,",""
"","migration coordinator will coordinate with the local scheduler"
"achieving fully dynamic scheduling is still non-trivial due to",""
"","and the other instance, and instruct the model executor to do"
"the higher scheduling pressure than in traditional schedulers.",""
"","the memory copying, as described before."
"In particular, Llumnix would need to continuously track and",""
"reschedule every single running request throughout the cluster,",""
"rather than only dispatch incoming requests for one time or","4.4
Dynamic Scheduling Policy"
"only manage running requests on one instance. This implies a",""
"","4.4.1
Goals and Definitions"
"higher scheduling frequency and a larger number of requests",""
"for the scheduler to track and schedule in each round.","Llumnix’s scheduling policy is designed with the following"
"Llumnix devises a scalable architecture that combines a","goals. The first is to improve prefill and decode latencies,"
"cluster-level global scheduler and distributed instance-level","by reducing queuing delays, preemptions, and interference."
