"","‚Ä¶"
"Key:",""
"=   Apply Verifier                             =   Full Solution                             =   Intermediate solution step                        =   Selected by verifier                     =   Rejected by verifier",""
"Figure 2 ‚à£ Comparing different PRM search methods. Left: Best-of-N samples N full answers and then selects the best",""
"answer according to the PRM final score. Center: Beam search samples N candidates at each step, and selects the top M",""
"according to the PRM to continue the search from. Right: lookahead-search extends each step in beam-search to utilize a k-step",""
"lookahead while assessing which steps to retain and continue the search from. Thus lookahead-search needs more compute.",""
"",""
"Lookahead search. Lookahead search modifies how beam search evaluates individual steps.",""
"lookahead rollouts to improve the accuracy of the PRM‚Äôs value estimation in each step of the search",""
"process. Specifically, at each step in the beam search, rather than using the PRM score at the current step",""
"to select the top candidates, lookahead search performs a simulation, rolling out up to ùëò steps further",""
"while stopping early if the end of solution is reached. To minimize variance in the simulation rollout,",""
"we perform rollouts using temperature 0. The PRM‚Äôs prediction at the end of this rollout is then used",""
"to score the current step in the beam search. That is,","in other words, we can view beam search as a"
"special case of lookahead search with ùëò = 0. Given an accurate PRM, increasing ùëò should improve the",""
"accuracy of the per-step value estimates at the cost of additional compute. Also note that this version of",""
"lookahead search is a special case of MCTS [38], wherein the stochastic elements of MCTS, designed",""
"to facilitate exploration, are removed since the PRM is already trained and is frozen. These stochastic",""
"","elements are largely useful for learning the value function (which we‚Äôve already learned with our PRM),"
"but less useful at test-time when we want to exploit rather than explore. Therefore, lookahead search is",""
"largely representative of how MCTS-style methods would be applied at test-time.",""
"5.3. Analysis Results: Test-Time Scaling for Search with Verifiers",""
"We now present our results comparing various search algorithms and identify a prompt difficulty depen-",""
"dent compute-optimal scaling strategy for search methods.",""
"",""
"Comparing search algorithms. We first conduct a sweep over various search settings.",""
"","standard best-of-N approach, we sweep over the two main parameters that distinguish different tree-"
"search methods: beam-width ùëÄ and number of lookahead steps ùëò. While we are not able to extensively",""
"","sweep every single configuration, we sweep over the following settings with a maximum budget of 256:"
"1) Beam search with the beam width set to ‚àö",""
