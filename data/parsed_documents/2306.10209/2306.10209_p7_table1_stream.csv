"","","","","1 3","1 3
2 4","2 4","",""
"x Grad. after inter-comm
x Correct final grad.","1","3
2","4","","","1","3
2","4"
"Step 1: intra-node all-to-all","","Step 2: inter-node all-to-all","","","Step 1: intra-node all-to-all","","Step 2: inter-node all-to-all",""
"Figure 8: Gradient partition misplacement when applying","","","","","Figure 9: Tensor slices reordering to correct gradient mis-","","",""
"hierarchical all-to-all in qgZ.","","","","placement in qgZ.","","","",""
"","","","","","Comm.
forward","backward","backward",""
"","Our 2-step all-to-all communication works as follows, first we","","","","","","",""
"","","","","","Volume
all-gather","all-gather","reduce-scatter",""
"divide all gradients on each GPU into 4 chunks, then conduct our","","","","","","","",""
"","","","","","ZeRO-3
M","M","M",""
"intra-node all-to-all. After intra-node all-to-all finishes, GPU0 (i.e.,","","","","","","","",""
"","","","","","ZeRO++
0.5M","0","0.25M",""
"G0) holds partial aggregated gradient partition 1,2 whereas G1 holds","","","","","","","",""
"gradient partition 3,4. Same thing happens on G2 and G3. Since G1","","","","","Table 1: Communication volume comparison between ZeRO-","","",""
"does not have gradient partition 2 (which is supposed to be held by","","","","3 and ZeRO++.","","","",""
"G1) while G2 does not have gradient partition 3, after inter-node","","","","","","","",""
"all-to-all, there is gradient misplacement issue on both G1 and G2.","","","","","","","",""
"","We address this with tensor slice reordering. As shown in Fig-","","","","","","",""
"","","","","","communication volume from M to 0.5M. During the all-gather in","","",""
"ure 9, before intra-node all-to-all begin, we first swap the tensor","","","","","","","",""
"","","","","","the backward pass, by holding secondary weights partition within","","",""
"slice order of slice 2 and 3, which is shown as orange arrows. Then","","","","","","","",""
"","","","","","each node, we completely removed cross-node traffic. For reduce-","","",""
"after intra-node all-to-all is completed, G1 now has gradient 2 while","","","","","","","",""
"","","","","","scatter in the backward pass, by replacing reduce-scatter with our","","",""
"G2 has gradient 3. Therefore, after the inter-node all-to-all, all GPUs","","","","","","","",""
"","","","","","novel quantized gradient communication protocol, we reduce cross-","","",""
"get the correct gradient placement. Mathematically, given X GPUs","","","","","","","",""
"","","","","","node traffic from M to 0.25M. Therefore, compared with ZeRO-3,","","",""
"per node and Y nodes in total, each GPU will hold X*Y gradient","","","","","","","",""
"","","","","","ZeRO++ reduces communication volume from 3M down to 0.75M","","",""
"slices initially. Our tensor slice reordering works as follows:","","","","","","","",""
